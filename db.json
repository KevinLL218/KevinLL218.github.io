{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"source/img/avatar.jpg","path":"img/avatar.jpg","modified":1,"renderable":0},{"_id":"themes/3-hexo/source/css/gitalk.css","path":"css/gitalk.css","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/mobile.styl","path":"css/mobile.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/img/alipay.jpg","path":"img/alipay.jpg","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/img/article-list-background.jpeg","path":"img/article-list-background.jpeg","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/img/avatar1.jpg","path":"img/avatar1.jpg","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/img/brown-papersq.png","path":"img/brown-papersq.png","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/img/gov.png","path":"img/gov.png","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/img/school-book.png","path":"img/school-book.png","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/img/weixin.jpg","path":"img/weixin.jpg","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/js/gitalk.js","path":"js/gitalk.js","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/js/iconfont.js","path":"js/iconfont.js","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/js/gitment.js","path":"js/gitment.js","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/js/jquery.pjax.js","path":"js/jquery.pjax.js","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/js/script.js","path":"js/script.js","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/js/search.js","path":"js/search.js","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/js/titleTip.js","path":"js/titleTip.js","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/icomoon.eot","path":"css/fonts/icomoon.eot","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/icomoon.svg","path":"css/fonts/icomoon.svg","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/icomoon.ttf","path":"css/fonts/icomoon.ttf","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/icomoon.woff","path":"css/fonts/icomoon.woff","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/iconfont.eot","path":"css/fonts/iconfont.eot","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/iconfont.svg","path":"css/fonts/iconfont.svg","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/iconfont.ttf","path":"css/fonts/iconfont.ttf","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/iconfont.woff","path":"css/fonts/iconfont.woff","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/iconfont.woff2","path":"css/fonts/iconfont.woff2","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/selection.json","path":"css/fonts/selection.json","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/atom-dark.styl","path":"css/hl_theme/atom-dark.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/atom-light.styl","path":"css/hl_theme/atom-light.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/darcula.styl","path":"css/hl_theme/darcula.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/brown-paper.styl","path":"css/hl_theme/brown-paper.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/github-gist.styl","path":"css/hl_theme/github-gist.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/github.styl","path":"css/hl_theme/github.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/gruvbox-dark.styl","path":"css/hl_theme/gruvbox-dark.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/gruvbox-light.styl","path":"css/hl_theme/gruvbox-light.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/kimbie-dark.styl","path":"css/hl_theme/kimbie-dark.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/kimbie-light.styl","path":"css/hl_theme/kimbie-light.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/railscasts.styl","path":"css/hl_theme/railscasts.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/rainbow.styl","path":"css/hl_theme/rainbow.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/school-book.styl","path":"css/hl_theme/school-book.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/sublime.styl","path":"css/hl_theme/sublime.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/sunburst.styl","path":"css/hl_theme/sunburst.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/zenbum.styl","path":"css/hl_theme/zenbum.styl","modified":1,"renderable":1}],"Cache":[{"_id":"source/page.md","hash":"ec1532ddb6288f811eb1dd599ab829e4812a2132","modified":1702094380119},{"_id":"source/.idea/.gitignore","hash":"1b27beedeb67ea5b2249f73fe6f7985c387bee94","modified":1702094380112},{"_id":"source/.idea/misc.xml","hash":"2b0148a6c3c6fe5962a1ba2b12656c9f346f26bb","modified":1702094380112},{"_id":"source/.idea/modules.xml","hash":"a03a1e30759aad813bd1aeee4bfeef14cab92175","modified":1702094380112},{"_id":"source/.idea/source.iml","hash":"402e38def734b476c4c697c9a36892567ab6af8b","modified":1702094380112},{"_id":"source/.idea/vcs.xml","hash":"04cf70ed86ff2431ff8f1cc43a1ec146c63f762b","modified":1702094380113},{"_id":"source/_posts/2d游戏引擎系列-01.md","hash":"7ac41a0ea3edff937c110e7cd0836b572da3f5a7","modified":1702094380113},{"_id":"source/_posts/Controller中返回值的处理逻辑.md","hash":"237c197d3f8bdec97b98a9dfb9d59583621ee48f","modified":1702094380113},{"_id":"source/_posts/JLPT-N2成绩以及展望.md","hash":"de01baef3d76f2dd22155f561d1de1d72278cf94","modified":1702094380114},{"_id":"source/_posts/Jump-Point-Search-路径规划算法.md","hash":"6a2470727ff39737e608767c16c613ae0bd45337","modified":1702094380114},{"_id":"source/_posts/MySQL应对上亿级别的数据的挑战.md","hash":"a2c5bcd492adab194a934d823b243d0d4e9511a0","modified":1702094380114},{"_id":"source/_posts/hello-world.md","hash":"ec1532ddb6288f811eb1dd599ab829e4812a2132","modified":1702094380114},{"_id":"source/_posts/java动态代理.md","hash":"a93698ecc9002e3f661d8120b4dab1733f31e07a","modified":1702094380114},{"_id":"source/_posts/一次git代码合并导致的问题.md","hash":"d3f77cd0dfcc8a6920c3ac9d10f2880c1ceeda7c","modified":1702094380114},{"_id":"source/_posts/回顾过去，展望未来.md","hash":"83186e13052c50d688ff7c8b89cad0db092905c0","modified":1702104845062},{"_id":"source/_posts/人生的十字路口.md.disabled","hash":"8002a84acf785a4fb8e173c911cdce39e98ab409","modified":1702094380114},{"_id":"source/_posts/日语学习记录-持续更新.md","hash":"32ece0c6a84013fe6ce0f0d0293644045f0b74ce","modified":1702099250782},{"_id":"source/_posts/详解从jenkins到docker的迁移过程.md","hash":"4498bbfbf4cf23d4d71951a022539eea8c50a5e7","modified":1702094380115},{"_id":"source/_posts/游戏AI初探.md","hash":"dc555e6cb88a569916b13f8f138b779a19172fda","modified":1702094380115},{"_id":"source/_posts/项目中elasticsearch的应用及思考.md","hash":"091dbb70f83bda11d1723f66376d6b6336b9856c","modified":1702094380115},{"_id":"source/_posts/项目中缓存中间件的应用及思考.md","hash":"70c71bfa831700b276c37a130b46f67cf44550b7","modified":1702094380115},{"_id":"source/_posts/项目中设计模式的尝试与反馈.md","hash":"0ce5bdf60490a0a5053d55f832c35c8fe4e29da5","modified":1702094380115},{"_id":"source/about/index.md","hash":"38210826fb70b9405a189d2952c355a16949c7e3","modified":1702094380115},{"_id":"source/_posts/记一次被诈骗经历.md","hash":"25d1532eaebbd3c0eebabdf7cce5c0e4bb2f7820","modified":1702094380115},{"_id":"source/update/index.md","hash":"910027f931834a8ccacb6c1ddd90555cc5e9dff1","modified":1702094380119},{"_id":"source/_posts/.idea/.gitignore","hash":"1b27beedeb67ea5b2249f73fe6f7985c387bee94","modified":1702094380113},{"_id":"source/_posts/.idea/.name","hash":"4742476b0e7b5ebd1413e0f0c9c1ddf56f665097","modified":1702096997605},{"_id":"source/_posts/.idea/_posts.iml","hash":"402e38def734b476c4c697c9a36892567ab6af8b","modified":1702094380113},{"_id":"source/_posts/.idea/modules.xml","hash":"45e5dd6213ed107bcf94d662d57092aba2b0b157","modified":1702094380113},{"_id":"source/_posts/.idea/vcs.xml","hash":"c75f6a9f73d6a593959bbeeb5c8d00a5d919408c","modified":1702094380113},{"_id":"source/_posts/.idea/workspace.xml","hash":"d94a6f04641bd40124928e1dc62b5c0e82fb9f30","modified":1702105011086},{"_id":"source/img/avatar.jpg","hash":"c730c89b2c7a5ec78330a0a7413b074f4684cb12","modified":1702094380119},{"_id":"themes/3-hexo/.DS_Store","hash":"0770f9d42bfdd8d420de48fed463015e001cf579","modified":1702094380120},{"_id":"themes/3-hexo/.gitignore","hash":"46eca80fe689a00cbe4d015c094702af54119021","modified":1702094380120},{"_id":"themes/3-hexo/LICENSE","hash":"b04140c5f682db2b300428f97bb164fd7f5f18bd","modified":1702094380120},{"_id":"themes/3-hexo/README.md","hash":"19b8cfe6690c28427492f342e74dda5ed49a1664","modified":1702094380120},{"_id":"themes/3-hexo/_config.yml","hash":"4425519f959af612be1bf34ab548d4ed6628eb43","modified":1702094380121},{"_id":"themes/3-hexo/languages/en.yml","hash":"616e02c035c86033ab4a97c5ae9e0a9e5f0b8ea3","modified":1702094380121},{"_id":"themes/3-hexo/languages/zh-CN.yml","hash":"83633d45420c96dfac41333aeac3f3616dca5286","modified":1702094380121},{"_id":"themes/3-hexo/layout/index.ejs","hash":"1c185288c2925a652d577965626718e12df07f65","modified":1702094380124},{"_id":"themes/3-hexo/layout/indexs.md","hash":"35ade8fb06f30e85ad81b83283f8106cceff3477","modified":1702094380124},{"_id":"themes/3-hexo/layout/post.ejs","hash":"a0eaba41e7ec9db5843af482470a45531049b457","modified":1702094380124},{"_id":"themes/3-hexo/source/.DS_Store","hash":"fdcc907c46e093a14b153c5dc8c038461997ed3c","modified":1702094380124},{"_id":"themes/3-hexo/.github/ISSUE_TEMPLATE/bug_report.md","hash":"3df61acb19a16f12d8ec60cc5e353147a0a56d39","modified":1702094380120},{"_id":"themes/3-hexo/layout/_partial/article.ejs","hash":"9e5afcc26f47f93c165072b0a2b5cbf72efb7ef9","modified":1702094380121},{"_id":"themes/3-hexo/layout/_partial/article_copyright.ejs","hash":"9e1cdec49d5b9b44399348d96ecd7331f3ee7d85","modified":1702094380121},{"_id":"themes/3-hexo/layout/_partial/comment.ejs","hash":"d18f94e04ef0cf7abb432a8e707ccb3abc7fe435","modified":1702094380121},{"_id":"themes/3-hexo/layout/_partial/copyright.ejs","hash":"4c09f47e899fe36bfe36d92b12996219c2b5f622","modified":1702094380122},{"_id":"themes/3-hexo/layout/_partial/dashang.ejs","hash":"b2a01cc1f0326965f0a186ce3c9b3c991fd4e2c9","modified":1702094380122},{"_id":"themes/3-hexo/layout/_partial/friends.ejs","hash":"e6dd90be668195016d6e1c51a6baefb50676e6ab","modified":1702094380123},{"_id":"themes/3-hexo/layout/_partial/footer.ejs","hash":"cef959b1d39ba5735dd27e12f3f2263f601fe4df","modified":1702094380123},{"_id":"themes/3-hexo/layout/_partial/header.ejs","hash":"233c7238136b9cc2c30fd4e66b113d8fd1c1726b","modified":1702094380123},{"_id":"themes/3-hexo/layout/_partial/full-toc.ejs","hash":"60a085fab3165ea1fc6370abac0bd6ab1b2f2510","modified":1702094380123},{"_id":"themes/3-hexo/layout/_partial/mathjax.ejs","hash":"e2be0e37f3d48e63e65a47d819bfb800b9aa3784","modified":1702094380123},{"_id":"themes/3-hexo/layout/_partial/meta.ejs","hash":"ab6329ddd908b0567c18f39ac6a8553c6fec67c5","modified":1702094380123},{"_id":"themes/3-hexo/layout/_partial/nav-left.ejs","hash":"2fbca44ae051bf231c346c66350070c13371fb27","modified":1702094380123},{"_id":"themes/3-hexo/layout/_partial/nav-right.ejs","hash":"0c693379995b09007727c2889c1a64e3bf98749e","modified":1702094380123},{"_id":"themes/3-hexo/layout/_partial/tag.ejs","hash":"8704e6bd833d270cc6a494d4e7cf1dfeddedba40","modified":1702094380123},{"_id":"themes/3-hexo/layout/_partial/toc-ref.ejs","hash":"33f7a4bfca1bb9835ec8f0d1e73188d1f56cc8b9","modified":1702094380124},{"_id":"themes/3-hexo/source/css/gitalk.css","hash":"3dc58e9a3fd63a3144d5fe850eb55e3dc885c9fb","modified":1702094380129},{"_id":"themes/3-hexo/source/css/mobile.styl","hash":"1c2f8b7d7cf46f219adb3a628bdf380f29ff4a6b","modified":1702094380130},{"_id":"themes/3-hexo/source/css/style.styl","hash":"29fa7f6619519c2dcfec4efac4314c5af659a92a","modified":1702094380131},{"_id":"themes/3-hexo/source/img/alipay.jpg","hash":"e457d1d3dfefbbd824d154cf756a2c6d10b812a2","modified":1702094380131},{"_id":"themes/3-hexo/source/img/article-list-background.jpeg","hash":"4fdf8b3e53dd02d6ee6360aebfadb0cba1fb5633","modified":1702094380132},{"_id":"themes/3-hexo/source/img/brown-papersq.png","hash":"3a1332ede3a75a3d24f60b6ed69035b72da5e182","modified":1702094380132},{"_id":"themes/3-hexo/source/img/gov.png","hash":"f31c9f47faedf7f33b9580d6284ab891fb697560","modified":1702094380132},{"_id":"themes/3-hexo/source/img/avatar1.jpg","hash":"a42360089bfa892d803cf5747eab359d90f337f1","modified":1702094380132},{"_id":"themes/3-hexo/source/img/school-book.png","hash":"711ec983c874e093bb89eb77afcbdf6741fa61ee","modified":1702094380133},{"_id":"themes/3-hexo/source/js/iconfont.js","hash":"3a0869ca1b09af07d82987e343a3bc4cb9558ecb","modified":1702094380139},{"_id":"themes/3-hexo/source/js/jquery.pjax.js","hash":"8c2a4f10a4da3d9615a3a81542494c6d21479b3d","modified":1702094380139},{"_id":"themes/3-hexo/source/js/script.js","hash":"9bf5f74ecd252545a64b63281322bce9611c2fcd","modified":1702094380139},{"_id":"themes/3-hexo/source/js/search.js","hash":"788c610149a5f9361295f9f0207c8523f37ddb8b","modified":1702094380140},{"_id":"themes/3-hexo/source/js/titleTip.js","hash":"7299ac046ddd6e6a4267d435f7b4c8198baaaccc","modified":1702094380140},{"_id":"themes/3-hexo/layout/_partial/comments/click2show.ejs","hash":"05b09c45b379ffeb4f48c1604044d88829f90799","modified":1702094380121},{"_id":"themes/3-hexo/layout/_partial/comments/disqus.ejs","hash":"32ce7b48d366b9c888ff2ceb911a3cd82f864537","modified":1702094380122},{"_id":"themes/3-hexo/layout/_partial/comments/gitalk.ejs","hash":"01567e010cf4f2dd141fe2019490d3f0d5aa2529","modified":1702094380122},{"_id":"themes/3-hexo/layout/_partial/comments/gitment.ejs","hash":"eaf2b6f297282606b630ad55fb9e38af7e2829dc","modified":1702094380122},{"_id":"themes/3-hexo/layout/_partial/comments/livere.ejs","hash":"2d115e79cadedc2d5d8f4b5618559640d986e01f","modified":1702094380122},{"_id":"themes/3-hexo/layout/_partial/comments/utteranc.ejs","hash":"8f2d4f42fbad351677c82e72420224587a5bd666","modified":1702094380122},{"_id":"themes/3-hexo/source/css/_partial/comment.styl","hash":"d5fa333970a2eac66937d42eeb16fdb362e121ed","modified":1702094380124},{"_id":"themes/3-hexo/source/css/_partial/dashang.styl","hash":"f0eac1dc1f5dbed1769d032bb5fd5f002faaee26","modified":1702094380125},{"_id":"themes/3-hexo/source/css/_partial/fade.styl","hash":"02c7510a26f306e240f23ddbf772a69be2c890dd","modified":1702094380125},{"_id":"themes/3-hexo/source/css/_partial/font.styl","hash":"3db01e603985e6dbcacb6b0f13dbd804f5849e3c","modified":1702094380125},{"_id":"themes/3-hexo/source/css/_partial/full-toc.styl","hash":"9a732af065d0a80c9e420934be0f3582bf0129dc","modified":1702094380125},{"_id":"themes/3-hexo/source/css/_partial/nav-left.styl","hash":"4304a111489d22a97389e0403c51bb4de73f6609","modified":1702094380125},{"_id":"themes/3-hexo/source/css/_partial/nav-right.styl","hash":"b57fbac9d87f93ef88f97f86387ce9f2efa918d0","modified":1702094380126},{"_id":"themes/3-hexo/source/css/_partial/nprogress.styl","hash":"2620a02169a6aeb75137fd368eac2c36423d8498","modified":1702094380126},{"_id":"themes/3-hexo/source/css/_partial/num-load.styl","hash":"f7ef35459ece22e1da950b86126be1c2bfe97fcf","modified":1702094380126},{"_id":"themes/3-hexo/source/css/_partial/post.styl","hash":"f1251e2a3b5334af3a22b51fc0293c2456568b50","modified":1702094380126},{"_id":"themes/3-hexo/source/css/fonts/icomoon.eot","hash":"b6195bedc1cb2f9cfcb26cc27021f2e94be2ab0a","modified":1702094380126},{"_id":"themes/3-hexo/source/css/fonts/icomoon.svg","hash":"b5e7562c8494b0ddb3a70ecc5545ef7340d8e971","modified":1702094380126},{"_id":"themes/3-hexo/source/css/fonts/icomoon.ttf","hash":"eb976d8b8559fcddfc2658a03a4350cb566fc06b","modified":1702094380127},{"_id":"themes/3-hexo/source/css/fonts/icomoon.woff","hash":"3985d29416bb9b19f50a2f20f2bbbce47f10af8d","modified":1702094380127},{"_id":"themes/3-hexo/source/css/fonts/iconfont.eot","hash":"b14b8624988ff069aff3145f88c0d7ac49052bd3","modified":1702094380127},{"_id":"themes/3-hexo/source/css/fonts/iconfont.svg","hash":"3630aabf2f9c0417f483ebd03d9e429dbc2594e0","modified":1702094380127},{"_id":"themes/3-hexo/source/css/fonts/iconfont.ttf","hash":"140829ecf12d30c6e18d8dc6dc0c188a66addd25","modified":1702094380128},{"_id":"themes/3-hexo/source/css/fonts/iconfont.woff","hash":"0d2d4559f1ac4fa801eb8cc099fa5bf9dcf955ef","modified":1702094380128},{"_id":"themes/3-hexo/source/css/fonts/iconfont.woff2","hash":"b0317a0b2ebb1181a8bf5a97d03556dd54538645","modified":1702094380128},{"_id":"themes/3-hexo/source/css/fonts/selection.json","hash":"b6456a4eabcffd95e822d1d7adce96da524d481a","modified":1702094380128},{"_id":"themes/3-hexo/source/css/hl_theme/atom-dark.styl","hash":"f3eb4e5feda9cbd6242ccf44ca064e2979b5d719","modified":1702094380129},{"_id":"themes/3-hexo/source/css/hl_theme/atom-light.styl","hash":"553987211d3323a7dfc0b08786b183a3435978c9","modified":1702094380129},{"_id":"themes/3-hexo/source/css/hl_theme/darcula.styl","hash":"2bfc14f27ccca108b4b3755782de8366e8bd001e","modified":1702094380129},{"_id":"themes/3-hexo/source/css/hl_theme/brown-paper.styl","hash":"03af387edcc1cf8c18d12e9c440fd51b6cf425b6","modified":1702094380129},{"_id":"themes/3-hexo/source/css/hl_theme/github-gist.styl","hash":"5e05b19832c1099bd9d284bc3ed00dc8a3d7ee23","modified":1702094380129},{"_id":"themes/3-hexo/source/css/hl_theme/github.styl","hash":"53276ff1f224f691dfe811e82c0af7f4476abf5d","modified":1702094380129},{"_id":"themes/3-hexo/source/css/hl_theme/gruvbox-dark.styl","hash":"315ad610d303caba9eac80a7d51002193a15478a","modified":1702094380129},{"_id":"themes/3-hexo/source/css/hl_theme/gruvbox-light.styl","hash":"1bece084b1dbbbd4af064f05feffd8c332b96a48","modified":1702094380129},{"_id":"themes/3-hexo/source/css/hl_theme/kimbie-dark.styl","hash":"e9c190f9ffc37a13cac430512e4e0c760205be4a","modified":1702094380130},{"_id":"themes/3-hexo/source/css/hl_theme/kimbie-light.styl","hash":"0c3ccd0d64e7504c7061d246dc32737f502f64e4","modified":1702094380130},{"_id":"themes/3-hexo/source/css/hl_theme/railscasts.styl","hash":"a6e8cfd2202afd7893f5268f3437421e35066e7b","modified":1702094380130},{"_id":"themes/3-hexo/source/css/hl_theme/rainbow.styl","hash":"e5c37646a9d9c1094f9aab7a7c65a4b242e8db00","modified":1702094380130},{"_id":"themes/3-hexo/source/css/hl_theme/school-book.styl","hash":"51659351b391a2be5c68728bb51b7ad467c5e0db","modified":1702094380130},{"_id":"themes/3-hexo/source/css/hl_theme/sunburst.styl","hash":"2aa9817e68fb2ed216781ea04b733039ebe18214","modified":1702094380130},{"_id":"themes/3-hexo/source/css/hl_theme/zenbum.styl","hash":"92941a6ae73b74f44ad7c559c5548c44073c644a","modified":1702094380130},{"_id":"themes/3-hexo/source/css/hl_theme/sublime.styl","hash":"501d75ef0f4385bea24d9b9b4cc434ba68d4be27","modified":1702094380130},{"_id":"themes/3-hexo/source/img/weixin.jpg","hash":"8dafb22561698d0758fba9ea2a45abf6ad3512a2","modified":1702094380134},{"_id":"themes/3-hexo/source/js/gitment.js","hash":"67984b83cd46ff4300d4fd959bf6c17dd66b4136","modified":1702094380139},{"_id":"themes/3-hexo/source/js/gitalk.js","hash":"3e2e0cf9caa6b8d07b9c5e0733a1ccb3e244259f","modified":1702094380137},{"_id":"public/search.xml","hash":"10f991f29aa5f4524d35ac4b346f2c643788a089","modified":1702105385869},{"_id":"public/page.html","hash":"ebb0e2c513a1567c7b1efe6ffa3168f49863e8e0","modified":1702105385869},{"_id":"public/about/index.html","hash":"5990523f8dc609ec92cdbd59c187b64945c15ede","modified":1702105385869},{"_id":"public/update/index.html","hash":"bc2b89220af9ffb657d0dbb8eab44e88c0e562c9","modified":1702105385869},{"_id":"public/2023/12/09/回顾过去，展望未来/index.html","hash":"7617bb30587c1353f0902fe7cb3e228ae0be719e","modified":1702105385869},{"_id":"public/2023/09/08/详解从jenkins到docker的迁移过程/index.html","hash":"b3afc70b63521e2a72ef8637d94e2ef1e362ad50","modified":1702105385869},{"_id":"public/2023/09/08/项目中缓存中间件的应用及思考/index.html","hash":"7650f65314dd3e995fa64ce13ddf30c639943909","modified":1702105385869},{"_id":"public/2023/09/08/MySQL应对上亿级别的数据的挑战/index.html","hash":"183aa80fba19c069e0c0f51b0f9d1cda48502726","modified":1702105385869},{"_id":"public/2023/09/08/项目中elasticsearch的应用及思考/index.html","hash":"48ec88e1e43d969fdb3a404b06ff2eef6bf4e872","modified":1702105385869},{"_id":"public/2023/09/08/项目中设计模式的尝试与反馈/index.html","hash":"1ea733302baef51b31a676e6165e02da96905130","modified":1702105385869},{"_id":"public/2023/09/08/一次git代码合并导致的问题/index.html","hash":"0530fe6cb3d27f8b7b5d6aa3edce8797d677cf1e","modified":1702105385869},{"_id":"public/2023/09/07/Controller中返回值的处理逻辑/index.html","hash":"b2fc72127e805b5e284582b2a66af900b8261854","modified":1702105385869},{"_id":"public/2023/09/02/日语学习记录-持续更新/index.html","hash":"61b81615964a1141ca6e69862a36e78fec40b018","modified":1702105385869},{"_id":"public/2023/09/02/2d游戏引擎系列-01/index.html","hash":"29e368be2a65f4a2fb85eefbcb72607d7183dfe4","modified":1702105385869},{"_id":"public/2023/09/01/Jump-Point-Search-路径规划算法/index.html","hash":"e7872c3c000e269f02c2b531a61e31dc035973fd","modified":1702105385869},{"_id":"public/2023/08/31/java动态代理/index.html","hash":"63021d54bb7a0cd012cb5bd19489e1e9d7d54364","modified":1702105385869},{"_id":"public/2023/08/30/游戏AI初探/index.html","hash":"067f391656f48d17899210b03cccd1054f0527fc","modified":1702105385869},{"_id":"public/2023/08/29/记一次被诈骗经历/index.html","hash":"a9feff0a9b7e2e4e015e96edd73a594d31fb2171","modified":1702105385869},{"_id":"public/2023/08/21/JLPT-N2成绩以及展望/index.html","hash":"57ddb3bece788b1a9fecf81abe6d6a02eeefa4b5","modified":1702105385869},{"_id":"public/2013/12/24/hello-world/index.html","hash":"9e18330b55bb360fb1b5ca4c58edd37eb3f5ce6c","modified":1702105385869},{"_id":"public/archives/index.html","hash":"e298e43b987dcdbaa2c2eceeb358770b944c62b8","modified":1702105385869},{"_id":"public/archives/page/2/index.html","hash":"e298e43b987dcdbaa2c2eceeb358770b944c62b8","modified":1702105385869},{"_id":"public/archives/2013/index.html","hash":"e298e43b987dcdbaa2c2eceeb358770b944c62b8","modified":1702105385869},{"_id":"public/archives/2013/12/index.html","hash":"e298e43b987dcdbaa2c2eceeb358770b944c62b8","modified":1702105385869},{"_id":"public/archives/2023/index.html","hash":"e298e43b987dcdbaa2c2eceeb358770b944c62b8","modified":1702105385869},{"_id":"public/archives/2023/page/2/index.html","hash":"e298e43b987dcdbaa2c2eceeb358770b944c62b8","modified":1702105385869},{"_id":"public/archives/2023/08/index.html","hash":"e298e43b987dcdbaa2c2eceeb358770b944c62b8","modified":1702105385869},{"_id":"public/archives/2023/09/index.html","hash":"e298e43b987dcdbaa2c2eceeb358770b944c62b8","modified":1702105385869},{"_id":"public/archives/2023/12/index.html","hash":"e298e43b987dcdbaa2c2eceeb358770b944c62b8","modified":1702105385869},{"_id":"public/categories/游戏相关/index.html","hash":"e298e43b987dcdbaa2c2eceeb358770b944c62b8","modified":1702105385869},{"_id":"public/categories/开发相关/index.html","hash":"e298e43b987dcdbaa2c2eceeb358770b944c62b8","modified":1702105385869},{"_id":"public/categories/日常生活/index.html","hash":"e298e43b987dcdbaa2c2eceeb358770b944c62b8","modified":1702105385869},{"_id":"public/categories/游戏相关/开发/index.html","hash":"e298e43b987dcdbaa2c2eceeb358770b944c62b8","modified":1702105385869},{"_id":"public/categories/开发相关/容器化/index.html","hash":"e298e43b987dcdbaa2c2eceeb358770b944c62b8","modified":1702105385869},{"_id":"public/categories/开发相关/中间件/index.html","hash":"e298e43b987dcdbaa2c2eceeb358770b944c62b8","modified":1702105385869},{"_id":"public/index.html","hash":"e298e43b987dcdbaa2c2eceeb358770b944c62b8","modified":1702105385869},{"_id":"public/page/2/index.html","hash":"e298e43b987dcdbaa2c2eceeb358770b944c62b8","modified":1702105385869},{"_id":"public/tags/LibGdx/index.html","hash":"e298e43b987dcdbaa2c2eceeb358770b944c62b8","modified":1702105385869},{"_id":"public/tags/Box2d/index.html","hash":"e298e43b987dcdbaa2c2eceeb358770b944c62b8","modified":1702105385869},{"_id":"public/tags/Java/index.html","hash":"e298e43b987dcdbaa2c2eceeb358770b944c62b8","modified":1702105385869},{"_id":"public/tags/Spring/index.html","hash":"e298e43b987dcdbaa2c2eceeb358770b944c62b8","modified":1702105385869},{"_id":"public/tags/日语/index.html","hash":"e298e43b987dcdbaa2c2eceeb358770b944c62b8","modified":1702105385869},{"_id":"public/tags/生活/index.html","hash":"e298e43b987dcdbaa2c2eceeb358770b944c62b8","modified":1702105385869},{"_id":"public/tags/GameDev/index.html","hash":"e298e43b987dcdbaa2c2eceeb358770b944c62b8","modified":1702105385869},{"_id":"public/tags/算法/index.html","hash":"e298e43b987dcdbaa2c2eceeb358770b944c62b8","modified":1702105385869},{"_id":"public/tags/MySQL/index.html","hash":"e298e43b987dcdbaa2c2eceeb358770b944c62b8","modified":1702105385869},{"_id":"public/tags/Git/index.html","hash":"e298e43b987dcdbaa2c2eceeb358770b944c62b8","modified":1702105385869},{"_id":"public/tags/Java-Spring/index.html","hash":"e298e43b987dcdbaa2c2eceeb358770b944c62b8","modified":1702105385869},{"_id":"public/tags/Docker/index.html","hash":"e298e43b987dcdbaa2c2eceeb358770b944c62b8","modified":1702105385869},{"_id":"public/tags/ES/index.html","hash":"e298e43b987dcdbaa2c2eceeb358770b944c62b8","modified":1702105385869},{"_id":"public/tags/Java-Redis/index.html","hash":"e298e43b987dcdbaa2c2eceeb358770b944c62b8","modified":1702105385869},{"_id":"public/tags/缓存/index.html","hash":"e298e43b987dcdbaa2c2eceeb358770b944c62b8","modified":1702105385869},{"_id":"public/tags/Coding/index.html","hash":"e298e43b987dcdbaa2c2eceeb358770b944c62b8","modified":1702105385869},{"_id":"public/img/avatar1.jpg","hash":"a42360089bfa892d803cf5747eab359d90f337f1","modified":1702105385869},{"_id":"public/img/alipay.jpg","hash":"e457d1d3dfefbbd824d154cf756a2c6d10b812a2","modified":1702105385869},{"_id":"public/img/article-list-background.jpeg","hash":"4fdf8b3e53dd02d6ee6360aebfadb0cba1fb5633","modified":1702105385869},{"_id":"public/img/school-book.png","hash":"711ec983c874e093bb89eb77afcbdf6741fa61ee","modified":1702105385869},{"_id":"public/img/brown-papersq.png","hash":"3a1332ede3a75a3d24f60b6ed69035b72da5e182","modified":1702105385869},{"_id":"public/img/gov.png","hash":"f31c9f47faedf7f33b9580d6284ab891fb697560","modified":1702105385869},{"_id":"public/css/fonts/icomoon.eot","hash":"b6195bedc1cb2f9cfcb26cc27021f2e94be2ab0a","modified":1702105385869},{"_id":"public/css/fonts/icomoon.woff","hash":"3985d29416bb9b19f50a2f20f2bbbce47f10af8d","modified":1702105385869},{"_id":"public/css/fonts/icomoon.svg","hash":"b5e7562c8494b0ddb3a70ecc5545ef7340d8e971","modified":1702105385869},{"_id":"public/css/fonts/iconfont.eot","hash":"b14b8624988ff069aff3145f88c0d7ac49052bd3","modified":1702105385869},{"_id":"public/css/fonts/icomoon.ttf","hash":"eb976d8b8559fcddfc2658a03a4350cb566fc06b","modified":1702105385869},{"_id":"public/css/fonts/iconfont.ttf","hash":"140829ecf12d30c6e18d8dc6dc0c188a66addd25","modified":1702105385869},{"_id":"public/css/fonts/iconfont.svg","hash":"3630aabf2f9c0417f483ebd03d9e429dbc2594e0","modified":1702105385869},{"_id":"public/css/fonts/iconfont.woff2","hash":"b0317a0b2ebb1181a8bf5a97d03556dd54538645","modified":1702105385869},{"_id":"public/css/fonts/iconfont.woff","hash":"0d2d4559f1ac4fa801eb8cc099fa5bf9dcf955ef","modified":1702105385869},{"_id":"public/img/weixin.jpg","hash":"8dafb22561698d0758fba9ea2a45abf6ad3512a2","modified":1702105385869},{"_id":"public/css/mobile.css","hash":"5998f6fc27998596beb1e40e4bc3c43be2ed764c","modified":1702105385869},{"_id":"public/js/search.js","hash":"c80c9a231ee040c7adc07a477793873fb85ce8bc","modified":1702105385869},{"_id":"public/js/titleTip.js","hash":"81dca549063e29ba3a4a278f0f4388eba8a2167b","modified":1702105385869},{"_id":"public/css/hl_theme/atom-dark.css","hash":"88d11052a24e8100af6248eb4dbe1ce7b0e96408","modified":1702105385869},{"_id":"public/css/hl_theme/atom-light.css","hash":"d31edb9816dae6b01410028bceb91757a962f780","modified":1702105385869},{"_id":"public/css/hl_theme/darcula.css","hash":"4341074bae4bc9f0b86e32b623e27babc0159b6e","modified":1702105385869},{"_id":"public/css/hl_theme/brown-paper.css","hash":"500c8e750373f6656ff49a7857c871ceedcf8777","modified":1702105385869},{"_id":"public/css/hl_theme/github-gist.css","hash":"7a41c1c479d09df875f99f1f6d94aac42e9e2ad0","modified":1702105385869},{"_id":"public/css/hl_theme/github.css","hash":"e05a0806a508a26b9f3f3794b6b588ec6504ad3f","modified":1702105385869},{"_id":"public/css/hl_theme/gruvbox-light.css","hash":"30514aaa242a34647aa666cfca4fc74c595ea8f2","modified":1702105385869},{"_id":"public/css/hl_theme/gruvbox-dark.css","hash":"8c440d9b4ee19ac03eaee3c6af78ba52e5ba5535","modified":1702105385869},{"_id":"public/css/hl_theme/kimbie-dark.css","hash":"728527fcc308da454722c119b89e6da3025bd1e3","modified":1702105385869},{"_id":"public/css/hl_theme/kimbie-light.css","hash":"0c61926c989163faefb031d27bce3e287d6e10f2","modified":1702105385869},{"_id":"public/css/hl_theme/railscasts.css","hash":"511f2fd2a84d426e5da5cb17880cc08f73beb002","modified":1702105385869},{"_id":"public/css/hl_theme/rainbow.css","hash":"7ff4251938076ddb7e4e49413db82653e5b61321","modified":1702105385869},{"_id":"public/css/hl_theme/school-book.css","hash":"ffbbcd13a74ac2404262c50b7a43053dfd0096ff","modified":1702105385869},{"_id":"public/css/hl_theme/sublime.css","hash":"f65c5b116d9213afb9c324384a2f3bc86cb71121","modified":1702105385869},{"_id":"public/css/hl_theme/zenbum.css","hash":"0a78f74a93568e20b32ca7427c719e9bae9a0b55","modified":1702105385869},{"_id":"public/css/hl_theme/sunburst.css","hash":"8a135abac1512cf430d1d1ad2304b79afa1a4d6e","modified":1702105385869},{"_id":"public/css/style.css","hash":"c7adbb2af0e65ecd85f8c06851f34d377d4b834c","modified":1702105385869},{"_id":"public/css/gitalk.css","hash":"58177ce227c50ee359fbf99a4fdd26058887afc5","modified":1702105385869},{"_id":"public/js/iconfont.js","hash":"3a0869ca1b09af07d82987e343a3bc4cb9558ecb","modified":1702105385869},{"_id":"public/js/gitment.js","hash":"59a1e03f2b0ce61dd9bd405d3c52d3e07cc10dec","modified":1702105385869},{"_id":"public/js/script.js","hash":"61e8ba1228d8441144fa7a655aa02ec546bd1f02","modified":1702105385869},{"_id":"public/css/fonts/selection.json","hash":"047b615ea32dc48dae5b964061427d41feaaafdf","modified":1702105385869},{"_id":"public/js/jquery.pjax.js","hash":"191c49fdb40dff115a49cfd2b30dffb888d86550","modified":1702105385869},{"_id":"public/img/avatar.jpg","hash":"c730c89b2c7a5ec78330a0a7413b074f4684cb12","modified":1702105385869},{"_id":"public/js/gitalk.js","hash":"26ba4841dcb4b178f730f53a8d1f4a7c89442b4f","modified":1702105385869}],"Category":[{"name":"游戏相关","_id":"clpxpllho0004akkvh0ie6hi6"},{"name":"开发相关","_id":"clpxpllhs000aakkvg1xg5i0s"},{"name":"日常生活","_id":"clpxpllhu000fakkv5n2a5n05"},{"name":"开发","parent":"clpxpllho0004akkvh0ie6hi6","_id":"clpxpllhw000makkv3w3cbpan"},{"name":"容器化","parent":"clpxpllhs000aakkvg1xg5i0s","_id":"clpxplli00010akkv1k7d5qyq"},{"name":"中间件","parent":"clpxpllhs000aakkvg1xg5i0s","_id":"clpxplli30017akkv83gdaang"}],"Data":[],"Page":[{"title":"Hello World","date":"2013-12-24T09:49:32.000Z","tags":null,"_content":"\nWelcome to [Hexo](http://zespia.tw/hexo)! This is your very first post. Check [documentation](http://zespia.tw/hexo/docs) to learn how to use.\n","source":"page.md","raw":"title: Hello World\ndate: 2013-12-24 17:49:32\ntags:\n---\n\nWelcome to [Hexo](http://zespia.tw/hexo)! This is your very first post. Check [documentation](http://zespia.tw/hexo/docs) to learn how to use.\n","updated":"2023-12-09T03:59:40.119Z","path":"page.html","comments":1,"layout":"page","_id":"clpxpllhh0000akkv0xef5n1b","content":"<p>Welcome to <a href=\"http://zespia.tw/hexo\">Hexo</a>! This is your very first post. Check <a href=\"http://zespia.tw/hexo/docs\">documentation</a> to learn how to use.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"http://zespia.tw/hexo\">Hexo</a>! This is your very first post. Check <a href=\"http://zespia.tw/hexo/docs\">documentation</a> to learn how to use.</p>\n"},{"title":"关于","date":"2021-09-22T13:01:47.000Z","comments":1,"_content":"## 关于\n","source":"about/index.md","raw":"---\ntitle: 关于\ndate: 2021-09-22 21:01:47\ncomments: true\n---\n## 关于\n","updated":"2023-12-09T03:59:40.115Z","path":"about/index.html","layout":"page","_id":"clpxpllhm0002akkve8z2d7ix","content":"<h2 id=\"关于\"><a href=\"#关于\" class=\"headerlink\" title=\"关于\"></a>关于</h2>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"关于\"><a href=\"#关于\" class=\"headerlink\" title=\"关于\"></a>关于</h2>"},{"title":"最后更新","date":"2021-09-22T13:01:47.000Z","comments":1,"_content":"## 更新\n\n- 2023-09-11 《Controller中返回值的处理逻辑》\n","source":"update/index.md","raw":"---\ntitle: 最后更新\ndate: 2021-09-22 21:01:47\ncomments: true\n---\n## 更新\n\n- 2023-09-11 《Controller中返回值的处理逻辑》\n","updated":"2023-12-09T03:59:40.119Z","path":"update/index.html","layout":"page","_id":"clpxpllhp0006akkvebbmadp2","content":"<h2 id=\"更新\"><a href=\"#更新\" class=\"headerlink\" title=\"更新\"></a>更新</h2><ul>\n<li>2023-09-11 《Controller中返回值的处理逻辑》</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"更新\"><a href=\"#更新\" class=\"headerlink\" title=\"更新\"></a>更新</h2><ul>\n<li>2023-09-11 《Controller中返回值的处理逻辑》</li>\n</ul>\n"}],"Post":[{"title":"2d游戏引擎系列-01","date":"2023-09-02T02:38:57.000Z","_content":"\n# 创建一个简单的世界\n> 以下是一个简单的世界，其中平台是固定的，角色是可以移动\n```java\nclass Demo {\n    private OrthographicCamera camera; // 正交投影\n    private World world; // 世界\n    private Box2DDebugRenderer b2dr; // 渲染(debug\n    private Body player; // 角色\n    private Body platform; // 平台\n}\n```\n## 初始化流程\n\n1. 创建正交投影摄像机\n2. 创建世界\n3. 生成角色\n4. 生成平台\n\n```java\npublic class Game {\n    void create() {\n        camera.setToOrth(false, w / 2, h / 2 );\n        world = new World(new Vector2(0, -9.8f), false);\n        player = craetePlayer();\n        platform = createPlatform();\n    }\n}\n```\n\n### 生成角色和平台\n> 生成角色和平台都可以看作一样的流程\n\n1. 生成BodyDef描述信息\n2. 根据描述信息生成Body\n\n```java\nclass Game {\n    void createBody() {\n        Body pBody;\n        // 定义\n        BodyDef def = new BodyDef();\n        def.type = BodyDef.BodyType.DynamicBody; // 活动的还是固定的\n        def.position.set(0,0);\n        def.fixedRotation = true;\n        pBody = world.createBody(def); // 从世界中创建的物体\n\n        // 形状\n        PolygonShape shape = new PolygonShape();\n        shape.setAsBox(16 / PPM, 16 / PPM); // 半径\n\n        pBody.createFixture(shape, 1.0f);\n        shape.dispose();\n    }\n}\n```\n\n以上是一个简单的创建世界的过程.","source":"_posts/2d游戏引擎系列-01.md","raw":"---\ntitle: 2d游戏引擎系列-01\ndate: 2023-09-02 10:38:57\ncategories:\n  - 游戏相关\ntags: [LibGdx, Box2d]\n---\n\n# 创建一个简单的世界\n> 以下是一个简单的世界，其中平台是固定的，角色是可以移动\n```java\nclass Demo {\n    private OrthographicCamera camera; // 正交投影\n    private World world; // 世界\n    private Box2DDebugRenderer b2dr; // 渲染(debug\n    private Body player; // 角色\n    private Body platform; // 平台\n}\n```\n## 初始化流程\n\n1. 创建正交投影摄像机\n2. 创建世界\n3. 生成角色\n4. 生成平台\n\n```java\npublic class Game {\n    void create() {\n        camera.setToOrth(false, w / 2, h / 2 );\n        world = new World(new Vector2(0, -9.8f), false);\n        player = craetePlayer();\n        platform = createPlatform();\n    }\n}\n```\n\n### 生成角色和平台\n> 生成角色和平台都可以看作一样的流程\n\n1. 生成BodyDef描述信息\n2. 根据描述信息生成Body\n\n```java\nclass Game {\n    void createBody() {\n        Body pBody;\n        // 定义\n        BodyDef def = new BodyDef();\n        def.type = BodyDef.BodyType.DynamicBody; // 活动的还是固定的\n        def.position.set(0,0);\n        def.fixedRotation = true;\n        pBody = world.createBody(def); // 从世界中创建的物体\n\n        // 形状\n        PolygonShape shape = new PolygonShape();\n        shape.setAsBox(16 / PPM, 16 / PPM); // 半径\n\n        pBody.createFixture(shape, 1.0f);\n        shape.dispose();\n    }\n}\n```\n\n以上是一个简单的创建世界的过程.","slug":"2d游戏引擎系列-01","published":1,"updated":"2023-12-09T03:59:40.113Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clpxpllhj0001akkv80f99uz7","content":"<h1 id=\"创建一个简单的世界\"><a href=\"#创建一个简单的世界\" class=\"headerlink\" title=\"创建一个简单的世界\"></a>创建一个简单的世界</h1><blockquote>\n<p>以下是一个简单的世界，其中平台是固定的，角色是可以移动</p>\n</blockquote>\n<pre><code class=\"java\">class Demo &#123;\n    private OrthographicCamera camera; // 正交投影\n    private World world; // 世界\n    private Box2DDebugRenderer b2dr; // 渲染(debug\n    private Body player; // 角色\n    private Body platform; // 平台\n&#125;\n</code></pre>\n<h2 id=\"初始化流程\"><a href=\"#初始化流程\" class=\"headerlink\" title=\"初始化流程\"></a>初始化流程</h2><ol>\n<li>创建正交投影摄像机</li>\n<li>创建世界</li>\n<li>生成角色</li>\n<li>生成平台</li>\n</ol>\n<pre><code class=\"java\">public class Game &#123;\n    void create() &#123;\n        camera.setToOrth(false, w / 2, h / 2 );\n        world = new World(new Vector2(0, -9.8f), false);\n        player = craetePlayer();\n        platform = createPlatform();\n    &#125;\n&#125;\n</code></pre>\n<h3 id=\"生成角色和平台\"><a href=\"#生成角色和平台\" class=\"headerlink\" title=\"生成角色和平台\"></a>生成角色和平台</h3><blockquote>\n<p>生成角色和平台都可以看作一样的流程</p>\n</blockquote>\n<ol>\n<li>生成BodyDef描述信息</li>\n<li>根据描述信息生成Body</li>\n</ol>\n<pre><code class=\"java\">class Game &#123;\n    void createBody() &#123;\n        Body pBody;\n        // 定义\n        BodyDef def = new BodyDef();\n        def.type = BodyDef.BodyType.DynamicBody; // 活动的还是固定的\n        def.position.set(0,0);\n        def.fixedRotation = true;\n        pBody = world.createBody(def); // 从世界中创建的物体\n\n        // 形状\n        PolygonShape shape = new PolygonShape();\n        shape.setAsBox(16 / PPM, 16 / PPM); // 半径\n\n        pBody.createFixture(shape, 1.0f);\n        shape.dispose();\n    &#125;\n&#125;\n</code></pre>\n<p>以上是一个简单的创建世界的过程.</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"创建一个简单的世界\"><a href=\"#创建一个简单的世界\" class=\"headerlink\" title=\"创建一个简单的世界\"></a>创建一个简单的世界</h1><blockquote>\n<p>以下是一个简单的世界，其中平台是固定的，角色是可以移动</p>\n</blockquote>\n<pre><code class=\"java\">class Demo &#123;\n    private OrthographicCamera camera; // 正交投影\n    private World world; // 世界\n    private Box2DDebugRenderer b2dr; // 渲染(debug\n    private Body player; // 角色\n    private Body platform; // 平台\n&#125;\n</code></pre>\n<h2 id=\"初始化流程\"><a href=\"#初始化流程\" class=\"headerlink\" title=\"初始化流程\"></a>初始化流程</h2><ol>\n<li>创建正交投影摄像机</li>\n<li>创建世界</li>\n<li>生成角色</li>\n<li>生成平台</li>\n</ol>\n<pre><code class=\"java\">public class Game &#123;\n    void create() &#123;\n        camera.setToOrth(false, w / 2, h / 2 );\n        world = new World(new Vector2(0, -9.8f), false);\n        player = craetePlayer();\n        platform = createPlatform();\n    &#125;\n&#125;\n</code></pre>\n<h3 id=\"生成角色和平台\"><a href=\"#生成角色和平台\" class=\"headerlink\" title=\"生成角色和平台\"></a>生成角色和平台</h3><blockquote>\n<p>生成角色和平台都可以看作一样的流程</p>\n</blockquote>\n<ol>\n<li>生成BodyDef描述信息</li>\n<li>根据描述信息生成Body</li>\n</ol>\n<pre><code class=\"java\">class Game &#123;\n    void createBody() &#123;\n        Body pBody;\n        // 定义\n        BodyDef def = new BodyDef();\n        def.type = BodyDef.BodyType.DynamicBody; // 活动的还是固定的\n        def.position.set(0,0);\n        def.fixedRotation = true;\n        pBody = world.createBody(def); // 从世界中创建的物体\n\n        // 形状\n        PolygonShape shape = new PolygonShape();\n        shape.setAsBox(16 / PPM, 16 / PPM); // 半径\n\n        pBody.createFixture(shape, 1.0f);\n        shape.dispose();\n    &#125;\n&#125;\n</code></pre>\n<p>以上是一个简单的创建世界的过程.</p>\n"},{"title":"Controller中返回值的处理逻辑","date":"2023-09-07T07:07:10.000Z","_content":"\n<!-- TOC -->\n* [@ResponseBody 注解的处理](#responsebody-注解的处理-)\n* [ContentNegotiationManagerFactoryBean](#contentnegotiationmanagerfactorybean)\n* [ResponseEntity\\<T\\> 类的使用](#responseentityt-类的使用)\n* [RequestMappingHandlerAdapter](#requestmappinghandleradapter-)\n<!-- TOC -->\n\n在一次开发文件上传下载的任务中，学习了Spring中`Resource`类的使用, 不是`@Resource`, 本地测试项目是可以正常下载的，但是代码提交上去后发现返回的始终都是序列化的对象,而不是具体的文件, 通过对Spring返回值的学习和进一步追踪才找到问题所在。\n# @ResponseBody 注解的处理  \n\n> `@ResponseBody`注解顾名思义，就是将Controller的返回值经过处理写入到 `Response`中的`Body`字段上.具体处理方式则是通过各种`Converter`的实现类结合`MediaType` 去处理转换。  \n\n 虽然不知道谁控制着`Controller`注解，但是可以知道`@ResponseBody`注解是由`RequestResponseBodyMethodProcessor` 方法去处理的，该类同时还会处理方法参数中的`@RequestBody`注解,同样的，参数的读取也是通过\"MessageConverter\"来实现.\n\n因此，理论上也是可以通过修改Converter来控制返回值的类型的。而这个脑瘫项目就是这么处理的，将所有的返回类型都一刀切,全部都是json返回类型。\n\n# ContentNegotiationManagerFactoryBean\n内容协商管理器工厂，就是控制入参和出参格式的类。这个工厂类是通过配置文件生成一个协商管理器，供Spring容器使用。可以通过配置文件配置支持的媒体类型和默认类型，而这个脑瘫项目就是只配置了json，默认也是`application/json`, 所以所有的返回值都以json字符串格式进行处理.  \n\n值得注意的是，该类本身是由工厂模式实现，而构建协商管理器的过程则是策略模式。最终的协商过程也是策略模式。\n\n# ResponseEntity\\<T\\> 类的使用\n\n由于内容协商的修改，所以在本项目中,ResponseEntity已经失去了他的作用。  \n\n传统的MVC对于下载的处理方式是比较臃肿的，需要打开`HttpServletResponse`的输出流，设置响应头属性，和MIME属性，而这些操作既然都是一样的，那么`dont't repeat yourself` , 这也是该类的使用场景。  \n对于文件流，可以直接作为返回值，由内容协商管理器自动进行判断实现文件下载。\n\n```java\n@RestController\nclass Demo {\n    @GetMapping(\"file\")\n    public ResponseEntity<Resource> download() {\n        return new ResponseEntity<>(resource, HttpStatus.OK);\n    }\n}\n```\n\n还是由于项目中，修改了内容协商管理器，导致所有返回类型都是json，所以即使是文件流，其返回到前端依旧是json格式.\n\n# RequestMappingHandlerAdapter  \n通过查阅资料及翻阅源码，大概知道了为什么自定义了`MessageConverter`导致ResponseEntity失效了。  \n顾名思义,`RequestMappingHandlerAdapter`就是处理`@RequestMapping`的类，接着会发现在这个类中有个字段是 `HandlerMethodReturnValueHandlerComposite`, 这是一个组合模式的实现类，处理方法返回值，通过debug得知运行时自动添加返回值处理策略，这些策略或者以`Handler`结尾，或者以`Processor`结尾，最终都会添加到这个组合类中,运行时根据返回值的类型进行动态地处理，比如以`ResponseEntity`作为返回值，会由`HttpEntityMethodProcessor`类进行处理。  \n程序到了这里， `ResponseEntity`还是能够正常处理的，但是当真正写结果的时候，发现是通过其父类的方法实现，而父类的方法则是上文所述的`MediaType`及其`HttpMessageConverter`实现类，原本根据不同的`MediaType`使用对应的`Converter`，此时由于只定义了`json`格式，其他格式也都默认为json，以至于最终的所有返回结果都是`JSONString`了。\n\n所以说，这个💩山项目自作聪明的方法，断绝了后续开发的扩展性，除非将其大改，否则就是💩上雕花。","source":"_posts/Controller中返回值的处理逻辑.md","raw":"---\ntitle: Controller中返回值的处理逻辑\ndate: 2023-09-07 15:07:10\ncategories:\n  - 开发相关\ntags: [Java, Spring]\n---\n\n<!-- TOC -->\n* [@ResponseBody 注解的处理](#responsebody-注解的处理-)\n* [ContentNegotiationManagerFactoryBean](#contentnegotiationmanagerfactorybean)\n* [ResponseEntity\\<T\\> 类的使用](#responseentityt-类的使用)\n* [RequestMappingHandlerAdapter](#requestmappinghandleradapter-)\n<!-- TOC -->\n\n在一次开发文件上传下载的任务中，学习了Spring中`Resource`类的使用, 不是`@Resource`, 本地测试项目是可以正常下载的，但是代码提交上去后发现返回的始终都是序列化的对象,而不是具体的文件, 通过对Spring返回值的学习和进一步追踪才找到问题所在。\n# @ResponseBody 注解的处理  \n\n> `@ResponseBody`注解顾名思义，就是将Controller的返回值经过处理写入到 `Response`中的`Body`字段上.具体处理方式则是通过各种`Converter`的实现类结合`MediaType` 去处理转换。  \n\n 虽然不知道谁控制着`Controller`注解，但是可以知道`@ResponseBody`注解是由`RequestResponseBodyMethodProcessor` 方法去处理的，该类同时还会处理方法参数中的`@RequestBody`注解,同样的，参数的读取也是通过\"MessageConverter\"来实现.\n\n因此，理论上也是可以通过修改Converter来控制返回值的类型的。而这个脑瘫项目就是这么处理的，将所有的返回类型都一刀切,全部都是json返回类型。\n\n# ContentNegotiationManagerFactoryBean\n内容协商管理器工厂，就是控制入参和出参格式的类。这个工厂类是通过配置文件生成一个协商管理器，供Spring容器使用。可以通过配置文件配置支持的媒体类型和默认类型，而这个脑瘫项目就是只配置了json，默认也是`application/json`, 所以所有的返回值都以json字符串格式进行处理.  \n\n值得注意的是，该类本身是由工厂模式实现，而构建协商管理器的过程则是策略模式。最终的协商过程也是策略模式。\n\n# ResponseEntity\\<T\\> 类的使用\n\n由于内容协商的修改，所以在本项目中,ResponseEntity已经失去了他的作用。  \n\n传统的MVC对于下载的处理方式是比较臃肿的，需要打开`HttpServletResponse`的输出流，设置响应头属性，和MIME属性，而这些操作既然都是一样的，那么`dont't repeat yourself` , 这也是该类的使用场景。  \n对于文件流，可以直接作为返回值，由内容协商管理器自动进行判断实现文件下载。\n\n```java\n@RestController\nclass Demo {\n    @GetMapping(\"file\")\n    public ResponseEntity<Resource> download() {\n        return new ResponseEntity<>(resource, HttpStatus.OK);\n    }\n}\n```\n\n还是由于项目中，修改了内容协商管理器，导致所有返回类型都是json，所以即使是文件流，其返回到前端依旧是json格式.\n\n# RequestMappingHandlerAdapter  \n通过查阅资料及翻阅源码，大概知道了为什么自定义了`MessageConverter`导致ResponseEntity失效了。  \n顾名思义,`RequestMappingHandlerAdapter`就是处理`@RequestMapping`的类，接着会发现在这个类中有个字段是 `HandlerMethodReturnValueHandlerComposite`, 这是一个组合模式的实现类，处理方法返回值，通过debug得知运行时自动添加返回值处理策略，这些策略或者以`Handler`结尾，或者以`Processor`结尾，最终都会添加到这个组合类中,运行时根据返回值的类型进行动态地处理，比如以`ResponseEntity`作为返回值，会由`HttpEntityMethodProcessor`类进行处理。  \n程序到了这里， `ResponseEntity`还是能够正常处理的，但是当真正写结果的时候，发现是通过其父类的方法实现，而父类的方法则是上文所述的`MediaType`及其`HttpMessageConverter`实现类，原本根据不同的`MediaType`使用对应的`Converter`，此时由于只定义了`json`格式，其他格式也都默认为json，以至于最终的所有返回结果都是`JSONString`了。\n\n所以说，这个💩山项目自作聪明的方法，断绝了后续开发的扩展性，除非将其大改，否则就是💩上雕花。","slug":"Controller中返回值的处理逻辑","published":1,"updated":"2023-12-09T03:59:40.113Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clpxpllhm0003akkv3qw2aybi","content":"<!-- TOC -->\n<ul>\n<li><a href=\"#responsebody-%E6%B3%A8%E8%A7%A3%E7%9A%84%E5%A4%84%E7%90%86-\">@ResponseBody 注解的处理</a></li>\n<li><a href=\"#contentnegotiationmanagerfactorybean\">ContentNegotiationManagerFactoryBean</a></li>\n<li><a href=\"#responseentityt-%E7%B1%BB%E7%9A%84%E4%BD%BF%E7%94%A8\">ResponseEntity&lt;T&gt; 类的使用</a></li>\n<li><a href=\"#requestmappinghandleradapter-\">RequestMappingHandlerAdapter</a><!-- TOC --></li>\n</ul>\n<p>在一次开发文件上传下载的任务中，学习了Spring中<code>Resource</code>类的使用, 不是<code>@Resource</code>, 本地测试项目是可以正常下载的，但是代码提交上去后发现返回的始终都是序列化的对象,而不是具体的文件, 通过对Spring返回值的学习和进一步追踪才找到问题所在。</p>\n<h1 id=\"ResponseBody-注解的处理\"><a href=\"#ResponseBody-注解的处理\" class=\"headerlink\" title=\"@ResponseBody 注解的处理\"></a>@ResponseBody 注解的处理</h1><blockquote>\n<p><code>@ResponseBody</code>注解顾名思义，就是将Controller的返回值经过处理写入到 <code>Response</code>中的<code>Body</code>字段上.具体处理方式则是通过各种<code>Converter</code>的实现类结合<code>MediaType</code> 去处理转换。  </p>\n</blockquote>\n<p> 虽然不知道谁控制着<code>Controller</code>注解，但是可以知道<code>@ResponseBody</code>注解是由<code>RequestResponseBodyMethodProcessor</code> 方法去处理的，该类同时还会处理方法参数中的<code>@RequestBody</code>注解,同样的，参数的读取也是通过”MessageConverter”来实现.</p>\n<p>因此，理论上也是可以通过修改Converter来控制返回值的类型的。而这个脑瘫项目就是这么处理的，将所有的返回类型都一刀切,全部都是json返回类型。</p>\n<h1 id=\"ContentNegotiationManagerFactoryBean\"><a href=\"#ContentNegotiationManagerFactoryBean\" class=\"headerlink\" title=\"ContentNegotiationManagerFactoryBean\"></a>ContentNegotiationManagerFactoryBean</h1><p>内容协商管理器工厂，就是控制入参和出参格式的类。这个工厂类是通过配置文件生成一个协商管理器，供Spring容器使用。可以通过配置文件配置支持的媒体类型和默认类型，而这个脑瘫项目就是只配置了json，默认也是<code>application/json</code>, 所以所有的返回值都以json字符串格式进行处理.  </p>\n<p>值得注意的是，该类本身是由工厂模式实现，而构建协商管理器的过程则是策略模式。最终的协商过程也是策略模式。</p>\n<h1 id=\"ResponseEntity-类的使用\"><a href=\"#ResponseEntity-类的使用\" class=\"headerlink\" title=\"ResponseEntity&lt;T&gt; 类的使用\"></a>ResponseEntity&lt;T&gt; 类的使用</h1><p>由于内容协商的修改，所以在本项目中,ResponseEntity已经失去了他的作用。  </p>\n<p>传统的MVC对于下载的处理方式是比较臃肿的，需要打开<code>HttpServletResponse</code>的输出流，设置响应头属性，和MIME属性，而这些操作既然都是一样的，那么<code>dont&#39;t repeat yourself</code> , 这也是该类的使用场景。<br>对于文件流，可以直接作为返回值，由内容协商管理器自动进行判断实现文件下载。</p>\n<pre><code class=\"java\">@RestController\nclass Demo &#123;\n    @GetMapping(&quot;file&quot;)\n    public ResponseEntity&lt;Resource&gt; download() &#123;\n        return new ResponseEntity&lt;&gt;(resource, HttpStatus.OK);\n    &#125;\n&#125;\n</code></pre>\n<p>还是由于项目中，修改了内容协商管理器，导致所有返回类型都是json，所以即使是文件流，其返回到前端依旧是json格式.</p>\n<h1 id=\"RequestMappingHandlerAdapter\"><a href=\"#RequestMappingHandlerAdapter\" class=\"headerlink\" title=\"RequestMappingHandlerAdapter\"></a>RequestMappingHandlerAdapter</h1><p>通过查阅资料及翻阅源码，大概知道了为什么自定义了<code>MessageConverter</code>导致ResponseEntity失效了。<br>顾名思义,<code>RequestMappingHandlerAdapter</code>就是处理<code>@RequestMapping</code>的类，接着会发现在这个类中有个字段是 <code>HandlerMethodReturnValueHandlerComposite</code>, 这是一个组合模式的实现类，处理方法返回值，通过debug得知运行时自动添加返回值处理策略，这些策略或者以<code>Handler</code>结尾，或者以<code>Processor</code>结尾，最终都会添加到这个组合类中,运行时根据返回值的类型进行动态地处理，比如以<code>ResponseEntity</code>作为返回值，会由<code>HttpEntityMethodProcessor</code>类进行处理。<br>程序到了这里， <code>ResponseEntity</code>还是能够正常处理的，但是当真正写结果的时候，发现是通过其父类的方法实现，而父类的方法则是上文所述的<code>MediaType</code>及其<code>HttpMessageConverter</code>实现类，原本根据不同的<code>MediaType</code>使用对应的<code>Converter</code>，此时由于只定义了<code>json</code>格式，其他格式也都默认为json，以至于最终的所有返回结果都是<code>JSONString</code>了。</p>\n<p>所以说，这个💩山项目自作聪明的方法，断绝了后续开发的扩展性，除非将其大改，否则就是💩上雕花。</p>\n","site":{"data":{}},"excerpt":"","more":"<!-- TOC -->\n<ul>\n<li><a href=\"#responsebody-%E6%B3%A8%E8%A7%A3%E7%9A%84%E5%A4%84%E7%90%86-\">@ResponseBody 注解的处理</a></li>\n<li><a href=\"#contentnegotiationmanagerfactorybean\">ContentNegotiationManagerFactoryBean</a></li>\n<li><a href=\"#responseentityt-%E7%B1%BB%E7%9A%84%E4%BD%BF%E7%94%A8\">ResponseEntity&lt;T&gt; 类的使用</a></li>\n<li><a href=\"#requestmappinghandleradapter-\">RequestMappingHandlerAdapter</a><!-- TOC --></li>\n</ul>\n<p>在一次开发文件上传下载的任务中，学习了Spring中<code>Resource</code>类的使用, 不是<code>@Resource</code>, 本地测试项目是可以正常下载的，但是代码提交上去后发现返回的始终都是序列化的对象,而不是具体的文件, 通过对Spring返回值的学习和进一步追踪才找到问题所在。</p>\n<h1 id=\"ResponseBody-注解的处理\"><a href=\"#ResponseBody-注解的处理\" class=\"headerlink\" title=\"@ResponseBody 注解的处理\"></a>@ResponseBody 注解的处理</h1><blockquote>\n<p><code>@ResponseBody</code>注解顾名思义，就是将Controller的返回值经过处理写入到 <code>Response</code>中的<code>Body</code>字段上.具体处理方式则是通过各种<code>Converter</code>的实现类结合<code>MediaType</code> 去处理转换。  </p>\n</blockquote>\n<p> 虽然不知道谁控制着<code>Controller</code>注解，但是可以知道<code>@ResponseBody</code>注解是由<code>RequestResponseBodyMethodProcessor</code> 方法去处理的，该类同时还会处理方法参数中的<code>@RequestBody</code>注解,同样的，参数的读取也是通过”MessageConverter”来实现.</p>\n<p>因此，理论上也是可以通过修改Converter来控制返回值的类型的。而这个脑瘫项目就是这么处理的，将所有的返回类型都一刀切,全部都是json返回类型。</p>\n<h1 id=\"ContentNegotiationManagerFactoryBean\"><a href=\"#ContentNegotiationManagerFactoryBean\" class=\"headerlink\" title=\"ContentNegotiationManagerFactoryBean\"></a>ContentNegotiationManagerFactoryBean</h1><p>内容协商管理器工厂，就是控制入参和出参格式的类。这个工厂类是通过配置文件生成一个协商管理器，供Spring容器使用。可以通过配置文件配置支持的媒体类型和默认类型，而这个脑瘫项目就是只配置了json，默认也是<code>application/json</code>, 所以所有的返回值都以json字符串格式进行处理.  </p>\n<p>值得注意的是，该类本身是由工厂模式实现，而构建协商管理器的过程则是策略模式。最终的协商过程也是策略模式。</p>\n<h1 id=\"ResponseEntity-类的使用\"><a href=\"#ResponseEntity-类的使用\" class=\"headerlink\" title=\"ResponseEntity&lt;T&gt; 类的使用\"></a>ResponseEntity&lt;T&gt; 类的使用</h1><p>由于内容协商的修改，所以在本项目中,ResponseEntity已经失去了他的作用。  </p>\n<p>传统的MVC对于下载的处理方式是比较臃肿的，需要打开<code>HttpServletResponse</code>的输出流，设置响应头属性，和MIME属性，而这些操作既然都是一样的，那么<code>dont&#39;t repeat yourself</code> , 这也是该类的使用场景。<br>对于文件流，可以直接作为返回值，由内容协商管理器自动进行判断实现文件下载。</p>\n<pre><code class=\"java\">@RestController\nclass Demo &#123;\n    @GetMapping(&quot;file&quot;)\n    public ResponseEntity&lt;Resource&gt; download() &#123;\n        return new ResponseEntity&lt;&gt;(resource, HttpStatus.OK);\n    &#125;\n&#125;\n</code></pre>\n<p>还是由于项目中，修改了内容协商管理器，导致所有返回类型都是json，所以即使是文件流，其返回到前端依旧是json格式.</p>\n<h1 id=\"RequestMappingHandlerAdapter\"><a href=\"#RequestMappingHandlerAdapter\" class=\"headerlink\" title=\"RequestMappingHandlerAdapter\"></a>RequestMappingHandlerAdapter</h1><p>通过查阅资料及翻阅源码，大概知道了为什么自定义了<code>MessageConverter</code>导致ResponseEntity失效了。<br>顾名思义,<code>RequestMappingHandlerAdapter</code>就是处理<code>@RequestMapping</code>的类，接着会发现在这个类中有个字段是 <code>HandlerMethodReturnValueHandlerComposite</code>, 这是一个组合模式的实现类，处理方法返回值，通过debug得知运行时自动添加返回值处理策略，这些策略或者以<code>Handler</code>结尾，或者以<code>Processor</code>结尾，最终都会添加到这个组合类中,运行时根据返回值的类型进行动态地处理，比如以<code>ResponseEntity</code>作为返回值，会由<code>HttpEntityMethodProcessor</code>类进行处理。<br>程序到了这里， <code>ResponseEntity</code>还是能够正常处理的，但是当真正写结果的时候，发现是通过其父类的方法实现，而父类的方法则是上文所述的<code>MediaType</code>及其<code>HttpMessageConverter</code>实现类，原本根据不同的<code>MediaType</code>使用对应的<code>Converter</code>，此时由于只定义了<code>json</code>格式，其他格式也都默认为json，以至于最终的所有返回结果都是<code>JSONString</code>了。</p>\n<p>所以说，这个💩山项目自作聪明的方法，断绝了后续开发的扩展性，除非将其大改，否则就是💩上雕花。</p>\n"},{"title":"N2成绩以及展望","date":"2023-08-21T08:01:30.000Z","_content":"\n<!-- TOC -->\n* [成绩](#成绩)\n  * [契机](#契机)\n  * [基础](#基础)\n  * [正式参加](#正式参加)\n  * [计划](#计划)\n<!-- TOC -->\n\n# 成绩\n\n| 言语 | 读解 | 听解 | 总分  | 词汇 | 语法 |\n|:--:|:--:|:--:|:---:|:--:|:--:|\n| 45 | 44 | 49 | 138 | A  | A  |\n\n   \n## 契机\n\n<font size='5'>从</font>五月开始，或者是从年后回来开始复习，准备考N2，想起来当初学日语时，还是初中，空耳假面骑士的中二台词，后来才正式断断续续的自学之路，和网上的方法一样，通过『标准日本语』这本教材开始学习，也幸好自己英语成绩还不错，利用英语课的时间继续学习日语。 \n\n## 基础\n\n<font size='5'>高中</font>的时间非常紧张，两周休息一天半，就在这里挤时间学习，终于在高三前学完了初级上下册。听说这个教材有各种问题，但是也算是打下了一个基础了。到了大学时其实基本上已经忘记了。直到大二选修了日语专业的两门课，『日本传统文化』和『日语泛读』，两门都是外教的课，想到日语几乎零基础了，就利用暑假复习了几周，仓促开学😂。  \n\n\n<font size='5'>惊讶</font>的是，日专大二应该是到了N2的水平了，但是和他们一起上课的时候感觉不到差异，或者说有一些语法知识比他们还要熟悉，最大的差异就是口语了，非专业的没有接受过口语训练，所以即使都能听懂，但是却说不出来。可惜的是，当时有N2考试，但是因为没法从生活费中抽出550元而没有报名。随后就是三年的疫情，就没有后续了。  \n\n## 正式参加\n\n<font size='5'>工作</font>之后，因为个人性格问题(如果闲太久反而会恐慌),所以就重拾了日语学习，再加上有工资了，就报考了7月份的N2.不得不说，JLPT真和抢票一样，一不注意就抢不到了。好在最后有惊无险，选到了海大的考点。至此才是真正的开始。也是从这个时候做决定，要去日本生活。此时应该是四月份左右了。到7月2号正式考试，倒是没有遇到很难的问题，可能是有一些基础吧。  \n\n## 计划\n\n<font size='5'>N1</font>, 正在准备今年12月份的N1考试。希望能在年前拿到N1证书，这样也是比较有底气。不然只是N2，还是有些不够.\n\n","source":"_posts/JLPT-N2成绩以及展望.md","raw":"---\ntitle: N2成绩以及展望\ndate: \"2023-08-21 16:01:30\"\ncategories:\n  - 日常生活\ntags: [日语, 生活] \n---\n\n<!-- TOC -->\n* [成绩](#成绩)\n  * [契机](#契机)\n  * [基础](#基础)\n  * [正式参加](#正式参加)\n  * [计划](#计划)\n<!-- TOC -->\n\n# 成绩\n\n| 言语 | 读解 | 听解 | 总分  | 词汇 | 语法 |\n|:--:|:--:|:--:|:---:|:--:|:--:|\n| 45 | 44 | 49 | 138 | A  | A  |\n\n   \n## 契机\n\n<font size='5'>从</font>五月开始，或者是从年后回来开始复习，准备考N2，想起来当初学日语时，还是初中，空耳假面骑士的中二台词，后来才正式断断续续的自学之路，和网上的方法一样，通过『标准日本语』这本教材开始学习，也幸好自己英语成绩还不错，利用英语课的时间继续学习日语。 \n\n## 基础\n\n<font size='5'>高中</font>的时间非常紧张，两周休息一天半，就在这里挤时间学习，终于在高三前学完了初级上下册。听说这个教材有各种问题，但是也算是打下了一个基础了。到了大学时其实基本上已经忘记了。直到大二选修了日语专业的两门课，『日本传统文化』和『日语泛读』，两门都是外教的课，想到日语几乎零基础了，就利用暑假复习了几周，仓促开学😂。  \n\n\n<font size='5'>惊讶</font>的是，日专大二应该是到了N2的水平了，但是和他们一起上课的时候感觉不到差异，或者说有一些语法知识比他们还要熟悉，最大的差异就是口语了，非专业的没有接受过口语训练，所以即使都能听懂，但是却说不出来。可惜的是，当时有N2考试，但是因为没法从生活费中抽出550元而没有报名。随后就是三年的疫情，就没有后续了。  \n\n## 正式参加\n\n<font size='5'>工作</font>之后，因为个人性格问题(如果闲太久反而会恐慌),所以就重拾了日语学习，再加上有工资了，就报考了7月份的N2.不得不说，JLPT真和抢票一样，一不注意就抢不到了。好在最后有惊无险，选到了海大的考点。至此才是真正的开始。也是从这个时候做决定，要去日本生活。此时应该是四月份左右了。到7月2号正式考试，倒是没有遇到很难的问题，可能是有一些基础吧。  \n\n## 计划\n\n<font size='5'>N1</font>, 正在准备今年12月份的N1考试。希望能在年前拿到N1证书，这样也是比较有底气。不然只是N2，还是有些不够.\n\n","slug":"JLPT-N2成绩以及展望","published":1,"updated":"2023-12-09T03:59:40.114Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clpxpllhp0007akkv3hiabbha","content":"<!-- TOC -->\n<ul>\n<li><a href=\"#%E6%88%90%E7%BB%A9\">成绩</a><ul>\n<li><a href=\"#%E5%A5%91%E6%9C%BA\">契机</a></li>\n<li><a href=\"#%E5%9F%BA%E7%A1%80\">基础</a></li>\n<li><a href=\"#%E6%AD%A3%E5%BC%8F%E5%8F%82%E5%8A%A0\">正式参加</a></li>\n<li><a href=\"#%E8%AE%A1%E5%88%92\">计划</a><!-- TOC --></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"成绩\"><a href=\"#成绩\" class=\"headerlink\" title=\"成绩\"></a>成绩</h1><table>\n<thead>\n<tr>\n<th align=\"center\">言语</th>\n<th align=\"center\">读解</th>\n<th align=\"center\">听解</th>\n<th align=\"center\">总分</th>\n<th align=\"center\">词汇</th>\n<th align=\"center\">语法</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">45</td>\n<td align=\"center\">44</td>\n<td align=\"center\">49</td>\n<td align=\"center\">138</td>\n<td align=\"center\">A</td>\n<td align=\"center\">A</td>\n</tr>\n</tbody></table>\n<h2 id=\"契机\"><a href=\"#契机\" class=\"headerlink\" title=\"契机\"></a>契机</h2><p><font size='5'>从</font>五月开始，或者是从年后回来开始复习，准备考N2，想起来当初学日语时，还是初中，空耳假面骑士的中二台词，后来才正式断断续续的自学之路，和网上的方法一样，通过『标准日本语』这本教材开始学习，也幸好自己英语成绩还不错，利用英语课的时间继续学习日语。 </p>\n<h2 id=\"基础\"><a href=\"#基础\" class=\"headerlink\" title=\"基础\"></a>基础</h2><p><font size='5'>高中</font>的时间非常紧张，两周休息一天半，就在这里挤时间学习，终于在高三前学完了初级上下册。听说这个教材有各种问题，但是也算是打下了一个基础了。到了大学时其实基本上已经忘记了。直到大二选修了日语专业的两门课，『日本传统文化』和『日语泛读』，两门都是外教的课，想到日语几乎零基础了，就利用暑假复习了几周，仓促开学😂。  </p>\n<p><font size='5'>惊讶</font>的是，日专大二应该是到了N2的水平了，但是和他们一起上课的时候感觉不到差异，或者说有一些语法知识比他们还要熟悉，最大的差异就是口语了，非专业的没有接受过口语训练，所以即使都能听懂，但是却说不出来。可惜的是，当时有N2考试，但是因为没法从生活费中抽出550元而没有报名。随后就是三年的疫情，就没有后续了。  </p>\n<h2 id=\"正式参加\"><a href=\"#正式参加\" class=\"headerlink\" title=\"正式参加\"></a>正式参加</h2><p><font size='5'>工作</font>之后，因为个人性格问题(如果闲太久反而会恐慌),所以就重拾了日语学习，再加上有工资了，就报考了7月份的N2.不得不说，JLPT真和抢票一样，一不注意就抢不到了。好在最后有惊无险，选到了海大的考点。至此才是真正的开始。也是从这个时候做决定，要去日本生活。此时应该是四月份左右了。到7月2号正式考试，倒是没有遇到很难的问题，可能是有一些基础吧。  </p>\n<h2 id=\"计划\"><a href=\"#计划\" class=\"headerlink\" title=\"计划\"></a>计划</h2><p><font size='5'>N1</font>, 正在准备今年12月份的N1考试。希望能在年前拿到N1证书，这样也是比较有底气。不然只是N2，还是有些不够.</p>\n","site":{"data":{}},"excerpt":"","more":"<!-- TOC -->\n<ul>\n<li><a href=\"#%E6%88%90%E7%BB%A9\">成绩</a><ul>\n<li><a href=\"#%E5%A5%91%E6%9C%BA\">契机</a></li>\n<li><a href=\"#%E5%9F%BA%E7%A1%80\">基础</a></li>\n<li><a href=\"#%E6%AD%A3%E5%BC%8F%E5%8F%82%E5%8A%A0\">正式参加</a></li>\n<li><a href=\"#%E8%AE%A1%E5%88%92\">计划</a><!-- TOC --></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"成绩\"><a href=\"#成绩\" class=\"headerlink\" title=\"成绩\"></a>成绩</h1><table>\n<thead>\n<tr>\n<th align=\"center\">言语</th>\n<th align=\"center\">读解</th>\n<th align=\"center\">听解</th>\n<th align=\"center\">总分</th>\n<th align=\"center\">词汇</th>\n<th align=\"center\">语法</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">45</td>\n<td align=\"center\">44</td>\n<td align=\"center\">49</td>\n<td align=\"center\">138</td>\n<td align=\"center\">A</td>\n<td align=\"center\">A</td>\n</tr>\n</tbody></table>\n<h2 id=\"契机\"><a href=\"#契机\" class=\"headerlink\" title=\"契机\"></a>契机</h2><p><font size='5'>从</font>五月开始，或者是从年后回来开始复习，准备考N2，想起来当初学日语时，还是初中，空耳假面骑士的中二台词，后来才正式断断续续的自学之路，和网上的方法一样，通过『标准日本语』这本教材开始学习，也幸好自己英语成绩还不错，利用英语课的时间继续学习日语。 </p>\n<h2 id=\"基础\"><a href=\"#基础\" class=\"headerlink\" title=\"基础\"></a>基础</h2><p><font size='5'>高中</font>的时间非常紧张，两周休息一天半，就在这里挤时间学习，终于在高三前学完了初级上下册。听说这个教材有各种问题，但是也算是打下了一个基础了。到了大学时其实基本上已经忘记了。直到大二选修了日语专业的两门课，『日本传统文化』和『日语泛读』，两门都是外教的课，想到日语几乎零基础了，就利用暑假复习了几周，仓促开学😂。  </p>\n<p><font size='5'>惊讶</font>的是，日专大二应该是到了N2的水平了，但是和他们一起上课的时候感觉不到差异，或者说有一些语法知识比他们还要熟悉，最大的差异就是口语了，非专业的没有接受过口语训练，所以即使都能听懂，但是却说不出来。可惜的是，当时有N2考试，但是因为没法从生活费中抽出550元而没有报名。随后就是三年的疫情，就没有后续了。  </p>\n<h2 id=\"正式参加\"><a href=\"#正式参加\" class=\"headerlink\" title=\"正式参加\"></a>正式参加</h2><p><font size='5'>工作</font>之后，因为个人性格问题(如果闲太久反而会恐慌),所以就重拾了日语学习，再加上有工资了，就报考了7月份的N2.不得不说，JLPT真和抢票一样，一不注意就抢不到了。好在最后有惊无险，选到了海大的考点。至此才是真正的开始。也是从这个时候做决定，要去日本生活。此时应该是四月份左右了。到7月2号正式考试，倒是没有遇到很难的问题，可能是有一些基础吧。  </p>\n<h2 id=\"计划\"><a href=\"#计划\" class=\"headerlink\" title=\"计划\"></a>计划</h2><p><font size='5'>N1</font>, 正在准备今年12月份的N1考试。希望能在年前拿到N1证书，这样也是比较有底气。不然只是N2，还是有些不够.</p>\n"},{"title":"Jump Point Search 路径规划算法","date":"2023-09-01T08:31:15.000Z","_content":"\n# A* \n\n# Jump Point Search\n> JPS可以看作对A*的一个剪枝判断操作,只不过这个判断有些绕. 需要引入几个概念\n## 基本概念\n\n### 强制邻居\n如果不算斜角的话，一共有8种情况，举一个🌰: 当前点N，父节点P在左边，N的左上方有障碍物，上方是路，那么N的上方就是N的强迫邻居\n\n### 跳点\n\n## 流程\n","source":"_posts/Jump-Point-Search-路径规划算法.md","raw":"---\ntitle: Jump Point Search 路径规划算法\ndate: 2023-09-01 16:31:15\ncategories:\n  - 游戏相关\n  - 开发\ntags: [GameDev, 算法]\n---\n\n# A* \n\n# Jump Point Search\n> JPS可以看作对A*的一个剪枝判断操作,只不过这个判断有些绕. 需要引入几个概念\n## 基本概念\n\n### 强制邻居\n如果不算斜角的话，一共有8种情况，举一个🌰: 当前点N，父节点P在左边，N的左上方有障碍物，上方是路，那么N的上方就是N的强迫邻居\n\n### 跳点\n\n## 流程\n","slug":"Jump-Point-Search-路径规划算法","published":1,"updated":"2023-12-09T03:59:40.114Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clpxpllhq0008akkv3t87c5fw","content":"<h1 id=\"A\"><a href=\"#A\" class=\"headerlink\" title=\"A*\"></a>A*</h1><h1 id=\"Jump-Point-Search\"><a href=\"#Jump-Point-Search\" class=\"headerlink\" title=\"Jump Point Search\"></a>Jump Point Search</h1><blockquote>\n<p>JPS可以看作对A*的一个剪枝判断操作,只不过这个判断有些绕. 需要引入几个概念</p>\n</blockquote>\n<h2 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h2><h3 id=\"强制邻居\"><a href=\"#强制邻居\" class=\"headerlink\" title=\"强制邻居\"></a>强制邻居</h3><p>如果不算斜角的话，一共有8种情况，举一个🌰: 当前点N，父节点P在左边，N的左上方有障碍物，上方是路，那么N的上方就是N的强迫邻居</p>\n<h3 id=\"跳点\"><a href=\"#跳点\" class=\"headerlink\" title=\"跳点\"></a>跳点</h3><h2 id=\"流程\"><a href=\"#流程\" class=\"headerlink\" title=\"流程\"></a>流程</h2>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"A\"><a href=\"#A\" class=\"headerlink\" title=\"A*\"></a>A*</h1><h1 id=\"Jump-Point-Search\"><a href=\"#Jump-Point-Search\" class=\"headerlink\" title=\"Jump Point Search\"></a>Jump Point Search</h1><blockquote>\n<p>JPS可以看作对A*的一个剪枝判断操作,只不过这个判断有些绕. 需要引入几个概念</p>\n</blockquote>\n<h2 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h2><h3 id=\"强制邻居\"><a href=\"#强制邻居\" class=\"headerlink\" title=\"强制邻居\"></a>强制邻居</h3><p>如果不算斜角的话，一共有8种情况，举一个🌰: 当前点N，父节点P在左边，N的左上方有障碍物，上方是路，那么N的上方就是N的强迫邻居</p>\n<h3 id=\"跳点\"><a href=\"#跳点\" class=\"headerlink\" title=\"跳点\"></a>跳点</h3><h2 id=\"流程\"><a href=\"#流程\" class=\"headerlink\" title=\"流程\"></a>流程</h2>"},{"title":"MySQL应对上亿级别的数据的挑战","date":"2023-09-08T14:06:13.000Z","_content":"\n<mark>建设中</mark>","source":"_posts/MySQL应对上亿级别的数据的挑战.md","raw":"---\ntitle: MySQL应对上亿级别的数据的挑战\ndate: 2023-09-08 22:06:13\ncategories:\n  - 开发相关\n  - 中间件\ntags: [Java, MySQL]\n---\n\n<mark>建设中</mark>","slug":"MySQL应对上亿级别的数据的挑战","published":1,"updated":"2023-12-09T03:59:40.114Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clpxpllhr0009akkve36e2vmr","content":"<p><mark>建设中</mark></p>\n","site":{"data":{}},"excerpt":"","more":"<p><mark>建设中</mark></p>\n"},{"title":"Hello World","date":"2013-12-24T09:49:32.000Z","_content":"\nWelcome to [Hexo](http://zespia.tw/hexo)! This is your very first post. Check [documentation](http://zespia.tw/hexo/docs) to learn how to use.\n","source":"_posts/hello-world.md","raw":"title: Hello World\ndate: 2013-12-24 17:49:32\ntags:\n---\n\nWelcome to [Hexo](http://zespia.tw/hexo)! This is your very first post. Check [documentation](http://zespia.tw/hexo/docs) to learn how to use.\n","slug":"hello-world","published":1,"updated":"2023-12-09T03:59:40.114Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clpxpllht000cakkv65ond1ap","content":"<p>Welcome to <a href=\"http://zespia.tw/hexo\">Hexo</a>! This is your very first post. Check <a href=\"http://zespia.tw/hexo/docs\">documentation</a> to learn how to use.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"http://zespia.tw/hexo\">Hexo</a>! This is your very first post. Check <a href=\"http://zespia.tw/hexo/docs\">documentation</a> to learn how to use.</p>\n"},{"title":"java动态代理","date":"2023-08-31T02:29:38.000Z","update":"2023-08-31 17:21:22","_content":"\n<!-- TOC -->\n* [前言](#前言-)\n* [事务](#事务)\n* [失效](#失效)\n* [动态代理](#动态代理)\n  * [Spring AOP 和 AspectJ](#spring-aop-和-aspectj)\n    * [AspectJ](#aspectj)\n    * [Spring AOP](#spring-aop)\n  * [JDK Proxy 和 Cglib](#jdk-proxy-和-cglib)\n* [总结](#总结)\n<!-- TOC -->\n\n# 前言 \n\n某个同事写了逆天代码，大概情况如下\n\n```java\ninterface Demo {\n    String selectByConditionSharding(String name);\n}\n```\n\n逆天在哪呢，根据条件查，但是条件是固定的，名字带分片，实际一点关系都没有. 为别人阅读代码提供困难，这是个人代码习惯的问题了，不再赘述.\n\n但是在后面的代码中，看到这两行让我有所沉思\n\n```java\nclass Demo {\n    @Autowired\n    ApplicationContext context;\n\n    public void doSth() {\n        Object bean = context.getBean(\"BeanName\");\n        bean.doSomeThing();\n    }\n}\n```\n\n看的出来,他考虑到了**事务失效**的情况,但是这让我陷入思考:  \n1. 哪些情况下事务会失效\n2. 同一个类中`this`调用一定会失效吗 (不一定)\n3. Spring AOP 和 AspectJ 和 cglib到底怎么回事\n\n带着以上问题，我去谷歌一下，最终整理了一下.\n\n# 事务\n\n# 失效场景\n常见的几种场景简介,不细说，网上一搜一大堆:\n1. 没有指定且抛出受检异常(所有非`RuntimeException`) -- 配置`rollBackFor`属性\n2. 异常被内部catch了，没有抛出.   -- 最好使用编程式事务`transactionTemplate.execute()`\n3. 同一个类中的方法调用 -- 使用AspectJ作为代理方式\n4. 使用了final或static关键字 -- 去掉\n5. 修饰符为非public -- 改为public\n6. 传播方式设置不对 -- 最好默认设置为`requied`\n7. 没有被spring管理，只有bean才能被管理\n8. 多线程... 使用分布式事务吧\n\n# 动态代理\n\n## Spring AOP 和 AspectJ\n> 这两个东西常常放在一起说明，实际上是两个截然不同的东西。\n\n现在常用的Spring AOP实际上**借用了**AspectJ的一些注解.致使我认为SpringAOP和AspectJ是同一个东西, 在Spring配置中开启`<aop:aspectj-autoproxy/>`即可识别AspectJ的一些注解\n\n### AspectJ\n> AspectJ其实(在某些意义下)应该和Lombok并列的存在，某种程度独立于JVM，在编译期间就对类进行织入，实际上运行时已经是被代理的类了。也就是说使用AspectJ代理的类，在加载时就不是它自己了。\n\n因为它是在{编译期间, 编译之后, 加载前}进行织入，所以运行期间就没有它什么事了。\n\n### Spring AOP\n> SpringAOP则是对AOP概念在Spring架构下的一种实现，只在Spring容器中才能实现，无法脱离容器，而且也是在运行期间进行代理。\n\n由于SpringAOP是运行期间进行动态代理的，所以在同一个类中调用自己的方法，是不会被代理，所以使用`@Transactional`主键的类事务就失效了.\n\n如果让类内调用保留事务，则必须使用AspectJ来实现动态代理。可以在配置中切换为AspectJ代理\n\n```xml\n<tx:annotation-driven  mode=\"aspectj\"/>\n```\n\n## JDK Proxy 和 Cglib\n> 动态代理有两种实现方式，一种是JDK原生的方法，另一种则是使用字节码技术。\n\nJDK原生方法实际上就是通过代码实现`代理模式`, 具体实现方式网上有很多了。总之就是必须要实现接口，编写代码。  \n而使用Cglib则比原生JDK方式更自由，不需要显式实现接口，而是在编译期对源代码进行改写。\n\n都不能对final修饰的类和方法进行代理。\n\n# 总结\n\n在同一个类中调用不一定会使事务失效，需要非原生jdk的动态代理方式才能实现，SpringAOP使用了jdk原生的动态代理实现方式，因此不能处理同一个类中的方法调用问题。","source":"_posts/java动态代理.md","raw":"---\ntitle: java动态代理\ndate: \"2023-08-31 10:29:38\"\nupdate: \"2023-08-31 17:21:22\"\ncategories:\n  - 开发相关\ntags: [Java, Spring]\n---\n\n<!-- TOC -->\n* [前言](#前言-)\n* [事务](#事务)\n* [失效](#失效)\n* [动态代理](#动态代理)\n  * [Spring AOP 和 AspectJ](#spring-aop-和-aspectj)\n    * [AspectJ](#aspectj)\n    * [Spring AOP](#spring-aop)\n  * [JDK Proxy 和 Cglib](#jdk-proxy-和-cglib)\n* [总结](#总结)\n<!-- TOC -->\n\n# 前言 \n\n某个同事写了逆天代码，大概情况如下\n\n```java\ninterface Demo {\n    String selectByConditionSharding(String name);\n}\n```\n\n逆天在哪呢，根据条件查，但是条件是固定的，名字带分片，实际一点关系都没有. 为别人阅读代码提供困难，这是个人代码习惯的问题了，不再赘述.\n\n但是在后面的代码中，看到这两行让我有所沉思\n\n```java\nclass Demo {\n    @Autowired\n    ApplicationContext context;\n\n    public void doSth() {\n        Object bean = context.getBean(\"BeanName\");\n        bean.doSomeThing();\n    }\n}\n```\n\n看的出来,他考虑到了**事务失效**的情况,但是这让我陷入思考:  \n1. 哪些情况下事务会失效\n2. 同一个类中`this`调用一定会失效吗 (不一定)\n3. Spring AOP 和 AspectJ 和 cglib到底怎么回事\n\n带着以上问题，我去谷歌一下，最终整理了一下.\n\n# 事务\n\n# 失效场景\n常见的几种场景简介,不细说，网上一搜一大堆:\n1. 没有指定且抛出受检异常(所有非`RuntimeException`) -- 配置`rollBackFor`属性\n2. 异常被内部catch了，没有抛出.   -- 最好使用编程式事务`transactionTemplate.execute()`\n3. 同一个类中的方法调用 -- 使用AspectJ作为代理方式\n4. 使用了final或static关键字 -- 去掉\n5. 修饰符为非public -- 改为public\n6. 传播方式设置不对 -- 最好默认设置为`requied`\n7. 没有被spring管理，只有bean才能被管理\n8. 多线程... 使用分布式事务吧\n\n# 动态代理\n\n## Spring AOP 和 AspectJ\n> 这两个东西常常放在一起说明，实际上是两个截然不同的东西。\n\n现在常用的Spring AOP实际上**借用了**AspectJ的一些注解.致使我认为SpringAOP和AspectJ是同一个东西, 在Spring配置中开启`<aop:aspectj-autoproxy/>`即可识别AspectJ的一些注解\n\n### AspectJ\n> AspectJ其实(在某些意义下)应该和Lombok并列的存在，某种程度独立于JVM，在编译期间就对类进行织入，实际上运行时已经是被代理的类了。也就是说使用AspectJ代理的类，在加载时就不是它自己了。\n\n因为它是在{编译期间, 编译之后, 加载前}进行织入，所以运行期间就没有它什么事了。\n\n### Spring AOP\n> SpringAOP则是对AOP概念在Spring架构下的一种实现，只在Spring容器中才能实现，无法脱离容器，而且也是在运行期间进行代理。\n\n由于SpringAOP是运行期间进行动态代理的，所以在同一个类中调用自己的方法，是不会被代理，所以使用`@Transactional`主键的类事务就失效了.\n\n如果让类内调用保留事务，则必须使用AspectJ来实现动态代理。可以在配置中切换为AspectJ代理\n\n```xml\n<tx:annotation-driven  mode=\"aspectj\"/>\n```\n\n## JDK Proxy 和 Cglib\n> 动态代理有两种实现方式，一种是JDK原生的方法，另一种则是使用字节码技术。\n\nJDK原生方法实际上就是通过代码实现`代理模式`, 具体实现方式网上有很多了。总之就是必须要实现接口，编写代码。  \n而使用Cglib则比原生JDK方式更自由，不需要显式实现接口，而是在编译期对源代码进行改写。\n\n都不能对final修饰的类和方法进行代理。\n\n# 总结\n\n在同一个类中调用不一定会使事务失效，需要非原生jdk的动态代理方式才能实现，SpringAOP使用了jdk原生的动态代理实现方式，因此不能处理同一个类中的方法调用问题。","slug":"java动态代理","published":1,"updated":"2023-12-09T03:59:40.114Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clpxpllhu000dakkv5o3ceh51","content":"<!-- TOC -->\n<ul>\n<li><a href=\"#%E5%89%8D%E8%A8%80-\">前言</a></li>\n<li><a href=\"#%E4%BA%8B%E5%8A%A1\">事务</a></li>\n<li><a href=\"#%E5%A4%B1%E6%95%88\">失效</a></li>\n<li><a href=\"#%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86\">动态代理</a><ul>\n<li><a href=\"#spring-aop-%E5%92%8C-aspectj\">Spring AOP 和 AspectJ</a><ul>\n<li><a href=\"#aspectj\">AspectJ</a></li>\n<li><a href=\"#spring-aop\">Spring AOP</a></li>\n</ul>\n</li>\n<li><a href=\"#jdk-proxy-%E5%92%8C-cglib\">JDK Proxy 和 Cglib</a></li>\n</ul>\n</li>\n<li><a href=\"#%E6%80%BB%E7%BB%93\">总结</a><!-- TOC --></li>\n</ul>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>某个同事写了逆天代码，大概情况如下</p>\n<pre><code class=\"java\">interface Demo &#123;\n    String selectByConditionSharding(String name);\n&#125;\n</code></pre>\n<p>逆天在哪呢，根据条件查，但是条件是固定的，名字带分片，实际一点关系都没有. 为别人阅读代码提供困难，这是个人代码习惯的问题了，不再赘述.</p>\n<p>但是在后面的代码中，看到这两行让我有所沉思</p>\n<pre><code class=\"java\">class Demo &#123;\n    @Autowired\n    ApplicationContext context;\n\n    public void doSth() &#123;\n        Object bean = context.getBean(&quot;BeanName&quot;);\n        bean.doSomeThing();\n    &#125;\n&#125;\n</code></pre>\n<p>看的出来,他考虑到了<strong>事务失效</strong>的情况,但是这让我陷入思考:  </p>\n<ol>\n<li>哪些情况下事务会失效</li>\n<li>同一个类中<code>this</code>调用一定会失效吗 (不一定)</li>\n<li>Spring AOP 和 AspectJ 和 cglib到底怎么回事</li>\n</ol>\n<p>带着以上问题，我去谷歌一下，最终整理了一下.</p>\n<h1 id=\"事务\"><a href=\"#事务\" class=\"headerlink\" title=\"事务\"></a>事务</h1><h1 id=\"失效场景\"><a href=\"#失效场景\" class=\"headerlink\" title=\"失效场景\"></a>失效场景</h1><p>常见的几种场景简介,不细说，网上一搜一大堆:</p>\n<ol>\n<li>没有指定且抛出受检异常(所有非<code>RuntimeException</code>) – 配置<code>rollBackFor</code>属性</li>\n<li>异常被内部catch了，没有抛出.   – 最好使用编程式事务<code>transactionTemplate.execute()</code></li>\n<li>同一个类中的方法调用 – 使用AspectJ作为代理方式</li>\n<li>使用了final或static关键字 – 去掉</li>\n<li>修饰符为非public – 改为public</li>\n<li>传播方式设置不对 – 最好默认设置为<code>requied</code></li>\n<li>没有被spring管理，只有bean才能被管理</li>\n<li>多线程… 使用分布式事务吧</li>\n</ol>\n<h1 id=\"动态代理\"><a href=\"#动态代理\" class=\"headerlink\" title=\"动态代理\"></a>动态代理</h1><h2 id=\"Spring-AOP-和-AspectJ\"><a href=\"#Spring-AOP-和-AspectJ\" class=\"headerlink\" title=\"Spring AOP 和 AspectJ\"></a>Spring AOP 和 AspectJ</h2><blockquote>\n<p>这两个东西常常放在一起说明，实际上是两个截然不同的东西。</p>\n</blockquote>\n<p>现在常用的Spring AOP实际上<strong>借用了</strong>AspectJ的一些注解.致使我认为SpringAOP和AspectJ是同一个东西, 在Spring配置中开启<code>&lt;aop:aspectj-autoproxy/&gt;</code>即可识别AspectJ的一些注解</p>\n<h3 id=\"AspectJ\"><a href=\"#AspectJ\" class=\"headerlink\" title=\"AspectJ\"></a>AspectJ</h3><blockquote>\n<p>AspectJ其实(在某些意义下)应该和Lombok并列的存在，某种程度独立于JVM，在编译期间就对类进行织入，实际上运行时已经是被代理的类了。也就是说使用AspectJ代理的类，在加载时就不是它自己了。</p>\n</blockquote>\n<p>因为它是在{编译期间, 编译之后, 加载前}进行织入，所以运行期间就没有它什么事了。</p>\n<h3 id=\"Spring-AOP\"><a href=\"#Spring-AOP\" class=\"headerlink\" title=\"Spring AOP\"></a>Spring AOP</h3><blockquote>\n<p>SpringAOP则是对AOP概念在Spring架构下的一种实现，只在Spring容器中才能实现，无法脱离容器，而且也是在运行期间进行代理。</p>\n</blockquote>\n<p>由于SpringAOP是运行期间进行动态代理的，所以在同一个类中调用自己的方法，是不会被代理，所以使用<code>@Transactional</code>主键的类事务就失效了.</p>\n<p>如果让类内调用保留事务，则必须使用AspectJ来实现动态代理。可以在配置中切换为AspectJ代理</p>\n<pre><code class=\"xml\">&lt;tx:annotation-driven  mode=&quot;aspectj&quot;/&gt;\n</code></pre>\n<h2 id=\"JDK-Proxy-和-Cglib\"><a href=\"#JDK-Proxy-和-Cglib\" class=\"headerlink\" title=\"JDK Proxy 和 Cglib\"></a>JDK Proxy 和 Cglib</h2><blockquote>\n<p>动态代理有两种实现方式，一种是JDK原生的方法，另一种则是使用字节码技术。</p>\n</blockquote>\n<p>JDK原生方法实际上就是通过代码实现<code>代理模式</code>, 具体实现方式网上有很多了。总之就是必须要实现接口，编写代码。<br>而使用Cglib则比原生JDK方式更自由，不需要显式实现接口，而是在编译期对源代码进行改写。</p>\n<p>都不能对final修饰的类和方法进行代理。</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>在同一个类中调用不一定会使事务失效，需要非原生jdk的动态代理方式才能实现，SpringAOP使用了jdk原生的动态代理实现方式，因此不能处理同一个类中的方法调用问题。</p>\n","site":{"data":{}},"excerpt":"","more":"<!-- TOC -->\n<ul>\n<li><a href=\"#%E5%89%8D%E8%A8%80-\">前言</a></li>\n<li><a href=\"#%E4%BA%8B%E5%8A%A1\">事务</a></li>\n<li><a href=\"#%E5%A4%B1%E6%95%88\">失效</a></li>\n<li><a href=\"#%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86\">动态代理</a><ul>\n<li><a href=\"#spring-aop-%E5%92%8C-aspectj\">Spring AOP 和 AspectJ</a><ul>\n<li><a href=\"#aspectj\">AspectJ</a></li>\n<li><a href=\"#spring-aop\">Spring AOP</a></li>\n</ul>\n</li>\n<li><a href=\"#jdk-proxy-%E5%92%8C-cglib\">JDK Proxy 和 Cglib</a></li>\n</ul>\n</li>\n<li><a href=\"#%E6%80%BB%E7%BB%93\">总结</a><!-- TOC --></li>\n</ul>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>某个同事写了逆天代码，大概情况如下</p>\n<pre><code class=\"java\">interface Demo &#123;\n    String selectByConditionSharding(String name);\n&#125;\n</code></pre>\n<p>逆天在哪呢，根据条件查，但是条件是固定的，名字带分片，实际一点关系都没有. 为别人阅读代码提供困难，这是个人代码习惯的问题了，不再赘述.</p>\n<p>但是在后面的代码中，看到这两行让我有所沉思</p>\n<pre><code class=\"java\">class Demo &#123;\n    @Autowired\n    ApplicationContext context;\n\n    public void doSth() &#123;\n        Object bean = context.getBean(&quot;BeanName&quot;);\n        bean.doSomeThing();\n    &#125;\n&#125;\n</code></pre>\n<p>看的出来,他考虑到了<strong>事务失效</strong>的情况,但是这让我陷入思考:  </p>\n<ol>\n<li>哪些情况下事务会失效</li>\n<li>同一个类中<code>this</code>调用一定会失效吗 (不一定)</li>\n<li>Spring AOP 和 AspectJ 和 cglib到底怎么回事</li>\n</ol>\n<p>带着以上问题，我去谷歌一下，最终整理了一下.</p>\n<h1 id=\"事务\"><a href=\"#事务\" class=\"headerlink\" title=\"事务\"></a>事务</h1><h1 id=\"失效场景\"><a href=\"#失效场景\" class=\"headerlink\" title=\"失效场景\"></a>失效场景</h1><p>常见的几种场景简介,不细说，网上一搜一大堆:</p>\n<ol>\n<li>没有指定且抛出受检异常(所有非<code>RuntimeException</code>) – 配置<code>rollBackFor</code>属性</li>\n<li>异常被内部catch了，没有抛出.   – 最好使用编程式事务<code>transactionTemplate.execute()</code></li>\n<li>同一个类中的方法调用 – 使用AspectJ作为代理方式</li>\n<li>使用了final或static关键字 – 去掉</li>\n<li>修饰符为非public – 改为public</li>\n<li>传播方式设置不对 – 最好默认设置为<code>requied</code></li>\n<li>没有被spring管理，只有bean才能被管理</li>\n<li>多线程… 使用分布式事务吧</li>\n</ol>\n<h1 id=\"动态代理\"><a href=\"#动态代理\" class=\"headerlink\" title=\"动态代理\"></a>动态代理</h1><h2 id=\"Spring-AOP-和-AspectJ\"><a href=\"#Spring-AOP-和-AspectJ\" class=\"headerlink\" title=\"Spring AOP 和 AspectJ\"></a>Spring AOP 和 AspectJ</h2><blockquote>\n<p>这两个东西常常放在一起说明，实际上是两个截然不同的东西。</p>\n</blockquote>\n<p>现在常用的Spring AOP实际上<strong>借用了</strong>AspectJ的一些注解.致使我认为SpringAOP和AspectJ是同一个东西, 在Spring配置中开启<code>&lt;aop:aspectj-autoproxy/&gt;</code>即可识别AspectJ的一些注解</p>\n<h3 id=\"AspectJ\"><a href=\"#AspectJ\" class=\"headerlink\" title=\"AspectJ\"></a>AspectJ</h3><blockquote>\n<p>AspectJ其实(在某些意义下)应该和Lombok并列的存在，某种程度独立于JVM，在编译期间就对类进行织入，实际上运行时已经是被代理的类了。也就是说使用AspectJ代理的类，在加载时就不是它自己了。</p>\n</blockquote>\n<p>因为它是在{编译期间, 编译之后, 加载前}进行织入，所以运行期间就没有它什么事了。</p>\n<h3 id=\"Spring-AOP\"><a href=\"#Spring-AOP\" class=\"headerlink\" title=\"Spring AOP\"></a>Spring AOP</h3><blockquote>\n<p>SpringAOP则是对AOP概念在Spring架构下的一种实现，只在Spring容器中才能实现，无法脱离容器，而且也是在运行期间进行代理。</p>\n</blockquote>\n<p>由于SpringAOP是运行期间进行动态代理的，所以在同一个类中调用自己的方法，是不会被代理，所以使用<code>@Transactional</code>主键的类事务就失效了.</p>\n<p>如果让类内调用保留事务，则必须使用AspectJ来实现动态代理。可以在配置中切换为AspectJ代理</p>\n<pre><code class=\"xml\">&lt;tx:annotation-driven  mode=&quot;aspectj&quot;/&gt;\n</code></pre>\n<h2 id=\"JDK-Proxy-和-Cglib\"><a href=\"#JDK-Proxy-和-Cglib\" class=\"headerlink\" title=\"JDK Proxy 和 Cglib\"></a>JDK Proxy 和 Cglib</h2><blockquote>\n<p>动态代理有两种实现方式，一种是JDK原生的方法，另一种则是使用字节码技术。</p>\n</blockquote>\n<p>JDK原生方法实际上就是通过代码实现<code>代理模式</code>, 具体实现方式网上有很多了。总之就是必须要实现接口，编写代码。<br>而使用Cglib则比原生JDK方式更自由，不需要显式实现接口，而是在编译期对源代码进行改写。</p>\n<p>都不能对final修饰的类和方法进行代理。</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>在同一个类中调用不一定会使事务失效，需要非原生jdk的动态代理方式才能实现，SpringAOP使用了jdk原生的动态代理实现方式，因此不能处理同一个类中的方法调用问题。</p>\n"},{"title":"一次git代码合并导致的问题","date":"2023-09-08T07:23:38.000Z","_content":"\n> 因为一次代码合并失误，导致线上事故，扣了绩效，引以为戒\n\n在一个月前某次发版的时候，使用cherry-pick不熟练，将别人的代码覆盖了，这一个月的时间造成了一些单子多生成了，产生了比较严重的后果，因此将其记录下来。\n\n对一个文件进行修改提交之后，另一个人在修改的基础上再次进行修改，然后等到正式上线的时候，最后修改的先发上去，那么问题来了，如果此时我提交第一次修改到master分支，会如何解决冲突？\n\n这就是这次事故的原因了。 cherry-pick的时候产生了冲突，在解决冲突的时候，使用第一版的代码覆盖了后续的代码。\n\n```java\n// change 1    -- committed by A 1:00\n// change 2    -- committed by B 2:00\n```\n\n如果此时先提交了B，后提交了A，会触发resolve conflict，此时代码是没有B提交，很容易将B代码覆盖，但是如果**隔了几行**，此时提交的顺序就可以改变了. ~~估计是检测了相邻的几行代码~~ \n\n现阶段对于git的应用还是拉取开发分支到本地，修改后直接提交推送到远程，架构部的推荐方式则是使用多个分支，如`hotfix`,`release`,`feature`等等，分别代表\"紧急修补\",\"正式\",\"业务功能\"等，但是由于老项目不支持本地启动，因此无法实现这个设想。","source":"_posts/一次git代码合并导致的问题.md","raw":"---\ntitle: 一次git代码合并导致的问题\ndate: 2023-09-08 15:23:38\ncategories:\n  - 开发相关\ntags: [Java, Git]\n---\n\n> 因为一次代码合并失误，导致线上事故，扣了绩效，引以为戒\n\n在一个月前某次发版的时候，使用cherry-pick不熟练，将别人的代码覆盖了，这一个月的时间造成了一些单子多生成了，产生了比较严重的后果，因此将其记录下来。\n\n对一个文件进行修改提交之后，另一个人在修改的基础上再次进行修改，然后等到正式上线的时候，最后修改的先发上去，那么问题来了，如果此时我提交第一次修改到master分支，会如何解决冲突？\n\n这就是这次事故的原因了。 cherry-pick的时候产生了冲突，在解决冲突的时候，使用第一版的代码覆盖了后续的代码。\n\n```java\n// change 1    -- committed by A 1:00\n// change 2    -- committed by B 2:00\n```\n\n如果此时先提交了B，后提交了A，会触发resolve conflict，此时代码是没有B提交，很容易将B代码覆盖，但是如果**隔了几行**，此时提交的顺序就可以改变了. ~~估计是检测了相邻的几行代码~~ \n\n现阶段对于git的应用还是拉取开发分支到本地，修改后直接提交推送到远程，架构部的推荐方式则是使用多个分支，如`hotfix`,`release`,`feature`等等，分别代表\"紧急修补\",\"正式\",\"业务功能\"等，但是由于老项目不支持本地启动，因此无法实现这个设想。","slug":"一次git代码合并导致的问题","published":1,"updated":"2023-12-09T03:59:40.114Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clpxpllhv000hakkv7kd2hjpt","content":"<blockquote>\n<p>因为一次代码合并失误，导致线上事故，扣了绩效，引以为戒</p>\n</blockquote>\n<p>在一个月前某次发版的时候，使用cherry-pick不熟练，将别人的代码覆盖了，这一个月的时间造成了一些单子多生成了，产生了比较严重的后果，因此将其记录下来。</p>\n<p>对一个文件进行修改提交之后，另一个人在修改的基础上再次进行修改，然后等到正式上线的时候，最后修改的先发上去，那么问题来了，如果此时我提交第一次修改到master分支，会如何解决冲突？</p>\n<p>这就是这次事故的原因了。 cherry-pick的时候产生了冲突，在解决冲突的时候，使用第一版的代码覆盖了后续的代码。</p>\n<pre><code class=\"java\">// change 1    -- committed by A 1:00\n// change 2    -- committed by B 2:00\n</code></pre>\n<p>如果此时先提交了B，后提交了A，会触发resolve conflict，此时代码是没有B提交，很容易将B代码覆盖，但是如果<strong>隔了几行</strong>，此时提交的顺序就可以改变了. <del>估计是检测了相邻的几行代码</del> </p>\n<p>现阶段对于git的应用还是拉取开发分支到本地，修改后直接提交推送到远程，架构部的推荐方式则是使用多个分支，如<code>hotfix</code>,<code>release</code>,<code>feature</code>等等，分别代表”紧急修补”,”正式”,”业务功能”等，但是由于老项目不支持本地启动，因此无法实现这个设想。</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>因为一次代码合并失误，导致线上事故，扣了绩效，引以为戒</p>\n</blockquote>\n<p>在一个月前某次发版的时候，使用cherry-pick不熟练，将别人的代码覆盖了，这一个月的时间造成了一些单子多生成了，产生了比较严重的后果，因此将其记录下来。</p>\n<p>对一个文件进行修改提交之后，另一个人在修改的基础上再次进行修改，然后等到正式上线的时候，最后修改的先发上去，那么问题来了，如果此时我提交第一次修改到master分支，会如何解决冲突？</p>\n<p>这就是这次事故的原因了。 cherry-pick的时候产生了冲突，在解决冲突的时候，使用第一版的代码覆盖了后续的代码。</p>\n<pre><code class=\"java\">// change 1    -- committed by A 1:00\n// change 2    -- committed by B 2:00\n</code></pre>\n<p>如果此时先提交了B，后提交了A，会触发resolve conflict，此时代码是没有B提交，很容易将B代码覆盖，但是如果<strong>隔了几行</strong>，此时提交的顺序就可以改变了. <del>估计是检测了相邻的几行代码</del> </p>\n<p>现阶段对于git的应用还是拉取开发分支到本地，修改后直接提交推送到远程，架构部的推荐方式则是使用多个分支，如<code>hotfix</code>,<code>release</code>,<code>feature</code>等等，分别代表”紧急修补”,”正式”,”业务功能”等，但是由于老项目不支持本地启动，因此无法实现这个设想。</p>\n"},{"title":"回顾过去，展望未来","date":"2023-12-09T05:06:51.000Z","_content":"\n不知不觉来到日本已经两周了，一周的时间准备，一周的时间上班，在这里遇到了新的朋友，也去了很多地方。可能是来的时间比较短吧，还是有种不真实感。心里比较烦躁，可是具体又是什么原因一时也说不上来。  \n「心が落ち着かない」也可能是「居安思危」吧。毕竟这种人生不能自由掌控的状态真的会让自己不能安心。  \n既然已经放弃国内生活来到日本，必然要整理一下当前的所有情况，再制定下一步的计划。\n\n# 当前的情况分析  \n+ 到目前为止，宿舍是明年2月底到期  \n+ 工作在秋叶原站附近的大楼，项目至少持续一年\n+ 身上积蓄20w日元左右，月底发当月工资，到第二个月底开始找房子，大约能有40w积蓄，租房子是足够了\n+ 工作经验只有1.5年，Java相关，没有任何证书\n+ 日语只有N2，有N2证书，日常交流也挺勉强的\n+ 英语日常交流，只有6级，没有认可度\n+ 工作朝九晚六，双休，很少加班，基本晚上6点下班，那么晚上的时间可以利用\n\n# 未来的计划和安排\n> 根据个人的看法排出的一些事项，如果按照签证的日期来算的话，计划粗略估计要安排未来5年的 2028年\n\n重要度来说：\n1. 日语，提高日语水平 （N1）\n   1. 日常口语需要提高\n   2. 参加当地的日语交流活动提高日语\n   3. N1的证书一定要拿到，在此期间可以复习语法和单词，即使企业不怎么看重，但这也是日语学习的证明\n   4. 按照CERF标准学习到C1是最终目标\n2. 技术方面\n   1. Oracle Java I&II 两个证明 （有效期3年）\n   2. IT support （两周内拿到）\n   3. AWS 证书 \n      1. 一共有12个证书，先从简单的开始\n   4. Oracle MySQL 1Z0-908 （有效期3年）\n   5. Oracle 数据库认证 （优先级往后\n3. 英语，生活中相对重要\n   1. BEC初级\n   2. BEC中级\n   3. 托福 100+ & IELTS 7.5\n   4. 按照CEFR标准到达C1是最终目标\n4. 工作\n   1. 目前的工作，3年时间，积累经验 （2.5年后开始准备）\n   2. 大手外资，英语为主\n   3. 大手日企，日语为主\n   4. 普通外资，普通日企\n   5. 前往德国工作，但是需要时间学习德语\n\n于是，根据以上安排了接下来的任务\n\n| 任务                   | 年    | 月  | 准备  | 备注                        |\n|----------------------|------|----|-----|---------------------------|\n| IT SUPPORT           | 2023 | 12 | 三周  | 学习最基本的知识                  |\n| Oracle Java I        | 2024 | 1  | 两周  | 最初级的证明                    |\n| 找房子                  | 2024 | 2  | 三周  | 在神奈川附近不错                  |\n| 报名JLPT N1            | 2024 | 3  | 一周  | 准备N1                      |\n| 日语CERF               | 2024 | 6  | 三个月 | 目标B2 (即N1)                |\n| 开始攻克AWS              | 2024 | 7  | 三周  | 拿到最基本的证书                  |\n| BEC初级                | 2024 | 8  | 四周  | 一个月时间准备                   |\n| Oracle Java II       | 2024 | 9  | 四周  | 高级证明                      |\n| BEC中级                | 2024 | 11 | 两个月 | 商务英语水平，之后就是维持水平即可         |\n| 工作满一年                | 2024 | 12 | 0   | 正式在日本待满1年                 |\n| Oracle MySQL 1Z0-908 | 2025 | 1  | 两个月 | MySQL的最高级证书               |\n| AWS证书                | 2025 | 3  | 两个月 | 目标是拿到一半的证书                |\n| IELTS                | 2025 | 4  | 一个月 | 有BEC中级的基础，可以尝试雅思          |\n| 开始学习Oracle证书相关       | 2025 | 6  | 两个月 | 目标拿到证书，根据学习情况安排           |\n| 日语CERF               | 2025 | 10 | 四个月 | 这段时间不断提高日语水平，争取达到C1       |\n| 托福                   | 2025 | 12 | 两个月 | 首次尝试托福100+                |\n| 工作满二年                | 2025 | 12 | 0   | 正式在日本待满2年                 |\n| 准备找工作                | 2025 | 3  | 3个月 | 过年后就开始准备，工作两年，可以有20天的带薪休假 |\n| 根据找工作的情况安排下一步计划      | 2025 | 4  | 1个月 | 这段时间看看情况，此时应该正好是2.5年      |\n| 开始学习德语               | 2025 | 12 | 8个月 | 德语到入门的程度即可，此时一定要保证英语是C1   |\n\n\n1. 日语\n2. IT SUPPORT\n3. 技术\n4. 英语\n5. 工作","source":"_posts/回顾过去，展望未来.md","raw":"---\ntitle: 回顾过去，展望未来\ndate: 2023-12-09 13:06:51\ntags: [生活]\ncategory: 日常生活\n---\n\n不知不觉来到日本已经两周了，一周的时间准备，一周的时间上班，在这里遇到了新的朋友，也去了很多地方。可能是来的时间比较短吧，还是有种不真实感。心里比较烦躁，可是具体又是什么原因一时也说不上来。  \n「心が落ち着かない」也可能是「居安思危」吧。毕竟这种人生不能自由掌控的状态真的会让自己不能安心。  \n既然已经放弃国内生活来到日本，必然要整理一下当前的所有情况，再制定下一步的计划。\n\n# 当前的情况分析  \n+ 到目前为止，宿舍是明年2月底到期  \n+ 工作在秋叶原站附近的大楼，项目至少持续一年\n+ 身上积蓄20w日元左右，月底发当月工资，到第二个月底开始找房子，大约能有40w积蓄，租房子是足够了\n+ 工作经验只有1.5年，Java相关，没有任何证书\n+ 日语只有N2，有N2证书，日常交流也挺勉强的\n+ 英语日常交流，只有6级，没有认可度\n+ 工作朝九晚六，双休，很少加班，基本晚上6点下班，那么晚上的时间可以利用\n\n# 未来的计划和安排\n> 根据个人的看法排出的一些事项，如果按照签证的日期来算的话，计划粗略估计要安排未来5年的 2028年\n\n重要度来说：\n1. 日语，提高日语水平 （N1）\n   1. 日常口语需要提高\n   2. 参加当地的日语交流活动提高日语\n   3. N1的证书一定要拿到，在此期间可以复习语法和单词，即使企业不怎么看重，但这也是日语学习的证明\n   4. 按照CERF标准学习到C1是最终目标\n2. 技术方面\n   1. Oracle Java I&II 两个证明 （有效期3年）\n   2. IT support （两周内拿到）\n   3. AWS 证书 \n      1. 一共有12个证书，先从简单的开始\n   4. Oracle MySQL 1Z0-908 （有效期3年）\n   5. Oracle 数据库认证 （优先级往后\n3. 英语，生活中相对重要\n   1. BEC初级\n   2. BEC中级\n   3. 托福 100+ & IELTS 7.5\n   4. 按照CEFR标准到达C1是最终目标\n4. 工作\n   1. 目前的工作，3年时间，积累经验 （2.5年后开始准备）\n   2. 大手外资，英语为主\n   3. 大手日企，日语为主\n   4. 普通外资，普通日企\n   5. 前往德国工作，但是需要时间学习德语\n\n于是，根据以上安排了接下来的任务\n\n| 任务                   | 年    | 月  | 准备  | 备注                        |\n|----------------------|------|----|-----|---------------------------|\n| IT SUPPORT           | 2023 | 12 | 三周  | 学习最基本的知识                  |\n| Oracle Java I        | 2024 | 1  | 两周  | 最初级的证明                    |\n| 找房子                  | 2024 | 2  | 三周  | 在神奈川附近不错                  |\n| 报名JLPT N1            | 2024 | 3  | 一周  | 准备N1                      |\n| 日语CERF               | 2024 | 6  | 三个月 | 目标B2 (即N1)                |\n| 开始攻克AWS              | 2024 | 7  | 三周  | 拿到最基本的证书                  |\n| BEC初级                | 2024 | 8  | 四周  | 一个月时间准备                   |\n| Oracle Java II       | 2024 | 9  | 四周  | 高级证明                      |\n| BEC中级                | 2024 | 11 | 两个月 | 商务英语水平，之后就是维持水平即可         |\n| 工作满一年                | 2024 | 12 | 0   | 正式在日本待满1年                 |\n| Oracle MySQL 1Z0-908 | 2025 | 1  | 两个月 | MySQL的最高级证书               |\n| AWS证书                | 2025 | 3  | 两个月 | 目标是拿到一半的证书                |\n| IELTS                | 2025 | 4  | 一个月 | 有BEC中级的基础，可以尝试雅思          |\n| 开始学习Oracle证书相关       | 2025 | 6  | 两个月 | 目标拿到证书，根据学习情况安排           |\n| 日语CERF               | 2025 | 10 | 四个月 | 这段时间不断提高日语水平，争取达到C1       |\n| 托福                   | 2025 | 12 | 两个月 | 首次尝试托福100+                |\n| 工作满二年                | 2025 | 12 | 0   | 正式在日本待满2年                 |\n| 准备找工作                | 2025 | 3  | 3个月 | 过年后就开始准备，工作两年，可以有20天的带薪休假 |\n| 根据找工作的情况安排下一步计划      | 2025 | 4  | 1个月 | 这段时间看看情况，此时应该正好是2.5年      |\n| 开始学习德语               | 2025 | 12 | 8个月 | 德语到入门的程度即可，此时一定要保证英语是C1   |\n\n\n1. 日语\n2. IT SUPPORT\n3. 技术\n4. 英语\n5. 工作","slug":"回顾过去，展望未来","published":1,"updated":"2023-12-09T06:54:05.062Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clpxpllhw000jakkv1jgu8s1h","content":"<p>不知不觉来到日本已经两周了，一周的时间准备，一周的时间上班，在这里遇到了新的朋友，也去了很多地方。可能是来的时间比较短吧，还是有种不真实感。心里比较烦躁，可是具体又是什么原因一时也说不上来。<br>「心が落ち着かない」也可能是「居安思危」吧。毕竟这种人生不能自由掌控的状态真的会让自己不能安心。<br>既然已经放弃国内生活来到日本，必然要整理一下当前的所有情况，再制定下一步的计划。</p>\n<h1 id=\"当前的情况分析\"><a href=\"#当前的情况分析\" class=\"headerlink\" title=\"当前的情况分析\"></a>当前的情况分析</h1><ul>\n<li>到目前为止，宿舍是明年2月底到期  </li>\n<li>工作在秋叶原站附近的大楼，项目至少持续一年</li>\n<li>身上积蓄20w日元左右，月底发当月工资，到第二个月底开始找房子，大约能有40w积蓄，租房子是足够了</li>\n<li>工作经验只有1.5年，Java相关，没有任何证书</li>\n<li>日语只有N2，有N2证书，日常交流也挺勉强的</li>\n<li>英语日常交流，只有6级，没有认可度</li>\n<li>工作朝九晚六，双休，很少加班，基本晚上6点下班，那么晚上的时间可以利用</li>\n</ul>\n<h1 id=\"未来的计划和安排\"><a href=\"#未来的计划和安排\" class=\"headerlink\" title=\"未来的计划和安排\"></a>未来的计划和安排</h1><blockquote>\n<p>根据个人的看法排出的一些事项，如果按照签证的日期来算的话，计划粗略估计要安排未来5年的 2028年</p>\n</blockquote>\n<p>重要度来说：</p>\n<ol>\n<li>日语，提高日语水平 （N1）<ol>\n<li>日常口语需要提高</li>\n<li>参加当地的日语交流活动提高日语</li>\n<li>N1的证书一定要拿到，在此期间可以复习语法和单词，即使企业不怎么看重，但这也是日语学习的证明</li>\n<li>按照CERF标准学习到C1是最终目标</li>\n</ol>\n</li>\n<li>技术方面<ol>\n<li>Oracle Java I&amp;II 两个证明 （有效期3年）</li>\n<li>IT support （两周内拿到）</li>\n<li>AWS 证书 <ol>\n<li>一共有12个证书，先从简单的开始</li>\n</ol>\n</li>\n<li>Oracle MySQL 1Z0-908 （有效期3年）</li>\n<li>Oracle 数据库认证 （优先级往后</li>\n</ol>\n</li>\n<li>英语，生活中相对重要<ol>\n<li>BEC初级</li>\n<li>BEC中级</li>\n<li>托福 100+ &amp; IELTS 7.5</li>\n<li>按照CEFR标准到达C1是最终目标</li>\n</ol>\n</li>\n<li>工作<ol>\n<li>目前的工作，3年时间，积累经验 （2.5年后开始准备）</li>\n<li>大手外资，英语为主</li>\n<li>大手日企，日语为主</li>\n<li>普通外资，普通日企</li>\n<li>前往德国工作，但是需要时间学习德语</li>\n</ol>\n</li>\n</ol>\n<p>于是，根据以上安排了接下来的任务</p>\n<table>\n<thead>\n<tr>\n<th>任务</th>\n<th>年</th>\n<th>月</th>\n<th>准备</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>IT SUPPORT</td>\n<td>2023</td>\n<td>12</td>\n<td>三周</td>\n<td>学习最基本的知识</td>\n</tr>\n<tr>\n<td>Oracle Java I</td>\n<td>2024</td>\n<td>1</td>\n<td>两周</td>\n<td>最初级的证明</td>\n</tr>\n<tr>\n<td>找房子</td>\n<td>2024</td>\n<td>2</td>\n<td>三周</td>\n<td>在神奈川附近不错</td>\n</tr>\n<tr>\n<td>报名JLPT N1</td>\n<td>2024</td>\n<td>3</td>\n<td>一周</td>\n<td>准备N1</td>\n</tr>\n<tr>\n<td>日语CERF</td>\n<td>2024</td>\n<td>6</td>\n<td>三个月</td>\n<td>目标B2 (即N1)</td>\n</tr>\n<tr>\n<td>开始攻克AWS</td>\n<td>2024</td>\n<td>7</td>\n<td>三周</td>\n<td>拿到最基本的证书</td>\n</tr>\n<tr>\n<td>BEC初级</td>\n<td>2024</td>\n<td>8</td>\n<td>四周</td>\n<td>一个月时间准备</td>\n</tr>\n<tr>\n<td>Oracle Java II</td>\n<td>2024</td>\n<td>9</td>\n<td>四周</td>\n<td>高级证明</td>\n</tr>\n<tr>\n<td>BEC中级</td>\n<td>2024</td>\n<td>11</td>\n<td>两个月</td>\n<td>商务英语水平，之后就是维持水平即可</td>\n</tr>\n<tr>\n<td>工作满一年</td>\n<td>2024</td>\n<td>12</td>\n<td>0</td>\n<td>正式在日本待满1年</td>\n</tr>\n<tr>\n<td>Oracle MySQL 1Z0-908</td>\n<td>2025</td>\n<td>1</td>\n<td>两个月</td>\n<td>MySQL的最高级证书</td>\n</tr>\n<tr>\n<td>AWS证书</td>\n<td>2025</td>\n<td>3</td>\n<td>两个月</td>\n<td>目标是拿到一半的证书</td>\n</tr>\n<tr>\n<td>IELTS</td>\n<td>2025</td>\n<td>4</td>\n<td>一个月</td>\n<td>有BEC中级的基础，可以尝试雅思</td>\n</tr>\n<tr>\n<td>开始学习Oracle证书相关</td>\n<td>2025</td>\n<td>6</td>\n<td>两个月</td>\n<td>目标拿到证书，根据学习情况安排</td>\n</tr>\n<tr>\n<td>日语CERF</td>\n<td>2025</td>\n<td>10</td>\n<td>四个月</td>\n<td>这段时间不断提高日语水平，争取达到C1</td>\n</tr>\n<tr>\n<td>托福</td>\n<td>2025</td>\n<td>12</td>\n<td>两个月</td>\n<td>首次尝试托福100+</td>\n</tr>\n<tr>\n<td>工作满二年</td>\n<td>2025</td>\n<td>12</td>\n<td>0</td>\n<td>正式在日本待满2年</td>\n</tr>\n<tr>\n<td>准备找工作</td>\n<td>2025</td>\n<td>3</td>\n<td>3个月</td>\n<td>过年后就开始准备，工作两年，可以有20天的带薪休假</td>\n</tr>\n<tr>\n<td>根据找工作的情况安排下一步计划</td>\n<td>2025</td>\n<td>4</td>\n<td>1个月</td>\n<td>这段时间看看情况，此时应该正好是2.5年</td>\n</tr>\n<tr>\n<td>开始学习德语</td>\n<td>2025</td>\n<td>12</td>\n<td>8个月</td>\n<td>德语到入门的程度即可，此时一定要保证英语是C1</td>\n</tr>\n</tbody></table>\n<ol>\n<li>日语</li>\n<li>IT SUPPORT</li>\n<li>技术</li>\n<li>英语</li>\n<li>工作</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>不知不觉来到日本已经两周了，一周的时间准备，一周的时间上班，在这里遇到了新的朋友，也去了很多地方。可能是来的时间比较短吧，还是有种不真实感。心里比较烦躁，可是具体又是什么原因一时也说不上来。<br>「心が落ち着かない」也可能是「居安思危」吧。毕竟这种人生不能自由掌控的状态真的会让自己不能安心。<br>既然已经放弃国内生活来到日本，必然要整理一下当前的所有情况，再制定下一步的计划。</p>\n<h1 id=\"当前的情况分析\"><a href=\"#当前的情况分析\" class=\"headerlink\" title=\"当前的情况分析\"></a>当前的情况分析</h1><ul>\n<li>到目前为止，宿舍是明年2月底到期  </li>\n<li>工作在秋叶原站附近的大楼，项目至少持续一年</li>\n<li>身上积蓄20w日元左右，月底发当月工资，到第二个月底开始找房子，大约能有40w积蓄，租房子是足够了</li>\n<li>工作经验只有1.5年，Java相关，没有任何证书</li>\n<li>日语只有N2，有N2证书，日常交流也挺勉强的</li>\n<li>英语日常交流，只有6级，没有认可度</li>\n<li>工作朝九晚六，双休，很少加班，基本晚上6点下班，那么晚上的时间可以利用</li>\n</ul>\n<h1 id=\"未来的计划和安排\"><a href=\"#未来的计划和安排\" class=\"headerlink\" title=\"未来的计划和安排\"></a>未来的计划和安排</h1><blockquote>\n<p>根据个人的看法排出的一些事项，如果按照签证的日期来算的话，计划粗略估计要安排未来5年的 2028年</p>\n</blockquote>\n<p>重要度来说：</p>\n<ol>\n<li>日语，提高日语水平 （N1）<ol>\n<li>日常口语需要提高</li>\n<li>参加当地的日语交流活动提高日语</li>\n<li>N1的证书一定要拿到，在此期间可以复习语法和单词，即使企业不怎么看重，但这也是日语学习的证明</li>\n<li>按照CERF标准学习到C1是最终目标</li>\n</ol>\n</li>\n<li>技术方面<ol>\n<li>Oracle Java I&amp;II 两个证明 （有效期3年）</li>\n<li>IT support （两周内拿到）</li>\n<li>AWS 证书 <ol>\n<li>一共有12个证书，先从简单的开始</li>\n</ol>\n</li>\n<li>Oracle MySQL 1Z0-908 （有效期3年）</li>\n<li>Oracle 数据库认证 （优先级往后</li>\n</ol>\n</li>\n<li>英语，生活中相对重要<ol>\n<li>BEC初级</li>\n<li>BEC中级</li>\n<li>托福 100+ &amp; IELTS 7.5</li>\n<li>按照CEFR标准到达C1是最终目标</li>\n</ol>\n</li>\n<li>工作<ol>\n<li>目前的工作，3年时间，积累经验 （2.5年后开始准备）</li>\n<li>大手外资，英语为主</li>\n<li>大手日企，日语为主</li>\n<li>普通外资，普通日企</li>\n<li>前往德国工作，但是需要时间学习德语</li>\n</ol>\n</li>\n</ol>\n<p>于是，根据以上安排了接下来的任务</p>\n<table>\n<thead>\n<tr>\n<th>任务</th>\n<th>年</th>\n<th>月</th>\n<th>准备</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>IT SUPPORT</td>\n<td>2023</td>\n<td>12</td>\n<td>三周</td>\n<td>学习最基本的知识</td>\n</tr>\n<tr>\n<td>Oracle Java I</td>\n<td>2024</td>\n<td>1</td>\n<td>两周</td>\n<td>最初级的证明</td>\n</tr>\n<tr>\n<td>找房子</td>\n<td>2024</td>\n<td>2</td>\n<td>三周</td>\n<td>在神奈川附近不错</td>\n</tr>\n<tr>\n<td>报名JLPT N1</td>\n<td>2024</td>\n<td>3</td>\n<td>一周</td>\n<td>准备N1</td>\n</tr>\n<tr>\n<td>日语CERF</td>\n<td>2024</td>\n<td>6</td>\n<td>三个月</td>\n<td>目标B2 (即N1)</td>\n</tr>\n<tr>\n<td>开始攻克AWS</td>\n<td>2024</td>\n<td>7</td>\n<td>三周</td>\n<td>拿到最基本的证书</td>\n</tr>\n<tr>\n<td>BEC初级</td>\n<td>2024</td>\n<td>8</td>\n<td>四周</td>\n<td>一个月时间准备</td>\n</tr>\n<tr>\n<td>Oracle Java II</td>\n<td>2024</td>\n<td>9</td>\n<td>四周</td>\n<td>高级证明</td>\n</tr>\n<tr>\n<td>BEC中级</td>\n<td>2024</td>\n<td>11</td>\n<td>两个月</td>\n<td>商务英语水平，之后就是维持水平即可</td>\n</tr>\n<tr>\n<td>工作满一年</td>\n<td>2024</td>\n<td>12</td>\n<td>0</td>\n<td>正式在日本待满1年</td>\n</tr>\n<tr>\n<td>Oracle MySQL 1Z0-908</td>\n<td>2025</td>\n<td>1</td>\n<td>两个月</td>\n<td>MySQL的最高级证书</td>\n</tr>\n<tr>\n<td>AWS证书</td>\n<td>2025</td>\n<td>3</td>\n<td>两个月</td>\n<td>目标是拿到一半的证书</td>\n</tr>\n<tr>\n<td>IELTS</td>\n<td>2025</td>\n<td>4</td>\n<td>一个月</td>\n<td>有BEC中级的基础，可以尝试雅思</td>\n</tr>\n<tr>\n<td>开始学习Oracle证书相关</td>\n<td>2025</td>\n<td>6</td>\n<td>两个月</td>\n<td>目标拿到证书，根据学习情况安排</td>\n</tr>\n<tr>\n<td>日语CERF</td>\n<td>2025</td>\n<td>10</td>\n<td>四个月</td>\n<td>这段时间不断提高日语水平，争取达到C1</td>\n</tr>\n<tr>\n<td>托福</td>\n<td>2025</td>\n<td>12</td>\n<td>两个月</td>\n<td>首次尝试托福100+</td>\n</tr>\n<tr>\n<td>工作满二年</td>\n<td>2025</td>\n<td>12</td>\n<td>0</td>\n<td>正式在日本待满2年</td>\n</tr>\n<tr>\n<td>准备找工作</td>\n<td>2025</td>\n<td>3</td>\n<td>3个月</td>\n<td>过年后就开始准备，工作两年，可以有20天的带薪休假</td>\n</tr>\n<tr>\n<td>根据找工作的情况安排下一步计划</td>\n<td>2025</td>\n<td>4</td>\n<td>1个月</td>\n<td>这段时间看看情况，此时应该正好是2.5年</td>\n</tr>\n<tr>\n<td>开始学习德语</td>\n<td>2025</td>\n<td>12</td>\n<td>8个月</td>\n<td>德语到入门的程度即可，此时一定要保证英语是C1</td>\n</tr>\n</tbody></table>\n<ol>\n<li>日语</li>\n<li>IT SUPPORT</li>\n<li>技术</li>\n<li>英语</li>\n<li>工作</li>\n</ol>\n"},{"title":"日语学习记录(持续更新)","date":"2023-09-02T14:20:55.000Z","top":2,"_content":"\n>风乍起，合当奋意向人生\n\n<a href=\"https://imgur.com/tANbyQ2\"><img src=\"https://i.imgur.com/tANbyQ2.gif\" title=\"source: imgur.com\" /></a>\n\n<!-- TOC -->\n* [2023年12月](#2023年12月)\n* [2023年11月](#2023年11月)\n* [2023年10月](#2023年10月)\n* [2023年9月](#2023年9月)\n<!-- TOC -->\n\nN1考试时间: `2023年12月2日`  EXPIRED\n\n最后更新: `2023年12月9日`\n\n# 2023年12月\n\n| DAY | EVENT  | REMARK                                |\n|-----|--------|---------------------------------------|\n| 1日  | 到公司研修  | 给了一大堆材料，和一本书差不多厚，一起来的还有6人，4名中国人，2名日本人 |\n| 4日  | 第二天研修  | 1号是周五，参加了晚上的公司年会就放假了，今天差不多就把入职的流程都走完了 |\n| 5日  | 分配项目组  | 从今天起正式开始参与工作了                         |\n| 8日  | 着手开发环境 | 在座位上待了3天终于拿到电脑开始着手工作了                 |\n| 9日  | 拾起日语教材 | NONE                                  |\n\n\n# 2023年11月\n\n> 这个月主要的工作就是交接，离职手续以及等待签证\n\n| DAY | EVENT                   | REMARK                                                    |\n|-----|-------------------------|-----------------------------------------------------------|\n| 9日  | 下午去了签证代办处               | 准备办理签证了                                                   |\n| 10日 | 上午去海边散步<br/>下午收到大使馆电话调查 | 也许从此刻起，心态已经开始改变了吧                                         |\n| 12日 | 发工资                     | 意料之中，毕竟请了很多天假呢                                            |\n| 15日 | 正式完成工作交接，离开原公司          | 想说的话很多                                                    |\n| 16日 | 获得签证                    | 很奇妙的感觉，中午睡觉被广告电话吵醒，心情烦躁刚挂断又来了个电话，告知我签证到了                  |\n| 17日 | 前往济南                    | 想在离开前见一下朋友                                                |\n| 20日 | 到达武汉                    | 机场中转，倒是遇到了廉价酒店骗局，从村子里一下车就决定立马回去                           |\n| 21日 | 到达杭州                    | 去看望在浙大读研的朋友，顺便在杭州逛逛                                       |\n| 26日 | 到达上海                    | 打算在机场过一晚上                                                 |\n| 27日 | 飞机延误三小时，到达成田机场，晚上到达宿舍   | 靠窗的座位，第一次看到茫茫大海，交流后得知旁边的女孩是到日本考N1的，也是独自来日本，最后在机场告别，各自奔赴前程 |\n| 28日 | 今天去了区役所登记住所             | 第一次日语实战，磕磕巴巴，听得也云里雾里，体会到了日语不行的痛苦                          |\n| 29日 | 去了秋叶原电器街，又去了ario北砂      | 自己一个人办了电话卡，好在店员小哥能听懂我说的日语                                 |\n| 30日 | 入职的准备                   | 今天一天只是去周围转了转，熟悉了环境                                        |\n\n# 2023年10月\n\n| DAY | EVENT                       | REMARK                                                           |\n|-----|-----------------------------|------------------------------------------------------------------|\n| 12日 | 今天开始请两天假，认真准备第一场日语面试        | 今天投递简历后，收到了第一份面试邀约，同时还参加了 fast offer的项目，最后拿到了两家公司的面试机会。          |\n| 16日 | 上午面试，下午拿到OFFER<br/>开始准备赴日材料 | 上午参加公司面试，感觉不错，然后下午的时候就收到了offer，地点东京秋叶原区。约定12月1日入社。提前一周赴日暂时住公司宿舍。 |\n| 17日 | 上午办护照<br/>返校去取了N2证书         | NONE                                                             |\n| 18日 | 审批中                         | 效率很快，护照审批下午就下来了，预计这周五会送到,之后就是申请在留和签证了                            |\n\n\n\n# 2023年9月\n\n| DAY | EVENT                         | REMARK                           |\n|-----|-------------------------------|----------------------------------|\n| 2日  | 1. N1语法 5/20 <br/> 2. 单词 310  | N1语法主要从《蓝宝书》中学习                  |\n| 3日  | 1. N1语法 6/20 <br/> 2. 单词 360  | NONE                             |\n| 4日  | 1. N1语法 7/20 <br/> 2. 单词 410  | 6号之前学完语法的目标失败，延长两周时间             |\n| 5日  | 1. N1语法 8/20 <br/> 2. 单词 460  | NONE                             |\n| 8日  | 1. N1语法 12/20 <br/> 2. 单词 610 | 可能是之前学习N2的时候，，教材超纲了，提前学习了很多N1的语法 |\n| 13日 | 1. N1语法 20/20 <br/> 2. 单词 840 | 这几天一口气学完所有语法，接下来就是背熟语法，复习N2语法    |\n| 15日 | 1. 复习语法 <br/> 2. 单词 940       | NONE                             |\n\n\n","source":"_posts/日语学习记录-持续更新.md","raw":"---\ntitle: 日语学习记录(持续更新)\ndate: 2023-09-02 22:20:55\ncategories:\n  - 日常生活\ntop: 2\ntags: [生活, 日语]\n---\n\n>风乍起，合当奋意向人生\n\n<a href=\"https://imgur.com/tANbyQ2\"><img src=\"https://i.imgur.com/tANbyQ2.gif\" title=\"source: imgur.com\" /></a>\n\n<!-- TOC -->\n* [2023年12月](#2023年12月)\n* [2023年11月](#2023年11月)\n* [2023年10月](#2023年10月)\n* [2023年9月](#2023年9月)\n<!-- TOC -->\n\nN1考试时间: `2023年12月2日`  EXPIRED\n\n最后更新: `2023年12月9日`\n\n# 2023年12月\n\n| DAY | EVENT  | REMARK                                |\n|-----|--------|---------------------------------------|\n| 1日  | 到公司研修  | 给了一大堆材料，和一本书差不多厚，一起来的还有6人，4名中国人，2名日本人 |\n| 4日  | 第二天研修  | 1号是周五，参加了晚上的公司年会就放假了，今天差不多就把入职的流程都走完了 |\n| 5日  | 分配项目组  | 从今天起正式开始参与工作了                         |\n| 8日  | 着手开发环境 | 在座位上待了3天终于拿到电脑开始着手工作了                 |\n| 9日  | 拾起日语教材 | NONE                                  |\n\n\n# 2023年11月\n\n> 这个月主要的工作就是交接，离职手续以及等待签证\n\n| DAY | EVENT                   | REMARK                                                    |\n|-----|-------------------------|-----------------------------------------------------------|\n| 9日  | 下午去了签证代办处               | 准备办理签证了                                                   |\n| 10日 | 上午去海边散步<br/>下午收到大使馆电话调查 | 也许从此刻起，心态已经开始改变了吧                                         |\n| 12日 | 发工资                     | 意料之中，毕竟请了很多天假呢                                            |\n| 15日 | 正式完成工作交接，离开原公司          | 想说的话很多                                                    |\n| 16日 | 获得签证                    | 很奇妙的感觉，中午睡觉被广告电话吵醒，心情烦躁刚挂断又来了个电话，告知我签证到了                  |\n| 17日 | 前往济南                    | 想在离开前见一下朋友                                                |\n| 20日 | 到达武汉                    | 机场中转，倒是遇到了廉价酒店骗局，从村子里一下车就决定立马回去                           |\n| 21日 | 到达杭州                    | 去看望在浙大读研的朋友，顺便在杭州逛逛                                       |\n| 26日 | 到达上海                    | 打算在机场过一晚上                                                 |\n| 27日 | 飞机延误三小时，到达成田机场，晚上到达宿舍   | 靠窗的座位，第一次看到茫茫大海，交流后得知旁边的女孩是到日本考N1的，也是独自来日本，最后在机场告别，各自奔赴前程 |\n| 28日 | 今天去了区役所登记住所             | 第一次日语实战，磕磕巴巴，听得也云里雾里，体会到了日语不行的痛苦                          |\n| 29日 | 去了秋叶原电器街，又去了ario北砂      | 自己一个人办了电话卡，好在店员小哥能听懂我说的日语                                 |\n| 30日 | 入职的准备                   | 今天一天只是去周围转了转，熟悉了环境                                        |\n\n# 2023年10月\n\n| DAY | EVENT                       | REMARK                                                           |\n|-----|-----------------------------|------------------------------------------------------------------|\n| 12日 | 今天开始请两天假，认真准备第一场日语面试        | 今天投递简历后，收到了第一份面试邀约，同时还参加了 fast offer的项目，最后拿到了两家公司的面试机会。          |\n| 16日 | 上午面试，下午拿到OFFER<br/>开始准备赴日材料 | 上午参加公司面试，感觉不错，然后下午的时候就收到了offer，地点东京秋叶原区。约定12月1日入社。提前一周赴日暂时住公司宿舍。 |\n| 17日 | 上午办护照<br/>返校去取了N2证书         | NONE                                                             |\n| 18日 | 审批中                         | 效率很快，护照审批下午就下来了，预计这周五会送到,之后就是申请在留和签证了                            |\n\n\n\n# 2023年9月\n\n| DAY | EVENT                         | REMARK                           |\n|-----|-------------------------------|----------------------------------|\n| 2日  | 1. N1语法 5/20 <br/> 2. 单词 310  | N1语法主要从《蓝宝书》中学习                  |\n| 3日  | 1. N1语法 6/20 <br/> 2. 单词 360  | NONE                             |\n| 4日  | 1. N1语法 7/20 <br/> 2. 单词 410  | 6号之前学完语法的目标失败，延长两周时间             |\n| 5日  | 1. N1语法 8/20 <br/> 2. 单词 460  | NONE                             |\n| 8日  | 1. N1语法 12/20 <br/> 2. 单词 610 | 可能是之前学习N2的时候，，教材超纲了，提前学习了很多N1的语法 |\n| 13日 | 1. N1语法 20/20 <br/> 2. 单词 840 | 这几天一口气学完所有语法，接下来就是背熟语法，复习N2语法    |\n| 15日 | 1. 复习语法 <br/> 2. 单词 940       | NONE                             |\n\n\n","slug":"日语学习记录-持续更新","published":1,"updated":"2023-12-09T05:20:50.782Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clpxpllhx000oakkva1hda1fc","content":"<blockquote>\n<p>风乍起，合当奋意向人生</p>\n</blockquote>\n<p><a href=\"https://imgur.com/tANbyQ2\"><img src=\"https://i.imgur.com/tANbyQ2.gif\" title=\"source: imgur.com\" /></a></p>\n<!-- TOC -->\n<ul>\n<li><a href=\"#2023%E5%B9%B412%E6%9C%88\">2023年12月</a></li>\n<li><a href=\"#2023%E5%B9%B411%E6%9C%88\">2023年11月</a></li>\n<li><a href=\"#2023%E5%B9%B410%E6%9C%88\">2023年10月</a></li>\n<li><a href=\"#2023%E5%B9%B49%E6%9C%88\">2023年9月</a><!-- TOC --></li>\n</ul>\n<p>N1考试时间: <code>2023年12月2日</code>  EXPIRED</p>\n<p>最后更新: <code>2023年12月9日</code></p>\n<h1 id=\"2023年12月\"><a href=\"#2023年12月\" class=\"headerlink\" title=\"2023年12月\"></a>2023年12月</h1><table>\n<thead>\n<tr>\n<th>DAY</th>\n<th>EVENT</th>\n<th>REMARK</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1日</td>\n<td>到公司研修</td>\n<td>给了一大堆材料，和一本书差不多厚，一起来的还有6人，4名中国人，2名日本人</td>\n</tr>\n<tr>\n<td>4日</td>\n<td>第二天研修</td>\n<td>1号是周五，参加了晚上的公司年会就放假了，今天差不多就把入职的流程都走完了</td>\n</tr>\n<tr>\n<td>5日</td>\n<td>分配项目组</td>\n<td>从今天起正式开始参与工作了</td>\n</tr>\n<tr>\n<td>8日</td>\n<td>着手开发环境</td>\n<td>在座位上待了3天终于拿到电脑开始着手工作了</td>\n</tr>\n<tr>\n<td>9日</td>\n<td>拾起日语教材</td>\n<td>NONE</td>\n</tr>\n</tbody></table>\n<h1 id=\"2023年11月\"><a href=\"#2023年11月\" class=\"headerlink\" title=\"2023年11月\"></a>2023年11月</h1><blockquote>\n<p>这个月主要的工作就是交接，离职手续以及等待签证</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>DAY</th>\n<th>EVENT</th>\n<th>REMARK</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>9日</td>\n<td>下午去了签证代办处</td>\n<td>准备办理签证了</td>\n</tr>\n<tr>\n<td>10日</td>\n<td>上午去海边散步<br/>下午收到大使馆电话调查</td>\n<td>也许从此刻起，心态已经开始改变了吧</td>\n</tr>\n<tr>\n<td>12日</td>\n<td>发工资</td>\n<td>意料之中，毕竟请了很多天假呢</td>\n</tr>\n<tr>\n<td>15日</td>\n<td>正式完成工作交接，离开原公司</td>\n<td>想说的话很多</td>\n</tr>\n<tr>\n<td>16日</td>\n<td>获得签证</td>\n<td>很奇妙的感觉，中午睡觉被广告电话吵醒，心情烦躁刚挂断又来了个电话，告知我签证到了</td>\n</tr>\n<tr>\n<td>17日</td>\n<td>前往济南</td>\n<td>想在离开前见一下朋友</td>\n</tr>\n<tr>\n<td>20日</td>\n<td>到达武汉</td>\n<td>机场中转，倒是遇到了廉价酒店骗局，从村子里一下车就决定立马回去</td>\n</tr>\n<tr>\n<td>21日</td>\n<td>到达杭州</td>\n<td>去看望在浙大读研的朋友，顺便在杭州逛逛</td>\n</tr>\n<tr>\n<td>26日</td>\n<td>到达上海</td>\n<td>打算在机场过一晚上</td>\n</tr>\n<tr>\n<td>27日</td>\n<td>飞机延误三小时，到达成田机场，晚上到达宿舍</td>\n<td>靠窗的座位，第一次看到茫茫大海，交流后得知旁边的女孩是到日本考N1的，也是独自来日本，最后在机场告别，各自奔赴前程</td>\n</tr>\n<tr>\n<td>28日</td>\n<td>今天去了区役所登记住所</td>\n<td>第一次日语实战，磕磕巴巴，听得也云里雾里，体会到了日语不行的痛苦</td>\n</tr>\n<tr>\n<td>29日</td>\n<td>去了秋叶原电器街，又去了ario北砂</td>\n<td>自己一个人办了电话卡，好在店员小哥能听懂我说的日语</td>\n</tr>\n<tr>\n<td>30日</td>\n<td>入职的准备</td>\n<td>今天一天只是去周围转了转，熟悉了环境</td>\n</tr>\n</tbody></table>\n<h1 id=\"2023年10月\"><a href=\"#2023年10月\" class=\"headerlink\" title=\"2023年10月\"></a>2023年10月</h1><table>\n<thead>\n<tr>\n<th>DAY</th>\n<th>EVENT</th>\n<th>REMARK</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>12日</td>\n<td>今天开始请两天假，认真准备第一场日语面试</td>\n<td>今天投递简历后，收到了第一份面试邀约，同时还参加了 fast offer的项目，最后拿到了两家公司的面试机会。</td>\n</tr>\n<tr>\n<td>16日</td>\n<td>上午面试，下午拿到OFFER<br/>开始准备赴日材料</td>\n<td>上午参加公司面试，感觉不错，然后下午的时候就收到了offer，地点东京秋叶原区。约定12月1日入社。提前一周赴日暂时住公司宿舍。</td>\n</tr>\n<tr>\n<td>17日</td>\n<td>上午办护照<br/>返校去取了N2证书</td>\n<td>NONE</td>\n</tr>\n<tr>\n<td>18日</td>\n<td>审批中</td>\n<td>效率很快，护照审批下午就下来了，预计这周五会送到,之后就是申请在留和签证了</td>\n</tr>\n</tbody></table>\n<h1 id=\"2023年9月\"><a href=\"#2023年9月\" class=\"headerlink\" title=\"2023年9月\"></a>2023年9月</h1><table>\n<thead>\n<tr>\n<th>DAY</th>\n<th>EVENT</th>\n<th>REMARK</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>2日</td>\n<td>1. N1语法 5&#x2F;20 <br/> 2. 单词 310</td>\n<td>N1语法主要从《蓝宝书》中学习</td>\n</tr>\n<tr>\n<td>3日</td>\n<td>1. N1语法 6&#x2F;20 <br/> 2. 单词 360</td>\n<td>NONE</td>\n</tr>\n<tr>\n<td>4日</td>\n<td>1. N1语法 7&#x2F;20 <br/> 2. 单词 410</td>\n<td>6号之前学完语法的目标失败，延长两周时间</td>\n</tr>\n<tr>\n<td>5日</td>\n<td>1. N1语法 8&#x2F;20 <br/> 2. 单词 460</td>\n<td>NONE</td>\n</tr>\n<tr>\n<td>8日</td>\n<td>1. N1语法 12&#x2F;20 <br/> 2. 单词 610</td>\n<td>可能是之前学习N2的时候，，教材超纲了，提前学习了很多N1的语法</td>\n</tr>\n<tr>\n<td>13日</td>\n<td>1. N1语法 20&#x2F;20 <br/> 2. 单词 840</td>\n<td>这几天一口气学完所有语法，接下来就是背熟语法，复习N2语法</td>\n</tr>\n<tr>\n<td>15日</td>\n<td>1. 复习语法 <br/> 2. 单词 940</td>\n<td>NONE</td>\n</tr>\n</tbody></table>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>风乍起，合当奋意向人生</p>\n</blockquote>\n<p><a href=\"https://imgur.com/tANbyQ2\"><img src=\"https://i.imgur.com/tANbyQ2.gif\" title=\"source: imgur.com\" /></a></p>\n<!-- TOC -->\n<ul>\n<li><a href=\"#2023%E5%B9%B412%E6%9C%88\">2023年12月</a></li>\n<li><a href=\"#2023%E5%B9%B411%E6%9C%88\">2023年11月</a></li>\n<li><a href=\"#2023%E5%B9%B410%E6%9C%88\">2023年10月</a></li>\n<li><a href=\"#2023%E5%B9%B49%E6%9C%88\">2023年9月</a><!-- TOC --></li>\n</ul>\n<p>N1考试时间: <code>2023年12月2日</code>  EXPIRED</p>\n<p>最后更新: <code>2023年12月9日</code></p>\n<h1 id=\"2023年12月\"><a href=\"#2023年12月\" class=\"headerlink\" title=\"2023年12月\"></a>2023年12月</h1><table>\n<thead>\n<tr>\n<th>DAY</th>\n<th>EVENT</th>\n<th>REMARK</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1日</td>\n<td>到公司研修</td>\n<td>给了一大堆材料，和一本书差不多厚，一起来的还有6人，4名中国人，2名日本人</td>\n</tr>\n<tr>\n<td>4日</td>\n<td>第二天研修</td>\n<td>1号是周五，参加了晚上的公司年会就放假了，今天差不多就把入职的流程都走完了</td>\n</tr>\n<tr>\n<td>5日</td>\n<td>分配项目组</td>\n<td>从今天起正式开始参与工作了</td>\n</tr>\n<tr>\n<td>8日</td>\n<td>着手开发环境</td>\n<td>在座位上待了3天终于拿到电脑开始着手工作了</td>\n</tr>\n<tr>\n<td>9日</td>\n<td>拾起日语教材</td>\n<td>NONE</td>\n</tr>\n</tbody></table>\n<h1 id=\"2023年11月\"><a href=\"#2023年11月\" class=\"headerlink\" title=\"2023年11月\"></a>2023年11月</h1><blockquote>\n<p>这个月主要的工作就是交接，离职手续以及等待签证</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>DAY</th>\n<th>EVENT</th>\n<th>REMARK</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>9日</td>\n<td>下午去了签证代办处</td>\n<td>准备办理签证了</td>\n</tr>\n<tr>\n<td>10日</td>\n<td>上午去海边散步<br/>下午收到大使馆电话调查</td>\n<td>也许从此刻起，心态已经开始改变了吧</td>\n</tr>\n<tr>\n<td>12日</td>\n<td>发工资</td>\n<td>意料之中，毕竟请了很多天假呢</td>\n</tr>\n<tr>\n<td>15日</td>\n<td>正式完成工作交接，离开原公司</td>\n<td>想说的话很多</td>\n</tr>\n<tr>\n<td>16日</td>\n<td>获得签证</td>\n<td>很奇妙的感觉，中午睡觉被广告电话吵醒，心情烦躁刚挂断又来了个电话，告知我签证到了</td>\n</tr>\n<tr>\n<td>17日</td>\n<td>前往济南</td>\n<td>想在离开前见一下朋友</td>\n</tr>\n<tr>\n<td>20日</td>\n<td>到达武汉</td>\n<td>机场中转，倒是遇到了廉价酒店骗局，从村子里一下车就决定立马回去</td>\n</tr>\n<tr>\n<td>21日</td>\n<td>到达杭州</td>\n<td>去看望在浙大读研的朋友，顺便在杭州逛逛</td>\n</tr>\n<tr>\n<td>26日</td>\n<td>到达上海</td>\n<td>打算在机场过一晚上</td>\n</tr>\n<tr>\n<td>27日</td>\n<td>飞机延误三小时，到达成田机场，晚上到达宿舍</td>\n<td>靠窗的座位，第一次看到茫茫大海，交流后得知旁边的女孩是到日本考N1的，也是独自来日本，最后在机场告别，各自奔赴前程</td>\n</tr>\n<tr>\n<td>28日</td>\n<td>今天去了区役所登记住所</td>\n<td>第一次日语实战，磕磕巴巴，听得也云里雾里，体会到了日语不行的痛苦</td>\n</tr>\n<tr>\n<td>29日</td>\n<td>去了秋叶原电器街，又去了ario北砂</td>\n<td>自己一个人办了电话卡，好在店员小哥能听懂我说的日语</td>\n</tr>\n<tr>\n<td>30日</td>\n<td>入职的准备</td>\n<td>今天一天只是去周围转了转，熟悉了环境</td>\n</tr>\n</tbody></table>\n<h1 id=\"2023年10月\"><a href=\"#2023年10月\" class=\"headerlink\" title=\"2023年10月\"></a>2023年10月</h1><table>\n<thead>\n<tr>\n<th>DAY</th>\n<th>EVENT</th>\n<th>REMARK</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>12日</td>\n<td>今天开始请两天假，认真准备第一场日语面试</td>\n<td>今天投递简历后，收到了第一份面试邀约，同时还参加了 fast offer的项目，最后拿到了两家公司的面试机会。</td>\n</tr>\n<tr>\n<td>16日</td>\n<td>上午面试，下午拿到OFFER<br/>开始准备赴日材料</td>\n<td>上午参加公司面试，感觉不错，然后下午的时候就收到了offer，地点东京秋叶原区。约定12月1日入社。提前一周赴日暂时住公司宿舍。</td>\n</tr>\n<tr>\n<td>17日</td>\n<td>上午办护照<br/>返校去取了N2证书</td>\n<td>NONE</td>\n</tr>\n<tr>\n<td>18日</td>\n<td>审批中</td>\n<td>效率很快，护照审批下午就下来了，预计这周五会送到,之后就是申请在留和签证了</td>\n</tr>\n</tbody></table>\n<h1 id=\"2023年9月\"><a href=\"#2023年9月\" class=\"headerlink\" title=\"2023年9月\"></a>2023年9月</h1><table>\n<thead>\n<tr>\n<th>DAY</th>\n<th>EVENT</th>\n<th>REMARK</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>2日</td>\n<td>1. N1语法 5&#x2F;20 <br/> 2. 单词 310</td>\n<td>N1语法主要从《蓝宝书》中学习</td>\n</tr>\n<tr>\n<td>3日</td>\n<td>1. N1语法 6&#x2F;20 <br/> 2. 单词 360</td>\n<td>NONE</td>\n</tr>\n<tr>\n<td>4日</td>\n<td>1. N1语法 7&#x2F;20 <br/> 2. 单词 410</td>\n<td>6号之前学完语法的目标失败，延长两周时间</td>\n</tr>\n<tr>\n<td>5日</td>\n<td>1. N1语法 8&#x2F;20 <br/> 2. 单词 460</td>\n<td>NONE</td>\n</tr>\n<tr>\n<td>8日</td>\n<td>1. N1语法 12&#x2F;20 <br/> 2. 单词 610</td>\n<td>可能是之前学习N2的时候，，教材超纲了，提前学习了很多N1的语法</td>\n</tr>\n<tr>\n<td>13日</td>\n<td>1. N1语法 20&#x2F;20 <br/> 2. 单词 840</td>\n<td>这几天一口气学完所有语法，接下来就是背熟语法，复习N2语法</td>\n</tr>\n<tr>\n<td>15日</td>\n<td>1. 复习语法 <br/> 2. 单词 940</td>\n<td>NONE</td>\n</tr>\n</tbody></table>\n"},{"title":"详解从jenkins到docker的迁移过程","date":"2023-09-08T14:06:43.000Z","_content":"\n<mark>建设中</mark>\n\n关键词： Jenkins, Docker, kaniko, 持续集成，容器化， maven\n\n到现在为止，项目已经在docker上运行了至少一个月了，目前来看，除了资源占用大，响应慢，启动慢，查问题麻烦等等，唯一的好处就是发版变得更加容易了。  \n早就听说最原始的版本，就是在本地打包，然后发布到远程服务器上，这种情况下需要手动处理冲突，如果缺少jar包，还少手动去修复。  \n之后，在我入职的时候已经是下一阶段了——Jenkins服务器部署，和之前相比，这种部署方式不需要考虑上传，启动等，但是还是需要在发布完之后登录每台服务器检测是否正常启动  \n直到现在的容器化，这些问题基本上得到解决：打包的同时会处理依赖冲突，无感知切换，skywalking,收集日志到ES中进行处理。真正做到了一键部署，虽然现在稳定性不是很好，在部署扩展方面已经比以前好很多了。\n\n首先从项目的架构开始说起，与其说是微服务，实际上的感觉就像`分布式单体`,  其实关于这个，还是有些争议的。我一开始也认为\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/详解从jenkins到docker的迁移过程.md","raw":"---\ntitle: 详解从jenkins到docker的迁移过程\ndate: 2023-09-08 22:06:43\ncategories:\n  - 开发相关\n  - 容器化\ntags: [Java Spring, Docker]\n---\n\n<mark>建设中</mark>\n\n关键词： Jenkins, Docker, kaniko, 持续集成，容器化， maven\n\n到现在为止，项目已经在docker上运行了至少一个月了，目前来看，除了资源占用大，响应慢，启动慢，查问题麻烦等等，唯一的好处就是发版变得更加容易了。  \n早就听说最原始的版本，就是在本地打包，然后发布到远程服务器上，这种情况下需要手动处理冲突，如果缺少jar包，还少手动去修复。  \n之后，在我入职的时候已经是下一阶段了——Jenkins服务器部署，和之前相比，这种部署方式不需要考虑上传，启动等，但是还是需要在发布完之后登录每台服务器检测是否正常启动  \n直到现在的容器化，这些问题基本上得到解决：打包的同时会处理依赖冲突，无感知切换，skywalking,收集日志到ES中进行处理。真正做到了一键部署，虽然现在稳定性不是很好，在部署扩展方面已经比以前好很多了。\n\n首先从项目的架构开始说起，与其说是微服务，实际上的感觉就像`分布式单体`,  其实关于这个，还是有些争议的。我一开始也认为\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"详解从jenkins到docker的迁移过程","published":1,"updated":"2023-12-09T03:59:40.115Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clpxpllhx000qakkve0gl8es6","content":"<p><mark>建设中</mark></p>\n<p>关键词： Jenkins, Docker, kaniko, 持续集成，容器化， maven</p>\n<p>到现在为止，项目已经在docker上运行了至少一个月了，目前来看，除了资源占用大，响应慢，启动慢，查问题麻烦等等，唯一的好处就是发版变得更加容易了。<br>早就听说最原始的版本，就是在本地打包，然后发布到远程服务器上，这种情况下需要手动处理冲突，如果缺少jar包，还少手动去修复。<br>之后，在我入职的时候已经是下一阶段了——Jenkins服务器部署，和之前相比，这种部署方式不需要考虑上传，启动等，但是还是需要在发布完之后登录每台服务器检测是否正常启动<br>直到现在的容器化，这些问题基本上得到解决：打包的同时会处理依赖冲突，无感知切换，skywalking,收集日志到ES中进行处理。真正做到了一键部署，虽然现在稳定性不是很好，在部署扩展方面已经比以前好很多了。</p>\n<p>首先从项目的架构开始说起，与其说是微服务，实际上的感觉就像<code>分布式单体</code>,  其实关于这个，还是有些争议的。我一开始也认为</p>\n","site":{"data":{}},"excerpt":"","more":"<p><mark>建设中</mark></p>\n<p>关键词： Jenkins, Docker, kaniko, 持续集成，容器化， maven</p>\n<p>到现在为止，项目已经在docker上运行了至少一个月了，目前来看，除了资源占用大，响应慢，启动慢，查问题麻烦等等，唯一的好处就是发版变得更加容易了。<br>早就听说最原始的版本，就是在本地打包，然后发布到远程服务器上，这种情况下需要手动处理冲突，如果缺少jar包，还少手动去修复。<br>之后，在我入职的时候已经是下一阶段了——Jenkins服务器部署，和之前相比，这种部署方式不需要考虑上传，启动等，但是还是需要在发布完之后登录每台服务器检测是否正常启动<br>直到现在的容器化，这些问题基本上得到解决：打包的同时会处理依赖冲突，无感知切换，skywalking,收集日志到ES中进行处理。真正做到了一键部署，虽然现在稳定性不是很好，在部署扩展方面已经比以前好很多了。</p>\n<p>首先从项目的架构开始说起，与其说是微服务，实际上的感觉就像<code>分布式单体</code>,  其实关于这个，还是有些争议的。我一开始也认为</p>\n"},{"title":"游戏AI初探","date":"2023-08-30T06:34:54.000Z","_content":"\n\n\n# randomness\n\n## 高斯分布\n\n用于模拟生活中的一些行为, 可以是物理特性，认知能力，消遣时间或子弹分布。\n\n+ Average or max speed \n+ Average or max acceleration \n+ Size, width, height, or mass\n+ Visual or physical reaction time \n+ Fire or reload rate for firing \n+ Refresh rate or cool-down rate for healing or special abilities \n+ Chance of missing or striking a critical hit\n\n## 随机数过滤\n\n为了留住玩家，可以通过对随机数进行过滤，来让玩家或对手获得优势\n\n## 噪声\n\n最后，柏林噪声不仅仅是图像领域，1D柏林噪声可以用于平滑过渡动作，动画，和许多其他的行为。\n\n+ Movement (direction, speed, acceleration) \n+ Layered onto animation (adding noise to facial movement or gaze [Perlin 97]) \n+ Accuracy (winning or losing streaks, being in the groove, luck, or success) \n+ Attention (guard alertness, response time) • Play style (defensive, offensive) \n+ Mood (calm, angry, happy, sad, depressed, manic, bored, engaged)\n\n# FSM\n\n```java\npublic abstract class FSMTransition {\n    // 判断当前转换是否成立，如果为真，有条路从当前状态走到目标状态\n    abstract boolean isValid();\n\t// 得到状态转换的最终状态\n    abstract FSMachine getNextState();\n\t// 发生在原状态和目标状态中间的事\n    abstract void onTransition();\n}\n```\n\n\n\n```java\npublic abstract static class FSMachine {\n    // 进入状态\n    abstract void onEnter();\n    // 每tick更新\n    abstract void onUpdate();\n    // 离开状态\n    abstract void onExit();\n    // 可选的状态转换路线\n    List<FSMTransition> transitions = new ArrayList<>();\n}\n```\n\n\n\n```java\npublic static class FiniteStateMachine {\n    // 主要更新方法\n    void update(){\n        // 判断当前状态的所有可能转换路线\n        for (FSMTransition transition : activeState.transitions) {\n            if (transition.isValid()) { // 如果可以选择该路线\n                activeState.onExit(); \n                activeState = transition.getNextState();\n                transition.onTransition();\n                activeState.onEnter();\n                break;\n            }\n        }\n        // 更新状态\n        activeState.onUpdate();\n    };\n    // 状态机所持有的所有状态\n    List<FSMachine> states;\n    // 初始状态\n    FSMachine initState;\n    // 当前状态\n    FSMachine activeState;\n}\n```\n\n需要注意的是，具体的逻辑在`onExit(), onUpdate(), onExit(), onTransition()`这四个方法中实现，其中，`onTransition()`方法应与具体AI逻辑无关，如日志记录，全局事件等.\n\n## Hierarchical FSM\n\n当开发到晚期时，状态会几十上百个，增加新状态时会很复杂且容易出错。\n\n> 在HFSM中，每个单独的状态都是一个状态机。可以使整个状态机分离到单独的多个状态机中.\n\n## Behavior Trees\n\na example:\n\n```java\npublic abstract static class Behavior {\n    abstract void onInit(); // 初次进入\n    abstract State update(); // 更新状态\n    abstract void onTerminate(State); // 离开\n}\n```\n\n行为树的实现可以通过`装饰器`或`组合`模式去实现。\n\n新的行为树可以多个实体共享，使用DSL，用于多种逻辑.\n\n## Utility Systems\n\n效用系统，用于处理非布尔值信息。比起饿了吃饭，效用系统计算了多饿，多重等非01信息。通过多种因素计算出一个分数，或者加上一个随机值，根据最终的值进行选择。\n\n## Goal-Oriented Action Planners\n\n目标导向型行为选择\n\n>  GOAP is derived from the Stanford Research Institute Problem Solver \n\n给予一个目标，然后在所有可选的方法中自行选择，让AI自动选择。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/游戏AI初探.md","raw":"---\ntitle: 游戏AI初探\ndate: 2023-08-30 14:34:54\ncategories:\n  - 游戏相关\ntags: GameDev\n---\n\n\n\n# randomness\n\n## 高斯分布\n\n用于模拟生活中的一些行为, 可以是物理特性，认知能力，消遣时间或子弹分布。\n\n+ Average or max speed \n+ Average or max acceleration \n+ Size, width, height, or mass\n+ Visual or physical reaction time \n+ Fire or reload rate for firing \n+ Refresh rate or cool-down rate for healing or special abilities \n+ Chance of missing or striking a critical hit\n\n## 随机数过滤\n\n为了留住玩家，可以通过对随机数进行过滤，来让玩家或对手获得优势\n\n## 噪声\n\n最后，柏林噪声不仅仅是图像领域，1D柏林噪声可以用于平滑过渡动作，动画，和许多其他的行为。\n\n+ Movement (direction, speed, acceleration) \n+ Layered onto animation (adding noise to facial movement or gaze [Perlin 97]) \n+ Accuracy (winning or losing streaks, being in the groove, luck, or success) \n+ Attention (guard alertness, response time) • Play style (defensive, offensive) \n+ Mood (calm, angry, happy, sad, depressed, manic, bored, engaged)\n\n# FSM\n\n```java\npublic abstract class FSMTransition {\n    // 判断当前转换是否成立，如果为真，有条路从当前状态走到目标状态\n    abstract boolean isValid();\n\t// 得到状态转换的最终状态\n    abstract FSMachine getNextState();\n\t// 发生在原状态和目标状态中间的事\n    abstract void onTransition();\n}\n```\n\n\n\n```java\npublic abstract static class FSMachine {\n    // 进入状态\n    abstract void onEnter();\n    // 每tick更新\n    abstract void onUpdate();\n    // 离开状态\n    abstract void onExit();\n    // 可选的状态转换路线\n    List<FSMTransition> transitions = new ArrayList<>();\n}\n```\n\n\n\n```java\npublic static class FiniteStateMachine {\n    // 主要更新方法\n    void update(){\n        // 判断当前状态的所有可能转换路线\n        for (FSMTransition transition : activeState.transitions) {\n            if (transition.isValid()) { // 如果可以选择该路线\n                activeState.onExit(); \n                activeState = transition.getNextState();\n                transition.onTransition();\n                activeState.onEnter();\n                break;\n            }\n        }\n        // 更新状态\n        activeState.onUpdate();\n    };\n    // 状态机所持有的所有状态\n    List<FSMachine> states;\n    // 初始状态\n    FSMachine initState;\n    // 当前状态\n    FSMachine activeState;\n}\n```\n\n需要注意的是，具体的逻辑在`onExit(), onUpdate(), onExit(), onTransition()`这四个方法中实现，其中，`onTransition()`方法应与具体AI逻辑无关，如日志记录，全局事件等.\n\n## Hierarchical FSM\n\n当开发到晚期时，状态会几十上百个，增加新状态时会很复杂且容易出错。\n\n> 在HFSM中，每个单独的状态都是一个状态机。可以使整个状态机分离到单独的多个状态机中.\n\n## Behavior Trees\n\na example:\n\n```java\npublic abstract static class Behavior {\n    abstract void onInit(); // 初次进入\n    abstract State update(); // 更新状态\n    abstract void onTerminate(State); // 离开\n}\n```\n\n行为树的实现可以通过`装饰器`或`组合`模式去实现。\n\n新的行为树可以多个实体共享，使用DSL，用于多种逻辑.\n\n## Utility Systems\n\n效用系统，用于处理非布尔值信息。比起饿了吃饭，效用系统计算了多饿，多重等非01信息。通过多种因素计算出一个分数，或者加上一个随机值，根据最终的值进行选择。\n\n## Goal-Oriented Action Planners\n\n目标导向型行为选择\n\n>  GOAP is derived from the Stanford Research Institute Problem Solver \n\n给予一个目标，然后在所有可选的方法中自行选择，让AI自动选择。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"游戏AI初探","published":1,"updated":"2023-12-09T03:59:40.115Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clpxpllhy000uakkv2viefnaf","content":"<h1 id=\"randomness\"><a href=\"#randomness\" class=\"headerlink\" title=\"randomness\"></a>randomness</h1><h2 id=\"高斯分布\"><a href=\"#高斯分布\" class=\"headerlink\" title=\"高斯分布\"></a>高斯分布</h2><p>用于模拟生活中的一些行为, 可以是物理特性，认知能力，消遣时间或子弹分布。</p>\n<ul>\n<li>Average or max speed </li>\n<li>Average or max acceleration </li>\n<li>Size, width, height, or mass</li>\n<li>Visual or physical reaction time </li>\n<li>Fire or reload rate for firing </li>\n<li>Refresh rate or cool-down rate for healing or special abilities </li>\n<li>Chance of missing or striking a critical hit</li>\n</ul>\n<h2 id=\"随机数过滤\"><a href=\"#随机数过滤\" class=\"headerlink\" title=\"随机数过滤\"></a>随机数过滤</h2><p>为了留住玩家，可以通过对随机数进行过滤，来让玩家或对手获得优势</p>\n<h2 id=\"噪声\"><a href=\"#噪声\" class=\"headerlink\" title=\"噪声\"></a>噪声</h2><p>最后，柏林噪声不仅仅是图像领域，1D柏林噪声可以用于平滑过渡动作，动画，和许多其他的行为。</p>\n<ul>\n<li>Movement (direction, speed, acceleration) </li>\n<li>Layered onto animation (adding noise to facial movement or gaze [Perlin 97]) </li>\n<li>Accuracy (winning or losing streaks, being in the groove, luck, or success) </li>\n<li>Attention (guard alertness, response time) • Play style (defensive, offensive) </li>\n<li>Mood (calm, angry, happy, sad, depressed, manic, bored, engaged)</li>\n</ul>\n<h1 id=\"FSM\"><a href=\"#FSM\" class=\"headerlink\" title=\"FSM\"></a>FSM</h1><pre><code class=\"java\">public abstract class FSMTransition &#123;\n    // 判断当前转换是否成立，如果为真，有条路从当前状态走到目标状态\n    abstract boolean isValid();\n    // 得到状态转换的最终状态\n    abstract FSMachine getNextState();\n    // 发生在原状态和目标状态中间的事\n    abstract void onTransition();\n&#125;\n</code></pre>\n<pre><code class=\"java\">public abstract static class FSMachine &#123;\n    // 进入状态\n    abstract void onEnter();\n    // 每tick更新\n    abstract void onUpdate();\n    // 离开状态\n    abstract void onExit();\n    // 可选的状态转换路线\n    List&lt;FSMTransition&gt; transitions = new ArrayList&lt;&gt;();\n&#125;\n</code></pre>\n<pre><code class=\"java\">public static class FiniteStateMachine &#123;\n    // 主要更新方法\n    void update()&#123;\n        // 判断当前状态的所有可能转换路线\n        for (FSMTransition transition : activeState.transitions) &#123;\n            if (transition.isValid()) &#123; // 如果可以选择该路线\n                activeState.onExit(); \n                activeState = transition.getNextState();\n                transition.onTransition();\n                activeState.onEnter();\n                break;\n            &#125;\n        &#125;\n        // 更新状态\n        activeState.onUpdate();\n    &#125;;\n    // 状态机所持有的所有状态\n    List&lt;FSMachine&gt; states;\n    // 初始状态\n    FSMachine initState;\n    // 当前状态\n    FSMachine activeState;\n&#125;\n</code></pre>\n<p>需要注意的是，具体的逻辑在<code>onExit(), onUpdate(), onExit(), onTransition()</code>这四个方法中实现，其中，<code>onTransition()</code>方法应与具体AI逻辑无关，如日志记录，全局事件等.</p>\n<h2 id=\"Hierarchical-FSM\"><a href=\"#Hierarchical-FSM\" class=\"headerlink\" title=\"Hierarchical FSM\"></a>Hierarchical FSM</h2><p>当开发到晚期时，状态会几十上百个，增加新状态时会很复杂且容易出错。</p>\n<blockquote>\n<p>在HFSM中，每个单独的状态都是一个状态机。可以使整个状态机分离到单独的多个状态机中.</p>\n</blockquote>\n<h2 id=\"Behavior-Trees\"><a href=\"#Behavior-Trees\" class=\"headerlink\" title=\"Behavior Trees\"></a>Behavior Trees</h2><p>a example:</p>\n<pre><code class=\"java\">public abstract static class Behavior &#123;\n    abstract void onInit(); // 初次进入\n    abstract State update(); // 更新状态\n    abstract void onTerminate(State); // 离开\n&#125;\n</code></pre>\n<p>行为树的实现可以通过<code>装饰器</code>或<code>组合</code>模式去实现。</p>\n<p>新的行为树可以多个实体共享，使用DSL，用于多种逻辑.</p>\n<h2 id=\"Utility-Systems\"><a href=\"#Utility-Systems\" class=\"headerlink\" title=\"Utility Systems\"></a>Utility Systems</h2><p>效用系统，用于处理非布尔值信息。比起饿了吃饭，效用系统计算了多饿，多重等非01信息。通过多种因素计算出一个分数，或者加上一个随机值，根据最终的值进行选择。</p>\n<h2 id=\"Goal-Oriented-Action-Planners\"><a href=\"#Goal-Oriented-Action-Planners\" class=\"headerlink\" title=\"Goal-Oriented Action Planners\"></a>Goal-Oriented Action Planners</h2><p>目标导向型行为选择</p>\n<blockquote>\n<p> GOAP is derived from the Stanford Research Institute Problem Solver </p>\n</blockquote>\n<p>给予一个目标，然后在所有可选的方法中自行选择，让AI自动选择。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"randomness\"><a href=\"#randomness\" class=\"headerlink\" title=\"randomness\"></a>randomness</h1><h2 id=\"高斯分布\"><a href=\"#高斯分布\" class=\"headerlink\" title=\"高斯分布\"></a>高斯分布</h2><p>用于模拟生活中的一些行为, 可以是物理特性，认知能力，消遣时间或子弹分布。</p>\n<ul>\n<li>Average or max speed </li>\n<li>Average or max acceleration </li>\n<li>Size, width, height, or mass</li>\n<li>Visual or physical reaction time </li>\n<li>Fire or reload rate for firing </li>\n<li>Refresh rate or cool-down rate for healing or special abilities </li>\n<li>Chance of missing or striking a critical hit</li>\n</ul>\n<h2 id=\"随机数过滤\"><a href=\"#随机数过滤\" class=\"headerlink\" title=\"随机数过滤\"></a>随机数过滤</h2><p>为了留住玩家，可以通过对随机数进行过滤，来让玩家或对手获得优势</p>\n<h2 id=\"噪声\"><a href=\"#噪声\" class=\"headerlink\" title=\"噪声\"></a>噪声</h2><p>最后，柏林噪声不仅仅是图像领域，1D柏林噪声可以用于平滑过渡动作，动画，和许多其他的行为。</p>\n<ul>\n<li>Movement (direction, speed, acceleration) </li>\n<li>Layered onto animation (adding noise to facial movement or gaze [Perlin 97]) </li>\n<li>Accuracy (winning or losing streaks, being in the groove, luck, or success) </li>\n<li>Attention (guard alertness, response time) • Play style (defensive, offensive) </li>\n<li>Mood (calm, angry, happy, sad, depressed, manic, bored, engaged)</li>\n</ul>\n<h1 id=\"FSM\"><a href=\"#FSM\" class=\"headerlink\" title=\"FSM\"></a>FSM</h1><pre><code class=\"java\">public abstract class FSMTransition &#123;\n    // 判断当前转换是否成立，如果为真，有条路从当前状态走到目标状态\n    abstract boolean isValid();\n    // 得到状态转换的最终状态\n    abstract FSMachine getNextState();\n    // 发生在原状态和目标状态中间的事\n    abstract void onTransition();\n&#125;\n</code></pre>\n<pre><code class=\"java\">public abstract static class FSMachine &#123;\n    // 进入状态\n    abstract void onEnter();\n    // 每tick更新\n    abstract void onUpdate();\n    // 离开状态\n    abstract void onExit();\n    // 可选的状态转换路线\n    List&lt;FSMTransition&gt; transitions = new ArrayList&lt;&gt;();\n&#125;\n</code></pre>\n<pre><code class=\"java\">public static class FiniteStateMachine &#123;\n    // 主要更新方法\n    void update()&#123;\n        // 判断当前状态的所有可能转换路线\n        for (FSMTransition transition : activeState.transitions) &#123;\n            if (transition.isValid()) &#123; // 如果可以选择该路线\n                activeState.onExit(); \n                activeState = transition.getNextState();\n                transition.onTransition();\n                activeState.onEnter();\n                break;\n            &#125;\n        &#125;\n        // 更新状态\n        activeState.onUpdate();\n    &#125;;\n    // 状态机所持有的所有状态\n    List&lt;FSMachine&gt; states;\n    // 初始状态\n    FSMachine initState;\n    // 当前状态\n    FSMachine activeState;\n&#125;\n</code></pre>\n<p>需要注意的是，具体的逻辑在<code>onExit(), onUpdate(), onExit(), onTransition()</code>这四个方法中实现，其中，<code>onTransition()</code>方法应与具体AI逻辑无关，如日志记录，全局事件等.</p>\n<h2 id=\"Hierarchical-FSM\"><a href=\"#Hierarchical-FSM\" class=\"headerlink\" title=\"Hierarchical FSM\"></a>Hierarchical FSM</h2><p>当开发到晚期时，状态会几十上百个，增加新状态时会很复杂且容易出错。</p>\n<blockquote>\n<p>在HFSM中，每个单独的状态都是一个状态机。可以使整个状态机分离到单独的多个状态机中.</p>\n</blockquote>\n<h2 id=\"Behavior-Trees\"><a href=\"#Behavior-Trees\" class=\"headerlink\" title=\"Behavior Trees\"></a>Behavior Trees</h2><p>a example:</p>\n<pre><code class=\"java\">public abstract static class Behavior &#123;\n    abstract void onInit(); // 初次进入\n    abstract State update(); // 更新状态\n    abstract void onTerminate(State); // 离开\n&#125;\n</code></pre>\n<p>行为树的实现可以通过<code>装饰器</code>或<code>组合</code>模式去实现。</p>\n<p>新的行为树可以多个实体共享，使用DSL，用于多种逻辑.</p>\n<h2 id=\"Utility-Systems\"><a href=\"#Utility-Systems\" class=\"headerlink\" title=\"Utility Systems\"></a>Utility Systems</h2><p>效用系统，用于处理非布尔值信息。比起饿了吃饭，效用系统计算了多饿，多重等非01信息。通过多种因素计算出一个分数，或者加上一个随机值，根据最终的值进行选择。</p>\n<h2 id=\"Goal-Oriented-Action-Planners\"><a href=\"#Goal-Oriented-Action-Planners\" class=\"headerlink\" title=\"Goal-Oriented Action Planners\"></a>Goal-Oriented Action Planners</h2><p>目标导向型行为选择</p>\n<blockquote>\n<p> GOAP is derived from the Stanford Research Institute Problem Solver </p>\n</blockquote>\n<p>给予一个目标，然后在所有可选的方法中自行选择，让AI自动选择。</p>\n"},{"title":"项目中elasticsearch的应用及思考","date":"2023-09-08T14:06:05.000Z","_content":"<mark>建设中</mark>  \n\n关键字： MySQL, binlog, canal, 搜索，导出， elasticsearch, 模块\n\n","source":"_posts/项目中elasticsearch的应用及思考.md","raw":"---\ntitle: 项目中elasticsearch的应用及思考\ndate: 2023-09-08 22:06:05\ncategories:\n  - 开发相关\n  - 中间件\ntags: [Java, Spring, ES]\n---\n<mark>建设中</mark>  \n\n关键字： MySQL, binlog, canal, 搜索，导出， elasticsearch, 模块\n\n","slug":"项目中elasticsearch的应用及思考","published":1,"updated":"2023-12-09T03:59:40.115Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clpxplli0000xakkv4xq26auu","content":"<p><mark>建设中</mark>  </p>\n<p>关键字： MySQL, binlog, canal, 搜索，导出， elasticsearch, 模块</p>\n","site":{"data":{}},"excerpt":"","more":"<p><mark>建设中</mark>  </p>\n<p>关键字： MySQL, binlog, canal, 搜索，导出， elasticsearch, 模块</p>\n"},{"title":"项目中缓存中间件的应用及思考","date":"2023-09-08T14:06:23.000Z","_content":"\n<mark>建设中</mark>\n\n关键词：Redis，ehCache， hutool-cache，guava-cache\n\n","source":"_posts/项目中缓存中间件的应用及思考.md","raw":"---\ntitle: 项目中缓存中间件的应用及思考\ndate: 2023-09-08 22:06:23\ncategories:\n  - 开发相关\n  - 中间件\ntags: [Java Redis, 缓存]\n---\n\n<mark>建设中</mark>\n\n关键词：Redis，ehCache， hutool-cache，guava-cache\n\n","slug":"项目中缓存中间件的应用及思考","published":1,"updated":"2023-12-09T03:59:40.115Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clpxplli10011akkvhq69cd1t","content":"<p><mark>建设中</mark></p>\n<p>关键词：Redis，ehCache， hutool-cache，guava-cache</p>\n","site":{"data":{}},"excerpt":"","more":"<p><mark>建设中</mark></p>\n<p>关键词：Redis，ehCache， hutool-cache，guava-cache</p>\n"},{"title":"项目中设计模式的尝试与反馈","date":"2023-09-08T14:05:56.000Z","_content":"\n<mark>建设中</mark>\n与其说Java是面向对象的，不如说是在面向对象的语言中实现面向过程. 一个方法里成千上万行逻辑，if用的也是尤达表达式，很难不让人怀疑原先维护这个项目的人是不是写C语言的。\n\n其实就算是C语言的函数，也没有这样一个函数写到底的，大都是按功能进行拆分，那么在这个项目中","source":"_posts/项目中设计模式的尝试与反馈.md","raw":"---\ntitle: 项目中设计模式的尝试与反馈\ndate: 2023-09-08 22:05:56\ncategories:\n  - 开发相关\ntags: [Java, Coding]\n---\n\n<mark>建设中</mark>\n与其说Java是面向对象的，不如说是在面向对象的语言中实现面向过程. 一个方法里成千上万行逻辑，if用的也是尤达表达式，很难不让人怀疑原先维护这个项目的人是不是写C语言的。\n\n其实就算是C语言的函数，也没有这样一个函数写到底的，大都是按功能进行拆分，那么在这个项目中","slug":"项目中设计模式的尝试与反馈","published":1,"updated":"2023-12-09T03:59:40.115Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clpxplli20014akkv8wx86sdu","content":"<p><mark>建设中</mark><br>与其说Java是面向对象的，不如说是在面向对象的语言中实现面向过程. 一个方法里成千上万行逻辑，if用的也是尤达表达式，很难不让人怀疑原先维护这个项目的人是不是写C语言的。</p>\n<p>其实就算是C语言的函数，也没有这样一个函数写到底的，大都是按功能进行拆分，那么在这个项目中</p>\n","site":{"data":{}},"excerpt":"","more":"<p><mark>建设中</mark><br>与其说Java是面向对象的，不如说是在面向对象的语言中实现面向过程. 一个方法里成千上万行逻辑，if用的也是尤达表达式，很难不让人怀疑原先维护这个项目的人是不是写C语言的。</p>\n<p>其实就算是C语言的函数，也没有这样一个函数写到底的，大都是按功能进行拆分，那么在这个项目中</p>\n"},{"title":"记一次被诈骗经历","date":"2023-08-28T15:12:20.000Z","top":1,"cover":"https://img.paulzzh.com/touhou/random","_content":"\n<!-- TOC -->\n* [经历复盘](#经历复盘-)\n  * [起因](#起因-)\n  * [神秘邮件地址](#神秘邮件地址)\n  * [解冻账号](#解冻账号)\n  * [事后处理](#事后处理)\n* [获得教训](#获得教训)\n  * [面对涉及钱财的事情谨慎再谨慎](#面对涉及钱财的事情谨慎再谨慎)\n  * [不要贷款吃💩](#不要贷款吃-)\n  * [个人信息保护](#个人信息保护)\n  * [对英语说日语，对日语说英语，优先中文](#对英语说日语对日语说英语优先中文)\n  * [最后](#最后)\n<!-- TOC -->\n\n先说结果: 共计被诈骗1032元  \n\n# 经历复盘  \n\n## 起因  \n\n在steam平台上，有个「<font color='RED'>1</font>」级的账号突然加我好友，想着以前喜欢扩列，就发了很多交友信息，没想太多就同意了。没想到的是，到了晚上11点，他突然用「<mark>英语</mark>」给我发消息,说有个和我头像昵称一样的人买了一个$1500的饰品，问账号是不是我，并且说他跟steam客服交谈，我的账号正在被封禁。而我本人是不能看到的，而且还煞有其事地拿出截图，看着挺正式，我也就没有怀疑。\n\n## 神秘邮件地址\n\n之后他让我给一个地址发邮件，解释这是一个误会，希望得到客服帮助，这个地址一眼看不出问题，我也就发了，过了一会有了回信，并且附上了一个人的联系方式，让我添加他为好友。 到这一步真的是槽点很多，任何一步发现问题都没有后面的事了。但是当时脑子确实没有反应过来。就上当了。\n\n## 解冻账号\n\n添加上之后，对方说要通过支付宝和微信进行临时支付，**这些钱会在验证完成后退回**，而到这里，一般情况下会起疑心，但是不知道为什么当时一点都没有怀疑，反而继续付款，支付宝损失了600，随后是微信，好在，微信在我支付了400之后冻结了我的转账功能，这个时候我才反应过来，到底是早还是晚。随后报警。\n\n## 事后处理\n\n虽然报警了，但是由于steam平台不受国内监管，付款地址也无法追踪，能够追回的希望非常渺茫，只好做了简单的记录回家了。当时已经是凌晨1点了，到家之后迟迟不能睡去，直到4点，请了一上午假，换换心情。当时很想注销账号，以免再次被骗。不过还是没有这样做，不然又会增加损失。\n\n# 获得教训\n\n## 面对涉及钱财的事情谨慎再谨慎\n\n真的是墨菲定律，越怕什么越来什么，但是有句话也说的对:\"能用钱买到的教训是最值的教训\", 这件事肯定能让我记至少20年。以后面对涉及钱财的事情，首要目标是不花钱。避免被骗。\n\n## 不要贷款吃💩  \n\n为什么要这么说，对方说的是我的账号<mark>将要</mark>被冻结, 现在是如何补救。那么我能不能等到他真给我封禁了，我再想办法补救呢？一旦想着提前补救，这就中了骗子的套路了。\n\n## 个人信息保护\n\n对方能加我好友，并且获取到我的详细信息，自己没有保护好隐私也算是一个原因，所以之后个人信息要注重保护，不会再公开场合泄露个人信息。或者，使用伪造的假信息。\n\n## 对英语说日语，对日语说英语，优先中文\n\n也许是看到对方说的英文所以警惕性变低了，如果对方说中文肯定会有所怀疑，因此，以后面对这种事，第一要义就是以英语对日语，以日语对英语。同时注意对方语法是否对。  \n日语是主宾谓，英语和汉语一样主谓宾，通过这点可以筛选出是不是机翻，其次再统一说中文，提高警惕。\n\n## 最后\n\n我估计是之前在酒店登录steam账号导致账号信息泄露了，实在是不应该，损失最大化，因此以后的生活中，一定要记录花销，设定目标限额，一切都从自身出发.","source":"_posts/记一次被诈骗经历.md","raw":"---\ntitle: 记一次被诈骗经历\ndate: \"2023-08-28 23:12:20\"\ntags: [生活]\ntop: 1\ncover: https://img.paulzzh.com/touhou/random\n---\n\n<!-- TOC -->\n* [经历复盘](#经历复盘-)\n  * [起因](#起因-)\n  * [神秘邮件地址](#神秘邮件地址)\n  * [解冻账号](#解冻账号)\n  * [事后处理](#事后处理)\n* [获得教训](#获得教训)\n  * [面对涉及钱财的事情谨慎再谨慎](#面对涉及钱财的事情谨慎再谨慎)\n  * [不要贷款吃💩](#不要贷款吃-)\n  * [个人信息保护](#个人信息保护)\n  * [对英语说日语，对日语说英语，优先中文](#对英语说日语对日语说英语优先中文)\n  * [最后](#最后)\n<!-- TOC -->\n\n先说结果: 共计被诈骗1032元  \n\n# 经历复盘  \n\n## 起因  \n\n在steam平台上，有个「<font color='RED'>1</font>」级的账号突然加我好友，想着以前喜欢扩列，就发了很多交友信息，没想太多就同意了。没想到的是，到了晚上11点，他突然用「<mark>英语</mark>」给我发消息,说有个和我头像昵称一样的人买了一个$1500的饰品，问账号是不是我，并且说他跟steam客服交谈，我的账号正在被封禁。而我本人是不能看到的，而且还煞有其事地拿出截图，看着挺正式，我也就没有怀疑。\n\n## 神秘邮件地址\n\n之后他让我给一个地址发邮件，解释这是一个误会，希望得到客服帮助，这个地址一眼看不出问题，我也就发了，过了一会有了回信，并且附上了一个人的联系方式，让我添加他为好友。 到这一步真的是槽点很多，任何一步发现问题都没有后面的事了。但是当时脑子确实没有反应过来。就上当了。\n\n## 解冻账号\n\n添加上之后，对方说要通过支付宝和微信进行临时支付，**这些钱会在验证完成后退回**，而到这里，一般情况下会起疑心，但是不知道为什么当时一点都没有怀疑，反而继续付款，支付宝损失了600，随后是微信，好在，微信在我支付了400之后冻结了我的转账功能，这个时候我才反应过来，到底是早还是晚。随后报警。\n\n## 事后处理\n\n虽然报警了，但是由于steam平台不受国内监管，付款地址也无法追踪，能够追回的希望非常渺茫，只好做了简单的记录回家了。当时已经是凌晨1点了，到家之后迟迟不能睡去，直到4点，请了一上午假，换换心情。当时很想注销账号，以免再次被骗。不过还是没有这样做，不然又会增加损失。\n\n# 获得教训\n\n## 面对涉及钱财的事情谨慎再谨慎\n\n真的是墨菲定律，越怕什么越来什么，但是有句话也说的对:\"能用钱买到的教训是最值的教训\", 这件事肯定能让我记至少20年。以后面对涉及钱财的事情，首要目标是不花钱。避免被骗。\n\n## 不要贷款吃💩  \n\n为什么要这么说，对方说的是我的账号<mark>将要</mark>被冻结, 现在是如何补救。那么我能不能等到他真给我封禁了，我再想办法补救呢？一旦想着提前补救，这就中了骗子的套路了。\n\n## 个人信息保护\n\n对方能加我好友，并且获取到我的详细信息，自己没有保护好隐私也算是一个原因，所以之后个人信息要注重保护，不会再公开场合泄露个人信息。或者，使用伪造的假信息。\n\n## 对英语说日语，对日语说英语，优先中文\n\n也许是看到对方说的英文所以警惕性变低了，如果对方说中文肯定会有所怀疑，因此，以后面对这种事，第一要义就是以英语对日语，以日语对英语。同时注意对方语法是否对。  \n日语是主宾谓，英语和汉语一样主谓宾，通过这点可以筛选出是不是机翻，其次再统一说中文，提高警惕。\n\n## 最后\n\n我估计是之前在酒店登录steam账号导致账号信息泄露了，实在是不应该，损失最大化，因此以后的生活中，一定要记录花销，设定目标限额，一切都从自身出发.","slug":"记一次被诈骗经历","published":1,"updated":"2023-12-09T03:59:40.115Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clpxplli20016akkv0ridad1k","content":"<!-- TOC -->\n<ul>\n<li><a href=\"#%E7%BB%8F%E5%8E%86%E5%A4%8D%E7%9B%98-\">经历复盘</a><ul>\n<li><a href=\"#%E8%B5%B7%E5%9B%A0-\">起因</a></li>\n<li><a href=\"#%E7%A5%9E%E7%A7%98%E9%82%AE%E4%BB%B6%E5%9C%B0%E5%9D%80\">神秘邮件地址</a></li>\n<li><a href=\"#%E8%A7%A3%E5%86%BB%E8%B4%A6%E5%8F%B7\">解冻账号</a></li>\n<li><a href=\"#%E4%BA%8B%E5%90%8E%E5%A4%84%E7%90%86\">事后处理</a></li>\n</ul>\n</li>\n<li><a href=\"#%E8%8E%B7%E5%BE%97%E6%95%99%E8%AE%AD\">获得教训</a><ul>\n<li><a href=\"#%E9%9D%A2%E5%AF%B9%E6%B6%89%E5%8F%8A%E9%92%B1%E8%B4%A2%E7%9A%84%E4%BA%8B%E6%83%85%E8%B0%A8%E6%85%8E%E5%86%8D%E8%B0%A8%E6%85%8E\">面对涉及钱财的事情谨慎再谨慎</a></li>\n<li><a href=\"#%E4%B8%8D%E8%A6%81%E8%B4%B7%E6%AC%BE%E5%90%83-\">不要贷款吃💩</a></li>\n<li><a href=\"#%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF%E4%BF%9D%E6%8A%A4\">个人信息保护</a></li>\n<li><a href=\"#%E5%AF%B9%E8%8B%B1%E8%AF%AD%E8%AF%B4%E6%97%A5%E8%AF%AD%E5%AF%B9%E6%97%A5%E8%AF%AD%E8%AF%B4%E8%8B%B1%E8%AF%AD%E4%BC%98%E5%85%88%E4%B8%AD%E6%96%87\">对英语说日语，对日语说英语，优先中文</a></li>\n<li><a href=\"#%E6%9C%80%E5%90%8E\">最后</a><!-- TOC --></li>\n</ul>\n</li>\n</ul>\n<p>先说结果: 共计被诈骗1032元  </p>\n<h1 id=\"经历复盘\"><a href=\"#经历复盘\" class=\"headerlink\" title=\"经历复盘\"></a>经历复盘</h1><h2 id=\"起因\"><a href=\"#起因\" class=\"headerlink\" title=\"起因\"></a>起因</h2><p>在steam平台上，有个「<font color='RED'>1</font>」级的账号突然加我好友，想着以前喜欢扩列，就发了很多交友信息，没想太多就同意了。没想到的是，到了晚上11点，他突然用「<mark>英语</mark>」给我发消息,说有个和我头像昵称一样的人买了一个$1500的饰品，问账号是不是我，并且说他跟steam客服交谈，我的账号正在被封禁。而我本人是不能看到的，而且还煞有其事地拿出截图，看着挺正式，我也就没有怀疑。</p>\n<h2 id=\"神秘邮件地址\"><a href=\"#神秘邮件地址\" class=\"headerlink\" title=\"神秘邮件地址\"></a>神秘邮件地址</h2><p>之后他让我给一个地址发邮件，解释这是一个误会，希望得到客服帮助，这个地址一眼看不出问题，我也就发了，过了一会有了回信，并且附上了一个人的联系方式，让我添加他为好友。 到这一步真的是槽点很多，任何一步发现问题都没有后面的事了。但是当时脑子确实没有反应过来。就上当了。</p>\n<h2 id=\"解冻账号\"><a href=\"#解冻账号\" class=\"headerlink\" title=\"解冻账号\"></a>解冻账号</h2><p>添加上之后，对方说要通过支付宝和微信进行临时支付，<strong>这些钱会在验证完成后退回</strong>，而到这里，一般情况下会起疑心，但是不知道为什么当时一点都没有怀疑，反而继续付款，支付宝损失了600，随后是微信，好在，微信在我支付了400之后冻结了我的转账功能，这个时候我才反应过来，到底是早还是晚。随后报警。</p>\n<h2 id=\"事后处理\"><a href=\"#事后处理\" class=\"headerlink\" title=\"事后处理\"></a>事后处理</h2><p>虽然报警了，但是由于steam平台不受国内监管，付款地址也无法追踪，能够追回的希望非常渺茫，只好做了简单的记录回家了。当时已经是凌晨1点了，到家之后迟迟不能睡去，直到4点，请了一上午假，换换心情。当时很想注销账号，以免再次被骗。不过还是没有这样做，不然又会增加损失。</p>\n<h1 id=\"获得教训\"><a href=\"#获得教训\" class=\"headerlink\" title=\"获得教训\"></a>获得教训</h1><h2 id=\"面对涉及钱财的事情谨慎再谨慎\"><a href=\"#面对涉及钱财的事情谨慎再谨慎\" class=\"headerlink\" title=\"面对涉及钱财的事情谨慎再谨慎\"></a>面对涉及钱财的事情谨慎再谨慎</h2><p>真的是墨菲定律，越怕什么越来什么，但是有句话也说的对:”能用钱买到的教训是最值的教训”, 这件事肯定能让我记至少20年。以后面对涉及钱财的事情，首要目标是不花钱。避免被骗。</p>\n<h2 id=\"不要贷款吃💩\"><a href=\"#不要贷款吃💩\" class=\"headerlink\" title=\"不要贷款吃💩\"></a>不要贷款吃💩</h2><p>为什么要这么说，对方说的是我的账号<mark>将要</mark>被冻结, 现在是如何补救。那么我能不能等到他真给我封禁了，我再想办法补救呢？一旦想着提前补救，这就中了骗子的套路了。</p>\n<h2 id=\"个人信息保护\"><a href=\"#个人信息保护\" class=\"headerlink\" title=\"个人信息保护\"></a>个人信息保护</h2><p>对方能加我好友，并且获取到我的详细信息，自己没有保护好隐私也算是一个原因，所以之后个人信息要注重保护，不会再公开场合泄露个人信息。或者，使用伪造的假信息。</p>\n<h2 id=\"对英语说日语，对日语说英语，优先中文\"><a href=\"#对英语说日语，对日语说英语，优先中文\" class=\"headerlink\" title=\"对英语说日语，对日语说英语，优先中文\"></a>对英语说日语，对日语说英语，优先中文</h2><p>也许是看到对方说的英文所以警惕性变低了，如果对方说中文肯定会有所怀疑，因此，以后面对这种事，第一要义就是以英语对日语，以日语对英语。同时注意对方语法是否对。<br>日语是主宾谓，英语和汉语一样主谓宾，通过这点可以筛选出是不是机翻，其次再统一说中文，提高警惕。</p>\n<h2 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h2><p>我估计是之前在酒店登录steam账号导致账号信息泄露了，实在是不应该，损失最大化，因此以后的生活中，一定要记录花销，设定目标限额，一切都从自身出发.</p>\n","site":{"data":{}},"excerpt":"","more":"<!-- TOC -->\n<ul>\n<li><a href=\"#%E7%BB%8F%E5%8E%86%E5%A4%8D%E7%9B%98-\">经历复盘</a><ul>\n<li><a href=\"#%E8%B5%B7%E5%9B%A0-\">起因</a></li>\n<li><a href=\"#%E7%A5%9E%E7%A7%98%E9%82%AE%E4%BB%B6%E5%9C%B0%E5%9D%80\">神秘邮件地址</a></li>\n<li><a href=\"#%E8%A7%A3%E5%86%BB%E8%B4%A6%E5%8F%B7\">解冻账号</a></li>\n<li><a href=\"#%E4%BA%8B%E5%90%8E%E5%A4%84%E7%90%86\">事后处理</a></li>\n</ul>\n</li>\n<li><a href=\"#%E8%8E%B7%E5%BE%97%E6%95%99%E8%AE%AD\">获得教训</a><ul>\n<li><a href=\"#%E9%9D%A2%E5%AF%B9%E6%B6%89%E5%8F%8A%E9%92%B1%E8%B4%A2%E7%9A%84%E4%BA%8B%E6%83%85%E8%B0%A8%E6%85%8E%E5%86%8D%E8%B0%A8%E6%85%8E\">面对涉及钱财的事情谨慎再谨慎</a></li>\n<li><a href=\"#%E4%B8%8D%E8%A6%81%E8%B4%B7%E6%AC%BE%E5%90%83-\">不要贷款吃💩</a></li>\n<li><a href=\"#%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF%E4%BF%9D%E6%8A%A4\">个人信息保护</a></li>\n<li><a href=\"#%E5%AF%B9%E8%8B%B1%E8%AF%AD%E8%AF%B4%E6%97%A5%E8%AF%AD%E5%AF%B9%E6%97%A5%E8%AF%AD%E8%AF%B4%E8%8B%B1%E8%AF%AD%E4%BC%98%E5%85%88%E4%B8%AD%E6%96%87\">对英语说日语，对日语说英语，优先中文</a></li>\n<li><a href=\"#%E6%9C%80%E5%90%8E\">最后</a><!-- TOC --></li>\n</ul>\n</li>\n</ul>\n<p>先说结果: 共计被诈骗1032元  </p>\n<h1 id=\"经历复盘\"><a href=\"#经历复盘\" class=\"headerlink\" title=\"经历复盘\"></a>经历复盘</h1><h2 id=\"起因\"><a href=\"#起因\" class=\"headerlink\" title=\"起因\"></a>起因</h2><p>在steam平台上，有个「<font color='RED'>1</font>」级的账号突然加我好友，想着以前喜欢扩列，就发了很多交友信息，没想太多就同意了。没想到的是，到了晚上11点，他突然用「<mark>英语</mark>」给我发消息,说有个和我头像昵称一样的人买了一个$1500的饰品，问账号是不是我，并且说他跟steam客服交谈，我的账号正在被封禁。而我本人是不能看到的，而且还煞有其事地拿出截图，看着挺正式，我也就没有怀疑。</p>\n<h2 id=\"神秘邮件地址\"><a href=\"#神秘邮件地址\" class=\"headerlink\" title=\"神秘邮件地址\"></a>神秘邮件地址</h2><p>之后他让我给一个地址发邮件，解释这是一个误会，希望得到客服帮助，这个地址一眼看不出问题，我也就发了，过了一会有了回信，并且附上了一个人的联系方式，让我添加他为好友。 到这一步真的是槽点很多，任何一步发现问题都没有后面的事了。但是当时脑子确实没有反应过来。就上当了。</p>\n<h2 id=\"解冻账号\"><a href=\"#解冻账号\" class=\"headerlink\" title=\"解冻账号\"></a>解冻账号</h2><p>添加上之后，对方说要通过支付宝和微信进行临时支付，<strong>这些钱会在验证完成后退回</strong>，而到这里，一般情况下会起疑心，但是不知道为什么当时一点都没有怀疑，反而继续付款，支付宝损失了600，随后是微信，好在，微信在我支付了400之后冻结了我的转账功能，这个时候我才反应过来，到底是早还是晚。随后报警。</p>\n<h2 id=\"事后处理\"><a href=\"#事后处理\" class=\"headerlink\" title=\"事后处理\"></a>事后处理</h2><p>虽然报警了，但是由于steam平台不受国内监管，付款地址也无法追踪，能够追回的希望非常渺茫，只好做了简单的记录回家了。当时已经是凌晨1点了，到家之后迟迟不能睡去，直到4点，请了一上午假，换换心情。当时很想注销账号，以免再次被骗。不过还是没有这样做，不然又会增加损失。</p>\n<h1 id=\"获得教训\"><a href=\"#获得教训\" class=\"headerlink\" title=\"获得教训\"></a>获得教训</h1><h2 id=\"面对涉及钱财的事情谨慎再谨慎\"><a href=\"#面对涉及钱财的事情谨慎再谨慎\" class=\"headerlink\" title=\"面对涉及钱财的事情谨慎再谨慎\"></a>面对涉及钱财的事情谨慎再谨慎</h2><p>真的是墨菲定律，越怕什么越来什么，但是有句话也说的对:”能用钱买到的教训是最值的教训”, 这件事肯定能让我记至少20年。以后面对涉及钱财的事情，首要目标是不花钱。避免被骗。</p>\n<h2 id=\"不要贷款吃💩\"><a href=\"#不要贷款吃💩\" class=\"headerlink\" title=\"不要贷款吃💩\"></a>不要贷款吃💩</h2><p>为什么要这么说，对方说的是我的账号<mark>将要</mark>被冻结, 现在是如何补救。那么我能不能等到他真给我封禁了，我再想办法补救呢？一旦想着提前补救，这就中了骗子的套路了。</p>\n<h2 id=\"个人信息保护\"><a href=\"#个人信息保护\" class=\"headerlink\" title=\"个人信息保护\"></a>个人信息保护</h2><p>对方能加我好友，并且获取到我的详细信息，自己没有保护好隐私也算是一个原因，所以之后个人信息要注重保护，不会再公开场合泄露个人信息。或者，使用伪造的假信息。</p>\n<h2 id=\"对英语说日语，对日语说英语，优先中文\"><a href=\"#对英语说日语，对日语说英语，优先中文\" class=\"headerlink\" title=\"对英语说日语，对日语说英语，优先中文\"></a>对英语说日语，对日语说英语，优先中文</h2><p>也许是看到对方说的英文所以警惕性变低了，如果对方说中文肯定会有所怀疑，因此，以后面对这种事，第一要义就是以英语对日语，以日语对英语。同时注意对方语法是否对。<br>日语是主宾谓，英语和汉语一样主谓宾，通过这点可以筛选出是不是机翻，其次再统一说中文，提高警惕。</p>\n<h2 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h2><p>我估计是之前在酒店登录steam账号导致账号信息泄露了，实在是不应该，损失最大化，因此以后的生活中，一定要记录花销，设定目标限额，一切都从自身出发.</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"clpxpllhj0001akkv80f99uz7","category_id":"clpxpllho0004akkvh0ie6hi6","_id":"clpxpllhu000eakkv26btbpo8"},{"post_id":"clpxpllhm0003akkv3qw2aybi","category_id":"clpxpllhs000aakkvg1xg5i0s","_id":"clpxpllhw000lakkvecjm6s6k"},{"post_id":"clpxpllhu000dakkv5o3ceh51","category_id":"clpxpllhs000aakkvg1xg5i0s","_id":"clpxpllhx000pakkv7qo7fo4q"},{"post_id":"clpxpllhv000hakkv7kd2hjpt","category_id":"clpxpllhs000aakkvg1xg5i0s","_id":"clpxpllhy000rakkvd2a8fh5b"},{"post_id":"clpxpllhp0007akkv3hiabbha","category_id":"clpxpllhu000fakkv5n2a5n05","_id":"clpxplli0000vakkvhup40m9o"},{"post_id":"clpxpllhw000jakkv1jgu8s1h","category_id":"clpxpllhu000fakkv5n2a5n05","_id":"clpxplli0000yakkvb2yrfxg0"},{"post_id":"clpxpllhx000oakkva1hda1fc","category_id":"clpxpllhu000fakkv5n2a5n05","_id":"clpxplli20013akkvamnqfs1c"},{"post_id":"clpxpllhq0008akkv3t87c5fw","category_id":"clpxpllho0004akkvh0ie6hi6","_id":"clpxplli20015akkvcv7g8aev"},{"post_id":"clpxpllhq0008akkv3t87c5fw","category_id":"clpxpllhw000makkv3w3cbpan","_id":"clpxplli30018akkv0bc684e0"},{"post_id":"clpxpllhy000uakkv2viefnaf","category_id":"clpxpllho0004akkvh0ie6hi6","_id":"clpxplli3001bakkvco2y1qtj"},{"post_id":"clpxplli20014akkv8wx86sdu","category_id":"clpxpllhs000aakkvg1xg5i0s","_id":"clpxplli3001eakkv9juoabfk"},{"post_id":"clpxpllhx000qakkve0gl8es6","category_id":"clpxpllhs000aakkvg1xg5i0s","_id":"clpxplli4001hakkvd9auaq1t"},{"post_id":"clpxpllhx000qakkve0gl8es6","category_id":"clpxplli00010akkv1k7d5qyq","_id":"clpxplli4001jakkv6vhgd0u7"},{"post_id":"clpxpllhr0009akkve36e2vmr","category_id":"clpxpllhs000aakkvg1xg5i0s","_id":"clpxplli5001lakkv4s8fdoej"},{"post_id":"clpxpllhr0009akkve36e2vmr","category_id":"clpxplli30017akkv83gdaang","_id":"clpxplli5001nakkv4ptp8nsx"},{"post_id":"clpxplli0000xakkv4xq26auu","category_id":"clpxpllhs000aakkvg1xg5i0s","_id":"clpxplli5001qakkv3t7wad3q"},{"post_id":"clpxplli0000xakkv4xq26auu","category_id":"clpxplli30017akkv83gdaang","_id":"clpxplli5001rakkvbioxaun4"},{"post_id":"clpxplli10011akkvhq69cd1t","category_id":"clpxpllhs000aakkvg1xg5i0s","_id":"clpxplli5001takkv7m1dbfq9"},{"post_id":"clpxplli10011akkvhq69cd1t","category_id":"clpxplli30017akkv83gdaang","_id":"clpxplli5001vakkvd7sv4bkr"}],"PostTag":[{"post_id":"clpxpllhj0001akkv80f99uz7","tag_id":"clpxpllhp0005akkverzvcopb","_id":"clpxpllhv000iakkvalkwh915"},{"post_id":"clpxpllhj0001akkv80f99uz7","tag_id":"clpxpllhs000bakkv8o8806nm","_id":"clpxpllhw000kakkv60xa7kqn"},{"post_id":"clpxpllhm0003akkv3qw2aybi","tag_id":"clpxpllhu000gakkvdf6f06bv","_id":"clpxplli0000wakkveskvfi2u"},{"post_id":"clpxpllhm0003akkv3qw2aybi","tag_id":"clpxpllhw000nakkvhmf94dza","_id":"clpxplli0000zakkvcpld3ktp"},{"post_id":"clpxpllhp0007akkv3hiabbha","tag_id":"clpxpllhy000takkv2csq3bt1","_id":"clpxplli3001aakkvdhcs5kg5"},{"post_id":"clpxpllhp0007akkv3hiabbha","tag_id":"clpxplli10012akkv8kxnh2k6","_id":"clpxplli3001cakkv4sms55cs"},{"post_id":"clpxplli20016akkv0ridad1k","tag_id":"clpxplli10012akkv8kxnh2k6","_id":"clpxplli4001gakkv5hwj9xex"},{"post_id":"clpxpllhq0008akkv3t87c5fw","tag_id":"clpxplli30019akkv9ecl318o","_id":"clpxplli5001makkv78ve9qc8"},{"post_id":"clpxpllhq0008akkv3t87c5fw","tag_id":"clpxplli4001fakkvhwsthprb","_id":"clpxplli5001oakkv33k0ci9q"},{"post_id":"clpxpllhr0009akkve36e2vmr","tag_id":"clpxpllhu000gakkvdf6f06bv","_id":"clpxplli5001uakkvbbp8hu6y"},{"post_id":"clpxpllhr0009akkve36e2vmr","tag_id":"clpxplli5001pakkv1siwd3j7","_id":"clpxplli5001wakkv1akqceh9"},{"post_id":"clpxpllhu000dakkv5o3ceh51","tag_id":"clpxpllhu000gakkvdf6f06bv","_id":"clpxplli6001zakkvel3x05w8"},{"post_id":"clpxpllhu000dakkv5o3ceh51","tag_id":"clpxpllhw000nakkvhmf94dza","_id":"clpxplli60020akkv2n2909ea"},{"post_id":"clpxpllhv000hakkv7kd2hjpt","tag_id":"clpxpllhu000gakkvdf6f06bv","_id":"clpxplli60022akkvhs0v8w0w"},{"post_id":"clpxpllhv000hakkv7kd2hjpt","tag_id":"clpxplli6001yakkvdw2gdc4l","_id":"clpxplli60023akkv9od162o1"},{"post_id":"clpxpllhw000jakkv1jgu8s1h","tag_id":"clpxplli10012akkv8kxnh2k6","_id":"clpxplli60025akkv339mfiaw"},{"post_id":"clpxpllhx000oakkva1hda1fc","tag_id":"clpxplli10012akkv8kxnh2k6","_id":"clpxplli70028akkv4alkch5m"},{"post_id":"clpxpllhx000oakkva1hda1fc","tag_id":"clpxpllhy000takkv2csq3bt1","_id":"clpxplli70029akkv3a3sg5gj"},{"post_id":"clpxpllhx000qakkve0gl8es6","tag_id":"clpxplli70027akkv68gdc7xm","_id":"clpxplli8002cakkv30eaekl7"},{"post_id":"clpxpllhx000qakkve0gl8es6","tag_id":"clpxplli7002aakkvagen9xqz","_id":"clpxplli8002dakkvaq1r0ou6"},{"post_id":"clpxpllhy000uakkv2viefnaf","tag_id":"clpxplli30019akkv9ecl318o","_id":"clpxplli8002fakkvdge00lqz"},{"post_id":"clpxplli0000xakkv4xq26auu","tag_id":"clpxpllhu000gakkvdf6f06bv","_id":"clpxplli8002hakkv4n305ofe"},{"post_id":"clpxplli0000xakkv4xq26auu","tag_id":"clpxpllhw000nakkvhmf94dza","_id":"clpxplli8002iakkva5l58hzg"},{"post_id":"clpxplli0000xakkv4xq26auu","tag_id":"clpxplli8002eakkv0a9gfyvf","_id":"clpxplli8002kakkv2izsfjiy"},{"post_id":"clpxplli10011akkvhq69cd1t","tag_id":"clpxplli8002gakkv2zee0l2b","_id":"clpxplli8002makkv3gd1haji"},{"post_id":"clpxplli10011akkvhq69cd1t","tag_id":"clpxplli8002jakkv41iz4lyr","_id":"clpxplli8002nakkv85lg1iyj"},{"post_id":"clpxplli20014akkv8wx86sdu","tag_id":"clpxpllhu000gakkvdf6f06bv","_id":"clpxplli8002oakkve38x5ld8"},{"post_id":"clpxplli20014akkv8wx86sdu","tag_id":"clpxplli8002lakkv357w3gbv","_id":"clpxplli8002pakkv1qc25szg"}],"Tag":[{"name":"LibGdx","_id":"clpxpllhp0005akkverzvcopb"},{"name":"Box2d","_id":"clpxpllhs000bakkv8o8806nm"},{"name":"Java","_id":"clpxpllhu000gakkvdf6f06bv"},{"name":"Spring","_id":"clpxpllhw000nakkvhmf94dza"},{"name":"日语","_id":"clpxpllhy000takkv2csq3bt1"},{"name":"生活","_id":"clpxplli10012akkv8kxnh2k6"},{"name":"GameDev","_id":"clpxplli30019akkv9ecl318o"},{"name":"算法","_id":"clpxplli4001fakkvhwsthprb"},{"name":"MySQL","_id":"clpxplli5001pakkv1siwd3j7"},{"name":"Git","_id":"clpxplli6001yakkvdw2gdc4l"},{"name":"Java Spring","_id":"clpxplli70027akkv68gdc7xm"},{"name":"Docker","_id":"clpxplli7002aakkvagen9xqz"},{"name":"ES","_id":"clpxplli8002eakkv0a9gfyvf"},{"name":"Java Redis","_id":"clpxplli8002gakkv2zee0l2b"},{"name":"缓存","_id":"clpxplli8002jakkv41iz4lyr"},{"name":"Coding","_id":"clpxplli8002lakkv357w3gbv"}]}}