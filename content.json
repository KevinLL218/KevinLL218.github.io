{"posts":[{"title":"2d游戏引擎系列-01","text":"创建一个简单的世界 以下是一个简单的世界，其中平台是固定的，角色是可以移动 1234567class Demo { private OrthographicCamera camera; // 正交投影 private World world; // 世界 private Box2DDebugRenderer b2dr; // 渲染(debug private Body player; // 角色 private Body platform; // 平台} 初始化流程 创建正交投影摄像机 创建世界 生成角色 生成平台 12345678public class Game { void create() { camera.setToOrth(false, w / 2, h / 2 ); world = new World(new Vector2(0, -9.8f), false); player = craetePlayer(); platform = createPlatform(); }} 生成角色和平台 生成角色和平台都可以看作一样的流程 生成BodyDef描述信息 根据描述信息生成Body 123456789101112131415161718class Game { void createBody() { Body pBody; // 定义 BodyDef def = new BodyDef(); def.type = BodyDef.BodyType.DynamicBody; // 活动的还是固定的 def.position.set(0,0); def.fixedRotation = true; pBody = world.createBody(def); // 从世界中创建的物体 // 形状 PolygonShape shape = new PolygonShape(); shape.setAsBox(16 / PPM, 16 / PPM); // 半径 pBody.createFixture(shape, 1.0f); shape.dispose(); }} 以上是一个简单的创建世界的过程.","link":"/2023/09/02/2d%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E%E7%B3%BB%E5%88%97-01/"},{"title":"Controller中返回值的处理逻辑","text":"在一次开发文件上传下载的任务中，学习了Spring中Resource类的使用, 不是@Resource, 本地测试项目是可以正常下载的，但是代码提交上去后发现返回的始终都是序列化的对象,而不是具体的文件, 通过对Spring返回值的学习和进一步追踪才找到问题所在。 @ResponseBody 注解的处理 @ResponseBody注解顾名思义，就是将Controller的返回值经过处理写入到 Response中的Body字段上.具体处理方式则是通过各种Converter的实现类结合MediaType 去处理转换。 虽然不知道谁控制着Controller注解，但是可以知道@ResponseBody注解是由RequestResponseBodyMethodProcessor 方法去处理的，该类同时还会处理方法参数中的@RequestBody注解,同样的，参数的读取也是通过”MessageConverter”来实现. 因此，理论上也是可以通过修改Converter来控制返回值的类型的。而这个脑瘫项目就是这么处理的，将所有的返回类型都一刀切,全部都是json返回类型。 ContentNegotiationManagerFactoryBean内容协商管理器工厂，就是控制入参和出参格式的类。这个工厂类是通过配置文件生成一个协商管理器，供Spring容器使用。可以通过配置文件配置支持的媒体类型和默认类型，而这个脑瘫项目就是只配置了json，默认也是application/json, 所以所有的返回值都以json字符串格式进行处理. 值得注意的是，该类本身是由工厂模式实现，而构建协商管理器的过程则是策略模式。最终的协商过程也是策略模式。 ResponseEntity&lt;T&gt; 类的使用由于内容协商的修改，所以在本项目中,ResponseEntity已经失去了他的作用。 传统的MVC对于下载的处理方式是比较臃肿的，需要打开HttpServletResponse的输出流，设置响应头属性，和MIME属性，而这些操作既然都是一样的，那么dont't repeat yourself , 这也是该类的使用场景。对于文件流，可以直接作为返回值，由内容协商管理器自动进行判断实现文件下载。 1234567@RestControllerclass Demo { @GetMapping(&quot;file&quot;) public ResponseEntity&lt;Resource&gt; download() { return new ResponseEntity&lt;&gt;(resource, HttpStatus.OK); }} 还是由于项目中，修改了内容协商管理器，导致所有返回类型都是json，所以即使是文件流，其返回到前端依旧是json格式. RequestMappingHandlerAdapter通过查阅资料及翻阅源码，大概知道了为什么自定义了MessageConverter导致ResponseEntity失效了。顾名思义,RequestMappingHandlerAdapter就是处理@RequestMapping的类，接着会发现在这个类中有个字段是 HandlerMethodReturnValueHandlerComposite, 这是一个组合模式的实现类，处理方法返回值，通过debug得知运行时自动添加返回值处理策略，这些策略或者以Handler结尾，或者以Processor结尾，最终都会添加到这个组合类中,运行时根据返回值的类型进行动态地处理，比如以ResponseEntity作为返回值，会由HttpEntityMethodProcessor类进行处理。程序到了这里， ResponseEntity还是能够正常处理的，但是当真正写结果的时候，发现是通过其父类的方法实现，而父类的方法则是上文所述的MediaType及其HttpMessageConverter实现类，原本根据不同的MediaType使用对应的Converter，此时由于只定义了json格式，其他格式也都默认为json，以至于最终的所有返回结果都是JSONString了。 所以说，这个💩山项目自作聪明的方法，断绝了后续开发的扩展性，除非将其大改，否则就是💩上雕花。","link":"/2023/09/07/Controller%E4%B8%AD%E8%BF%94%E5%9B%9E%E5%80%BC%E7%9A%84%E5%A4%84%E7%90%86%E9%80%BB%E8%BE%91/"},{"title":"Jump Point Search 路径规划算法","text":"A*Jump Point Search JPS可以看作对A*的一个剪枝判断操作,只不过这个判断有些绕. 需要引入几个概念 基本概念强制邻居如果不算斜角的话，一共有8种情况，举一个🌰: 当前点N，父节点P在左边，N的左上方有障碍物，上方是路，那么N的上方就是N的强迫邻居 跳点流程","link":"/2023/09/01/Jump-Point-Search-%E8%B7%AF%E5%BE%84%E8%A7%84%E5%88%92%E7%AE%97%E6%B3%95/"},{"title":"N2成绩以及展望","text":"成绩 言语 读解 听解 总分 词汇 语法 45 44 49 138 A A 契机从五月开始，或者是从年后回来开始复习，准备考N2，想起来当初学日语时，还是初中，空耳假面骑士的中二台词，后来才正式断断续续的自学之路，和网上的方法一样，通过『标准日本语』这本教材开始学习，也幸好自己英语成绩还不错，利用英语课的时间继续学习日语。 基础高中的时间非常紧张，两周休息一天半，就在这里挤时间学习，终于在高三前学完了初级上下册。听说这个教材有各种问题，但是也算是打下了一个基础了。到了大学时其实基本上已经忘记了。直到大二选修了日语专业的两门课，『日本传统文化』和『日语泛读』，两门都是外教的课，想到日语几乎零基础了，就利用暑假复习了几周，仓促开学😂。 惊讶的是，日专大二应该是到了N2的水平了，但是和他们一起上课的时候感觉不到差异，或者说有一些语法知识比他们还要熟悉，最大的差异就是口语了，非专业的没有接受过口语训练，所以即使都能听懂，但是却说不出来。可惜的是，当时有N2考试，但是因为没法从生活费中抽出550元而没有报名。随后就是三年的疫情，就没有后续了。 正式参加工作之后，因为个人性格问题(如果闲太久反而会恐慌),所以就重拾了日语学习，再加上有工资了，就报考了7月份的N2.不得不说，JLPT真和抢票一样，一不注意就抢不到了。好在最后有惊无险，选到了海大的考点。至此才是真正的开始。也是从这个时候做决定，要去日本生活。此时应该是四月份左右了。到7月2号正式考试，倒是没有遇到很难的问题，可能是有一些基础吧。 计划N1, 正在准备今年12月份的N1考试。希望能在年前拿到N1证书，这样也是比较有底气。不然只是N2，还是有些不够.","link":"/2023/08/21/JLPT-N2%E6%88%90%E7%BB%A9%E4%BB%A5%E5%8F%8A%E5%B1%95%E6%9C%9B/"},{"title":"MySQL应对上亿级别的数据的挑战","text":"建设中 稍微更新一点吧，分成两部分，一个是学习MySQL的时候知道的，MySQL Cluster，另一个就是之前用过的MyCat。","link":"/2023/09/08/MySQL%E5%BA%94%E5%AF%B9%E4%B8%8A%E4%BA%BF%E7%BA%A7%E5%88%AB%E7%9A%84%E6%95%B0%E6%8D%AE%E7%9A%84%E6%8C%91%E6%88%98/"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation to learn how to use.","link":"/2013/12/24/hello-world/"},{"title":"人生的十字路口","text":"人生の十字路2023年10月30日更新 过去半个月，现在已经平静下来，认真考虑之后的生活。 &nbsp;&nbsp; 现在做的工作是Java程序员，下家的工作是系统开发SE，也不是真正喜欢的工作，倒不如说，大部分人都无法抗争既定的命运，都在努力地生活。大学的室友，有的去了山大，有的去了浙大，最次也是中海大，还有去了香港读研，只有自己选择了就业，做了自己不喜欢的工作，留在青岛浑浑噩噩地度日子。 &nbsp;&nbsp; 对于这种命运真的非常不满，虽然这一年半发生了不少小插曲，尝试养了宠物猫，谈恋爱，尝试交朋友，参加音乐会，音乐节等等，这些小插曲让我感觉自己真的努力过。 &nbsp;&nbsp; 家人也是很希望我去读研，”研究生挣的钱多”这种说法已经听到不止一次了，”邻居家的孩子研究生毕业已经月入8k”这样的说法从上大学就一直听到，也正因为如此，才不敢将本就不多的青春放在国内的大学里读研，而是入社工作积攒经验，方便以后的重新读研。而且可能对于自己来说，最害怕的事莫过于无端浪费时间了，一想到读研两年后即将步入不惑，人生过去一半却一事无成，或者说：选择了这条路，没有让自己真正解脱。 &nbsp;&nbsp; 还记得小时候，寄宿在农村老家，总是听别人说自己的父亲如何如何，却从来没有真正见到过，后来长大了才慢慢从他人的只言片语中拼凑出这样一个人：复旦大学高材生， 在跨国公司工作，经常去美国欧洲出差，出轨小姨子，现在非常落魄，有三个孩子，中风偏瘫等等。可能正是这些只言片语才让我从小就有了出国的想法，想和曾经父亲一样去美国欧洲看一看，但是这种想法，在这个「家」里显得有些”不正常”了。 &nbsp;&nbsp; 从什么时候开始的呢？五岁之前没有多少记忆，之后的记忆只存在一些模糊的记忆。偶尔会把自己童年的遭遇发到网上，和网友一起痛骂原生家庭，像是在博取他人的同情，实际上也是在不断地提醒自己，在有些人眼里轻飘飘地说出”编”的故事现实中并不存在，更有人”无法想象”这种家庭，这些言论看法无时无刻都在提醒着我，是时候脱离原生家庭了。 &nbsp;&nbsp; 和那个年代一样，家庭里一般都有兄弟姐妹，我的母亲也是如此，一个哥哥，一个弟弟，印象中三家人不大和睦，表面上和和气气，背后都在辱骂诅咒，谁也看不起谁。搞笑的是，我们一家经常嘲笑谩骂的小舅一家，家里已经建了厂子，开豪车了。看不起的大舅一家，也回到老家种地建了几套房子了。最自命不凡的自家母亲，房子被骗走，自己两次离婚，大儿子性格乖张暴戾，好不容易组成家庭却鸡飞狗跳，债台高筑，二儿子一心脱离家庭，远走高飞。现在只想问一句，你忙碌了半辈子，究竟是在忙碌什么？ &nbsp;&nbsp; 也许正是因为那个人，才变成这副模样，一朝被蛇咬，十年怕草绳。才会变得”朝令夕改、言而无信”的。初中时就想国外留学，看看远方的世界，母亲非常赞成，说会全力支持我的生活，而等我真正申请院校的时候突然变卦，全力阻止我出国,说离家太远。选大学选专业的时候，也是随随便便让别人确定，理由也是:”离家近”。 我对于”离家近”这个说法恨之入骨，一个虚拟的家，不存在的地方怎么能作为理由呢。但是从小到大的经验告诉我，如果不让他们放心，我就不会放心。只有表现的不像那个人的儿子，才不会引起他们的反感。 &nbsp;&nbsp; 关于童年，已经回忆过无数次了，简单来说，还存在的记忆只剩下: 【因为和表哥玩火胳膊被打骨折，去了医院和医生打趣】，【成绩下降，被打】，【作业错了，被打】，【写字太烂，被打】，【手指离筷子头太近，被打】，【手指离筷子头太远，被打】，【吃饭只吃眼前的，被打】，【吃饭够不到远处站起来，被打】，【不听话，被打】，【顶撞大人，被打】，【作业本没写名字，被打】，【回话太慢，被打】，【花钱买游戏卡，被打】，【带零花钱去学校，被打】，【过年看烟花太高兴，被打】，【吃方便面，被打】。【被打时抽泣，被打】，【扇脸把手扇疼了，用鞋底打，用凳子打】，【反抗家庭暴力，拿菜刀抵住脖子】，【回家没有叫哥，被打】，【出门没有说目的地，被打】，【朋友家人介绍对象给他，觉得收到侮辱，被打】，【想玩游戏，被打】。。。看着这些记忆，有些好笑，也许他们并不是因为什么而打，单纯只是释放压力罢了。 &nbsp;&nbsp; 有趣的是，某次打完之后还拿走我的u盘，想看看最近在干什么，就他们这点能力，还想看出我藏得日记，真是搞笑。挨打也是家常便饭，挨骂倒是每天惯例，听过最多的是：“说实话不挨打”，挨打最多的是说完实话后，假话不伤人，实话才是。他们不放过任何可能的场合打压贬低，他们忘了，可被说的人怎么会忘呢？大学之后，挨打挨骂的次数几乎为0了，不知道是害怕了还是怎样，甚至在某次过年的时候，信誓旦旦的说出曾经的事情一笔勾销，而我的母亲也说:”都是为你好，干什么计较这些小事，心胸未免太狭隘了”。可是，我就是这种人怎么办呢？我心胸就是这么狭隘呢。直到拿到签证机票的那一刻，我这近二十年悬着的心终于安定下来，人生才刚开始呢，我才不会被这些烂人影响我原本的人生! &nbsp;&nbsp; 这片土地已经彻底没有值得留恋的东西了，剩下的是用一生去治愈童年。曾经的朋友、恋人、宠物、亲戚、同学、同事都已经不需要了，都在说，换个城市意味着放弃原来所经营的人脉资源，但是如果在原来城市的人脉资源都不多的情况下，去哪里都是一样的。况且，自己也是【地狱开局】了，一身的dubuff，【原生家庭暴力】【没房没车没存款】【不幸童年】【性格恶劣】【薄情寡义】等等无论是主观还是客观条件都已经很难翻身，只能从事IT，学习外语，换个赛道，换个城市开始。 &nbsp;&nbsp; 有这样的童年，唯一支撑着我的信念，就是有朝一日能够真正过自己的人生。 2023年10月19日更新 有多突然，周四请假准备面试，周五第一场面试，周末准备下一场，周一上午面试，下午收到了offer。 &nbsp;&nbsp;倒不如说心里还是没有准备好，想过无数次要过怎样的生活，最终还是选择了「从心」。 &nbsp;&nbsp; 就在某个早上，可能是看到别人的vlog心动了，可能是自己不甘堕落，拿出几个月没打开的简历，写上了自己的日语成绩，尝试投了几个简历。 没有想到事情很顺利，感谢第一家公司的hr姐姐，虽然最后没能一起共事，但是和她的面试非常开心，让我对日本的职场有了初步的了解，不至于一头雾水的准备面试。面试的过程只能用很惨来描述，全程日语倒是能够撑住，可是还是败在了最后的陷阱问题中。很遗憾，最终没有通过。 &nbsp;&nbsp; 但是正是这次经验让我有心理准备面对下一场面试，最终和面试官沟通甚欢，最终拿到了offer。 &nbsp;&nbsp; 直到今天正式发邮件书面通知，悬着的心才放下去一些。 2 &nbsp;&nbsp; 回想在青岛的这一年半，从最初的迷茫，孤独，到后来的习惯一个人生活，尝试摆脱孤独，到现在的习惯孤独。最喜欢的事就是去海边吹海风，望着远处，思考未来在哪个城市，过怎样的生活。在青岛来说，工资低很平常，自己对此倒也没有什么苛责，能养活自己就行了。 &nbsp;&nbsp; 职场氛围倒是挺好，每个人个性鲜明，大都能容忍。也许是已经进入离职的流程了，过往的种种也都成了说服自己的借口。甚至说，或许从刚入职的那天起，就已经料到了今天，这一年半的时间里并没有真正融入进去，始终保持了一定的距离。虽然午饭和晚饭都坐在一起吃饭，也仅此而已了。 &nbsp;&nbsp; 要说有什么不好的地方，那可真是，列出好几条，比如肆意窥探别人隐私，随便打断别人说话，提出意见然后什么反馈也没有等等，但是即使这样，部门里的氛围也是不错了，一起下去散散步，一起下班…，要说还有什么不好的，那大概就是得知我将要去日本工作后，经常跟我说一些”刻板印象”吧。 &nbsp;&nbsp; 青岛，毕竟我从这里生活了快6年，但是实际上在这里住了6年，并没有生活了6年，一直没有归属感。回忆里都是离别，离别同学室友，离别朋友，离别宠物等等，现在终于和青岛说再见了。虽然很多地方都没有逛过，很多景点都没有打卡，地图上标记的点很多没有去看，留下了一些遗憾。 3 &nbsp;&nbsp; 护照明天就能到，接下来是申请签证了，现在赴日的签证好像很好过了，前后差不多一个月，办理护照3天就完成了，签证快的话两周，之后就是机票了。 &nbsp;&nbsp; 最近也在整理现在的东西，绝大多数东西都要处理掉，自从上个月搬家就已经扔了很多东西，现在再扔的话，已经什么都不剩了。真的是孓然一身，踏上异国他乡。 &nbsp;&nbsp; 下次回来，可能要很久之后了，真的是非常突然，前后不过5天，就改变了自己的人生方向。或者说自己其实并没有人生规划呢… 面试的时候，也被问到职业规划了，当然也问到到日本的计划了。此时我也在想自己的未来规划是什么，如此简单的决定了自己的未来，以后后悔的机会也渺茫了，毕竟已经开始和同事告别了。也已经和住了6年的城市告别了。 &nbsp;&nbsp; 经常这样想，要是我在一个正常的家庭会怎样，这样就不会把自己人生最精彩的20年放在逃离家庭这种离谱的事情上了，自己的童年也好，大学生活也好，职业发展等等真的是失败啊。今后的生活会是怎样的…未知，还有期待。 &nbsp;&nbsp; 即将离开生活了20多年的地方了，敬自己，敬前程. 新的生活，新的开始。 加油!","link":"/2023/10/19/%E4%BA%BA%E7%94%9F%E7%9A%84%E5%8D%81%E5%AD%97%E8%B7%AF%E5%8F%A3/"},{"title":"java动态代理","text":"前言某个同事写了逆天代码，大概情况如下 123interface Demo { String selectByConditionSharding(String name);} 逆天在哪呢，根据条件查，但是条件是固定的，名字带分片，实际一点关系都没有. 为别人阅读代码提供困难，这是个人代码习惯的问题了，不再赘述. 但是在后面的代码中，看到这两行让我有所沉思 123456789class Demo { @Autowired ApplicationContext context; public void doSth() { Object bean = context.getBean(&quot;BeanName&quot;); bean.doSomeThing(); }} 看的出来,他考虑到了事务失效的情况,但是这让我陷入思考: 哪些情况下事务会失效 同一个类中this调用一定会失效吗 (不一定) Spring AOP 和 AspectJ 和 cglib到底怎么回事 带着以上问题，我去谷歌一下，最终整理了一下. 事务失效场景常见的几种场景简介,不细说，网上一搜一大堆: 没有指定且抛出受检异常(所有非RuntimeException) – 配置rollBackFor属性 异常被内部catch了，没有抛出. – 最好使用编程式事务transactionTemplate.execute() 同一个类中的方法调用 – 使用AspectJ作为代理方式 使用了final或static关键字 – 去掉 修饰符为非public – 改为public 传播方式设置不对 – 最好默认设置为requied 没有被spring管理，只有bean才能被管理 多线程… 使用分布式事务吧 动态代理Spring AOP 和 AspectJ 这两个东西常常放在一起说明，实际上是两个截然不同的东西。 现在常用的Spring AOP实际上借用了AspectJ的一些注解.致使我认为SpringAOP和AspectJ是同一个东西, 在Spring配置中开启&lt;aop:aspectj-autoproxy/&gt;即可识别AspectJ的一些注解 AspectJ AspectJ其实(在某些意义下)应该和Lombok并列的存在，某种程度独立于JVM，在编译期间就对类进行织入，实际上运行时已经是被代理的类了。也就是说使用AspectJ代理的类，在加载时就不是它自己了。 因为它是在{编译期间, 编译之后, 加载前}进行织入，所以运行期间就没有它什么事了。 Spring AOP SpringAOP则是对AOP概念在Spring架构下的一种实现，只在Spring容器中才能实现，无法脱离容器，而且也是在运行期间进行代理。 由于SpringAOP是运行期间进行动态代理的，所以在同一个类中调用自己的方法，是不会被代理，所以使用@Transactional主键的类事务就失效了. 如果让类内调用保留事务，则必须使用AspectJ来实现动态代理。可以在配置中切换为AspectJ代理 1&lt;tx:annotation-driven mode=&quot;aspectj&quot;/&gt; JDK Proxy 和 Cglib 动态代理有两种实现方式，一种是JDK原生的方法，另一种则是使用字节码技术。 JDK原生方法实际上就是通过代码实现代理模式, 具体实现方式网上有很多了。总之就是必须要实现接口，编写代码。而使用Cglib则比原生JDK方式更自由，不需要显式实现接口，而是在编译期对源代码进行改写。 都不能对final修饰的类和方法进行代理。 总结在同一个类中调用不一定会使事务失效，需要非原生jdk的动态代理方式才能实现，SpringAOP使用了jdk原生的动态代理实现方式，因此不能处理同一个类中的方法调用问题。","link":"/2023/08/31/java%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/"},{"title":"一次git代码合并导致的问题","text":"因为一次代码合并失误，导致线上事故，扣了绩效，引以为戒 缘由在一个月前某次发版的时候，使用cherry-pick不熟练，将别人的代码覆盖了，这一个月的时间造成了一些单子多生成了，产生了比较严重的后果，因此将其记录下来。 对一个文件进行修改提交之后，另一个人在修改的基础上再次进行修改，然后等到正式上线的时候，最后修改的先发上去，那么问题来了，如果此时我提交第一次修改到master分支，会如何解决冲突？ 这就是这次事故的原因了。 cherry-pick的时候产生了冲突，在解决冲突的时候，使用第一版的代码覆盖了后续的代码。 12// change 1 -- committed by A 1:00// change 2 -- committed by B 2:00 对应如果此时先提交了B，后提交了A，会触发resolve conflict，此时代码是没有B提交，很容易将B代码覆盖，但是如果隔了几行，此时提交的顺序就可以改变了. 估计是检测了相邻的几行代码 现阶段对于git的应用还是拉取开发分支到本地，修改后直接提交推送到远程，架构部的推荐方式则是使用多个分支，如hotfix,release,feature等等，分别代表”紧急修补”,”正式”,”业务功能”等，但是由于老项目不支持本地启动，因此无法实现这个设想。 更新日本公司对于代码版本管理倒是更加精细了，倒不如说细致过头了。 每一个问题创建一个分支，修改测试完成后发起merge-request，然后由负责人进行审核，通过后合并到测试分支，测试分支测试结束后，提交merge-request，审核完成后合并到开发分支，开发环境测试后再合并到用户测试分支中。这样一个不断测试-request-审核的流程。非常费时间，但是责任划分最明确了。 这也是我上个现场，一行代码改了两个星期的原因。","link":"/2023/09/08/%E4%B8%80%E6%AC%A1git%E4%BB%A3%E7%A0%81%E5%90%88%E5%B9%B6%E5%AF%BC%E8%87%B4%E7%9A%84%E9%97%AE%E9%A2%98/"},{"title":"夜で散歩","text":"大森-&gt;御台場ｰ&gt;天王洲アイルｰ&gt;品川ｰ&gt;大崎ｰ&gt;戸越ｰ&gt;荏原 結局、歩くのは好きだ。 今日2時間も歩いて帰って。そう、御台場から家に。途中に品川駅前広場のマクドナルドで晩ごはんを済ませてから直向きに家に帰った ボロックをアップロードしたのは半年ぶりだった。日本に来てからもう五ヶ月で、半年に近いくらいだ。なんとなくずっと心の底から落ち着かざるおえないまま。この間TOEICとN1をサインアップしたことはしたが、余裕っていうか、全然テストへの準備は心から備えてない状態で大変だった。 「縁起性空」、日本に来てからこの半年以来遠足することもなくという考えかどうか、成り行きでゆりかもめに乗ってみたいと思った。バスで大森駅に行って、新橋までゆりかもめに乗って御台場海浜公園へ行った。浜辺に散歩しながら、昔の思いが思い浮かべた。青島に居たところ、心を落ち着けるためこの様な散歩も様々であった。砂浜で遊んでいた人たちを見て自分の孤独を感じることに気付いた。バンドを組合せて楽しめる女子高校生達、散歩道で走る男子高校生達、写真を撮るカップル達に羨ましさが出てくる。これはいわゆる本物の青春だと思う。自分の高校生活は青春とは言えないな、ただ他人の期待に応じて勉強以外のもの禁じられて、つまらない三年間に過ぎない。滑稽な恋話、お子様な物語、みっともない人間関係と脆い家族関係だった。 高層ビルの間に散歩すると、自分の離れてる感覚をはっきり納得してた。歩いた頃、多くの時間は頭を上げて、満開の桜やり、マンションとビルやり、仰いでばかりこそ、自分の弱さ感じ得る 同じような光景があると思い浮かべた。十数年前、年玉をもらってそばからすぐ家から離れてるショッピングモールに行って、そこのゲーセンで一人に朝から午後まで遊んで過ごした。最後に0.5元しか持ってない、バスの運賃なら大丈夫はず。どんな原因か今も思わないが、歩いて家に帰ってっと決定した。百貨ビルまで一時半ぐらい疲れたあまりにバスに乗って帰った。可怪しいのはこの記憶は大したことはないが、どうして十数年後の今でも思えるのか全然わかんない。昔の自分と同じ決定を下すとはさすが当時の私は考えづらいでしょうか。馴染まない街で、知らない国で。 なんか慣れやすいと自分がこう考えてる、自分より半年が早いの同僚たちと比べてた。「どの中華料理にいくか」「中国語が出る店に行きたいな」と話し合ってる同僚たちと違って、一ヶ月目で日本人の店員さんにスマホカードを作ってもらった、二ヶ月目で日本人の先生に診られた。早めに日本語を話せるように頑張った。 自分を無理矢理に走らせるときに限って冷静できる。ほとんどの人は普通の人だと言われている、いかなる努力とも社会の階段に囲まれ向上できずに済む。やはり悔しい、一学期の授業料は年収より高いという人も大勢いる。もし本当にそんな機会があれば、大学院に入りたい。","link":"/2024/04/18/%E5%A4%9C%E3%81%A7%E6%95%A3%E6%AD%A9/"},{"title":"夜里散步","text":"大森-&gt;御台場ｰ&gt;天王洲アイルｰ&gt;品川ｰ&gt;大崎ｰ&gt;戸越ｰ&gt;荏原 到头来，我最喜欢的事，还是走路。 今天花了两个小时的时间，从御台场走回家，没错是走路回家的，中途在品川站前的M记吃了晚饭，之后就一路走回家。 上次更新博客还是去年，来到日本已经过了五个月了，马上就要半年了，这段时间一直静不下心来，虽然报名了托业考试和N1考试，但是还是没有时间去静下心来复习准备考试。 “缘起性空”，可能是想着来日半年了还没怎么出过远门吧,想着去坐一坐百合鸥线，就临时起意，坐公交到大森站，一路北上到新桥，乘坐百合鸥到御台场，散步在台场海滨，不由得想起在青岛的日子，也是在海边沙滩散步，看着在海边一起拍照的人群，心里不免产生一丝羡慕，看着他们的高中生在学习之余能够组乐队表演，参加各种活动尽情享受青春，而想到自己的高中，仅仅是为了考上大学而不情不愿地熬过三年， 所谓的回忆也只是在现在看来有些幼稚好笑的感情戏。 漫步在高楼大厦中，深刻地体会到自己其实不属于这里，散步时，大部分时间都是仰着头，无论是满开的樱花也好，还是望不到头的大厦也好，一直仰着头才感觉自己的卑微。 这种场景，让我梦回十几年前，四五年级的我拿到压岁钱就迫不及待地坐车去城市开发区的购物中心，那里有一家街机游戏厅，跑这么远是怕被父母发现后挨打。一百块钱的游戏币，一个人从早玩到下午，手上还有5毛钱，坐公交车完全可以，但是不知什么原因，我从开发区一路往家走，也是走了一个半小时，走到百货大楼实在是走不动了才坐车回家。这段记忆没有什么印象深刻的事，但是却莫名其妙能让我在十几年后再次回想起来。同样的一个人走路回家，陌生的路，复杂的心情。十几年前的自己也不会想到未来的自己和以前一样，在遥远的陌生的城市走两小时路回家吧。 感觉自己真的适应的很快，比自己早来6个月的同事们，现在还在讨论去哪家中华料理，尽量找会中文的店。而自己好像带着任务一样，第一个月就找日本店员办手机卡，第二个月就去找了日本医生，催促自己赶紧学会说日语。也因此和其他新同事格格不入，虽然也很想像他们一样，周末一起去池袋中餐厅，聚会烤肉，而不是自己在家看剧，控制不住地熬夜。 只有在疯狂走路消耗自己的体力的时候才会冷静下来。都说大部分的人都是平庸的，拼搏一辈子也难以阶级提升。但是真的是不甘心啊，有人一年的学费，比一年的工资都要高，如果自己真的有机会，真的想去读一次研究生。最不甘心的就是没有条件去努力。想学车的人付不起车费，想学游泳的人去不起游泳馆。不想开车，游泳太危险等理由虽然很充分，但是也是只能骗骗自己了。有钱人不会感叹自己为什么这么有钱，反而是穷人时常愤怒于是什么让自己贫穷。也许之前一直在拘泥于家庭让自己不得不低着头走路，但是现在我只想自己抬起头。即便没有抬头的底气，也许迈出一步走出舒适圈就已经足够了，还是想再次拼一次。","link":"/2024/04/18/%E5%A4%9C%E9%87%8C%E6%95%A3%E6%AD%A5/"},{"title":"日语学习记录(持续更新)","text":"风乍起，合当奋意向人生 N1考试时间: 2024年7月7日N1考试时间: 2023年12月2日 最后更新: 2023年12月1日最后更新: 2023年9月15日 2023年12月1日 正式入职日本的公司。至此，在中国的日语学习记录到此结束，接下来是在日的学习记录. 2023年11月27日 抵达成田机场,后转到江东区北沙团地，并去区役所登记户籍信息 2023年10月18日 效率很快，护照审批下午就下来了，预计这周五会送到,之后就是申请在留和签证了 17日 上午办理护照 返校去取了JLPT N2的资格证书和成绩证明 16日 上午参加公司面试，感觉不错，然后下午的时候就收到了offer，地点东京秋叶原区。约定12月1日入社。提前一周赴日暂时住公司宿舍。 上午面试，下午拿到了offer 开始准备赴日材料 12日 今天投递简历后，收到了第一份面试邀约，同时还参加了 fast offer的项目，最后拿到了两家公司的面试机会。 从今天开始请了两天假. 认真准备第一次日语面试. 2023年9月15日 复习语法 单词 (940) 13日 这几天一口气复习完所有N1语法，接下来就是将这些语法全部背熟，然后复习N2语法 蓝宝书 N1 语法：第二十单元 (20/20) 单词 (840) 8日 语法学习进展不错，可能是之前学习N2的时候，教材超纲了，提前学习了很多N1的语法单词还是比较棘手，学习完语法后主攻单词, 一个月学习3000词.阅读和听力需要慢慢积累 蓝宝书 N1 语法: 第十二单元 (12/20) 单词 50 (610) 5日 蓝宝书 N1 语法: 第八单元 (8/20) 单词 50 (460) 4日 未完成原定计划， 9月6号学完所有语法,计划延长两周学完蓝宝书所有N1语法单词按照当前进度勉勉强强学完，只是后面的听力和阅读有些难 蓝宝书 N1 语法: 第七单元 (7/20) 单词 新学 50 (410) 3日 蓝宝书 N1 语法: 第六单元 (6/20) 单词 新学 50 (360) 2日 蓝宝书 N1 语法， 第五单元 (5/20) 单词 新学 50 (310)","link":"/2023/09/02/%E6%97%A5%E8%AF%AD%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/"},{"title":"游戏AI初探","text":"randomness高斯分布用于模拟生活中的一些行为, 可以是物理特性，认知能力，消遣时间或子弹分布。 Average or max speed Average or max acceleration Size, width, height, or mass Visual or physical reaction time Fire or reload rate for firing Refresh rate or cool-down rate for healing or special abilities Chance of missing or striking a critical hit 随机数过滤为了留住玩家，可以通过对随机数进行过滤，来让玩家或对手获得优势 噪声最后，柏林噪声不仅仅是图像领域，1D柏林噪声可以用于平滑过渡动作，动画，和许多其他的行为。 Movement (direction, speed, acceleration) Layered onto animation (adding noise to facial movement or gaze [Perlin 97]) Accuracy (winning or losing streaks, being in the groove, luck, or success) Attention (guard alertness, response time) • Play style (defensive, offensive) Mood (calm, angry, happy, sad, depressed, manic, bored, engaged) FSM12345678public abstract class FSMTransition { // 判断当前转换是否成立，如果为真，有条路从当前状态走到目标状态 abstract boolean isValid(); // 得到状态转换的最终状态 abstract FSMachine getNextState(); // 发生在原状态和目标状态中间的事 abstract void onTransition();} 12345678910public abstract static class FSMachine { // 进入状态 abstract void onEnter(); // 每tick更新 abstract void onUpdate(); // 离开状态 abstract void onExit(); // 可选的状态转换路线 List&lt;FSMTransition&gt; transitions = new ArrayList&lt;&gt;();} 1234567891011121314151617181920212223public static class FiniteStateMachine { // 主要更新方法 void update(){ // 判断当前状态的所有可能转换路线 for (FSMTransition transition : activeState.transitions) { if (transition.isValid()) { // 如果可以选择该路线 activeState.onExit(); activeState = transition.getNextState(); transition.onTransition(); activeState.onEnter(); break; } } // 更新状态 activeState.onUpdate(); }; // 状态机所持有的所有状态 List&lt;FSMachine&gt; states; // 初始状态 FSMachine initState; // 当前状态 FSMachine activeState;} 需要注意的是，具体的逻辑在onExit(), onUpdate(), onExit(), onTransition()这四个方法中实现，其中，onTransition()方法应与具体AI逻辑无关，如日志记录，全局事件等. Hierarchical FSM当开发到晚期时，状态会几十上百个，增加新状态时会很复杂且容易出错。 在HFSM中，每个单独的状态都是一个状态机。可以使整个状态机分离到单独的多个状态机中. Behavior Treesa example: 12345public abstract static class Behavior { abstract void onInit(); // 初次进入 abstract State update(); // 更新状态 abstract void onTerminate(State); // 离开} 行为树的实现可以通过装饰器或组合模式去实现。 新的行为树可以多个实体共享，使用DSL，用于多种逻辑. Utility Systems效用系统，用于处理非布尔值信息。比起饿了吃饭，效用系统计算了多饿，多重等非01信息。通过多种因素计算出一个分数，或者加上一个随机值，根据最终的值进行选择。 Goal-Oriented Action Planners目标导向型行为选择 GOAP is derived from the Stanford Research Institute Problem Solver 给予一个目标，然后在所有可选的方法中自行选择，让AI自动选择。","link":"/2023/08/30/%E6%B8%B8%E6%88%8FAI%E5%88%9D%E6%8E%A2/"},{"title":"记一次被诈骗经历","text":"先说结果: 共计被诈骗1032元 经历复盘起因在steam平台上，有个「1」级的账号突然加我好友，想着以前喜欢扩列，就发了很多交友信息，没想太多就同意了。没想到的是，到了晚上11点，他突然用「英语」给我发消息,说有个和我头像昵称一样的人买了一个$1500的饰品，问账号是不是我，并且说他跟steam客服交谈，我的账号正在被封禁。而我本人是不能看到的，而且还煞有其事地拿出截图，看着挺正式，我也就没有怀疑。 神秘邮件地址之后他让我给一个地址发邮件，解释这是一个误会，希望得到客服帮助，这个地址一眼看不出问题，我也就发了，过了一会有了回信，并且附上了一个人的联系方式，让我添加他为好友。 到这一步真的是槽点很多，任何一步发现问题都没有后面的事了。但是当时脑子确实没有反应过来。就上当了。 解冻账号添加上之后，对方说要通过支付宝和微信进行临时支付，这些钱会在验证完成后退回，而到这里，一般情况下会起疑心，但是不知道为什么当时一点都没有怀疑，反而继续付款，支付宝损失了600，随后是微信，好在，微信在我支付了400之后冻结了我的转账功能，这个时候我才反应过来，到底是早还是晚。随后报警。 事后处理虽然报警了，但是由于steam平台不受国内监管，付款地址也无法追踪，能够追回的希望非常渺茫，只好做了简单的记录回家了。当时已经是凌晨1点了，到家之后迟迟不能睡去，直到4点，请了一上午假，换换心情。当时很想注销账号，以免再次被骗。不过还是没有这样做，不然又会增加损失。 获得教训面对涉及钱财的事情谨慎再谨慎真的是墨菲定律，越怕什么越来什么，但是有句话也说的对:”能用钱买到的教训是最值的教训”, 这件事肯定能让我记至少20年。以后面对涉及钱财的事情，首要目标是不花钱。避免被骗。 不要贷款吃💩为什么要这么说，对方说的是我的账号将要被冻结, 现在是如何补救。那么我能不能等到他真给我封禁了，我再想办法补救呢？一旦想着提前补救，这就中了骗子的套路了。 个人信息保护对方能加我好友，并且获取到我的详细信息，自己没有保护好隐私也算是一个原因，所以之后个人信息要注重保护，不会再公开场合泄露个人信息。或者，使用伪造的假信息。 对英语说日语，对日语说英语，优先中文也许是看到对方说的英文所以警惕性变低了，如果对方说中文肯定会有所怀疑，因此，以后面对这种事，第一要义就是以英语对日语，以日语对英语。同时注意对方语法是否对。日语是主宾谓，英语和汉语一样主谓宾，通过这点可以筛选出是不是机翻，其次再统一说中文，提高警惕。 最后我估计是之前在酒店登录steam账号导致账号信息泄露了，实在是不应该，损失最大化，因此以后的生活中，一定要记录花销，设定目标限额，一切都从自身出发.","link":"/2023/08/28/%E8%AE%B0%E4%B8%80%E6%AC%A1%E8%A2%AB%E8%AF%88%E9%AA%97%E7%BB%8F%E5%8E%86/"},{"title":"详解从jenkins到docker的迁移过程","text":"建设中 关键词： Jenkins, Docker, kaniko, 持续集成，容器化， maven 到现在为止，项目已经在docker上运行了至少一个月了，目前来看，除了资源占用大，响应慢，启动慢，查问题麻烦等等，唯一的好处就是发版变得更加容易了。早就听说最原始的版本，就是在本地打包，然后发布到远程服务器上，这种情况下需要手动处理冲突，如果缺少jar包，还少手动去修复。之后，在我入职的时候已经是下一阶段了——Jenkins服务器部署，和之前相比，这种部署方式不需要考虑上传，启动等，但是还是需要在发布完之后登录每台服务器检测是否正常启动直到现在的容器化，这些问题基本上得到解决：打包的同时会处理依赖冲突，无感知切换，skywalking,收集日志到ES中进行处理。真正做到了一键部署，虽然现在稳定性不是很好，在部署扩展方面已经比以前好很多了。 首先从项目的架构开始说起，与其说是微服务，实际上的感觉就像分布式单体, 其实关于这个，还是有些争议的。我一开始也认为","link":"/2023/09/08/%E8%AF%A6%E8%A7%A3%E4%BB%8Ejenkins%E5%88%B0docker%E7%9A%84%E8%BF%81%E7%A7%BB%E8%BF%87%E7%A8%8B/"},{"title":"项目中缓存中间件的应用及思考","text":"建设中 关键词：Redis，ehCache， hutool-cache，guava-cache","link":"/2023/09/08/%E9%A1%B9%E7%9B%AE%E4%B8%AD%E7%BC%93%E5%AD%98%E4%B8%AD%E9%97%B4%E4%BB%B6%E7%9A%84%E5%BA%94%E7%94%A8%E5%8F%8A%E6%80%9D%E8%80%83/"},{"title":"项目中elasticsearch的应用及思考","text":"建设中 关键字： MySQL, binlog, canal, 搜索，导出， elasticsearch, 模块","link":"/2023/09/08/%E9%A1%B9%E7%9B%AE%E4%B8%ADelasticsearch%E7%9A%84%E5%BA%94%E7%94%A8%E5%8F%8A%E6%80%9D%E8%80%83/"},{"title":"重新恢复更新 from 2024","text":"Prologue来到日本已经快半年了。blog的更新一直在搁置状态中，搬家，熟悉周围环境以及工作的原因，导致我一直想更新blog都有些力不从心了。 最近差不多有些稳定下来了，所以就打算把之前漏掉的一些地方进行修改，顺便记录来到日本之后的生活。 赴日后的三个月 重要的是过程，但是过程无聊且辛苦 刚来到日本的时候，一切都是那么新鲜，但是也没有熟人接应，一切都是陌生的。公司的宿舍在团地中，类似国内的小区，楼下有一家罗森便利店，走路十分钟ario商场，里面的伊藤洋华堂是经常买菜的地方。 关于工作一月份去了新现场，但是刚入场的时候得了牙髓炎…算是给了我致命一击，好在楼下有家牙科诊所，结果居然是曾经根管治疗的一颗牙，没有治好还把旁边的牙弄坏了。没办法只好开启漫长的治牙之路。关于这部分之后会整理出来。 关于工作没什么好说的，自日本，IT不是IT，而是服务，翻来覆去就那么几家公司，还都不是什么高技术的。所以来到这里后算是看开了。重要的是生活。 不过好在是个不怎么加班的工作，准点下班的次数远多于加班的次数。而且从三月份开始开始担任leader的职务，虽然没什么经验，但是也是希望尽快完成心态和角色的转变吧。 部会3月29号的晚上，部门会议结束后部长组织去了中华料理店，在晚会上，大家还是比较生疏，毕竟工作的地点其实不固定，更多的是在家远程或者去现场，平时见面的机会几乎没有。而且我的日语水平仅仅是自学程度，勉勉强强能够对话。 虽然是中华料理，但是味道比不上国内的，有种味噌的味道，猪肉还是有股腥味。但是部里的日本人倒是挺喜欢吃的。 当然按照惯例，新人还是去和管理层的人敬酒混个脸熟的。无非就是自我介绍然后说请多关照等等。可以说有种很强的既视感了。 Epilogue压力还是会有一些的，4月份会来一批新员工，很多是日本的应届生，看介绍给我看出一身冷汗，不仅有筑波大学，庆应义塾，早稻田的学生，还有东京大学的…当然现在我的小组里有个qs30学校毕业的…和清华大学不相上下了。我一个末流985的不敢吱声。ヽ(*。&gt;Д&lt;)o゜) 即使如此，没能读研依旧是我不能释怀的事. 关于图片 牌中的日文是【あのよろし】，但是却读作【あかよろしa no yo ro shi】，这里的の读作か,意思是“非常好”。","link":"/2024/04/01/%E9%87%8D%E6%96%B0%E6%81%A2%E5%A4%8D%E6%9B%B4%E6%96%B0-from-2024/"},{"title":"项目中设计模式的尝试与反馈","text":"建设中与其说Java是面向对象的，不如说是在面向对象的语言中实现面向过程. 一个方法里成千上万行逻辑，if用的也是尤达表达式，很难不让人怀疑原先维护这个项目的人是不是写C语言的。 其实就算是C语言的函数，也没有这样一个函数写到底的，大都是按功能进行拆分，那么在这个项目中","link":"/2023/09/08/%E9%A1%B9%E7%9B%AE%E4%B8%AD%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E7%9A%84%E5%B0%9D%E8%AF%95%E4%B8%8E%E5%8F%8D%E9%A6%88/"}],"tags":[{"name":"LibGdx","slug":"LibGdx","link":"/tags/LibGdx/"},{"name":"Box2d","slug":"Box2d","link":"/tags/Box2d/"},{"name":"Java","slug":"Java","link":"/tags/Java/"},{"name":"Spring","slug":"Spring","link":"/tags/Spring/"},{"name":"GameDev","slug":"GameDev","link":"/tags/GameDev/"},{"name":"算法","slug":"算法","link":"/tags/%E7%AE%97%E6%B3%95/"},{"name":"日语","slug":"日语","link":"/tags/%E6%97%A5%E8%AF%AD/"},{"name":"生活","slug":"生活","link":"/tags/%E7%94%9F%E6%B4%BB/"},{"name":"MySQL","slug":"MySQL","link":"/tags/MySQL/"},{"name":"Git","slug":"Git","link":"/tags/Git/"},{"name":"Java Spring","slug":"Java-Spring","link":"/tags/Java-Spring/"},{"name":"Docker","slug":"Docker","link":"/tags/Docker/"},{"name":"Java Redis","slug":"Java-Redis","link":"/tags/Java-Redis/"},{"name":"缓存","slug":"缓存","link":"/tags/%E7%BC%93%E5%AD%98/"},{"name":"ES","slug":"ES","link":"/tags/ES/"},{"name":"Coding","slug":"Coding","link":"/tags/Coding/"}],"categories":[{"name":"游戏相关","slug":"游戏相关","link":"/categories/%E6%B8%B8%E6%88%8F%E7%9B%B8%E5%85%B3/"},{"name":"开发相关","slug":"开发相关","link":"/categories/%E5%BC%80%E5%8F%91%E7%9B%B8%E5%85%B3/"},{"name":"日常生活","slug":"日常生活","link":"/categories/%E6%97%A5%E5%B8%B8%E7%94%9F%E6%B4%BB/"},{"name":"开发","slug":"游戏相关/开发","link":"/categories/%E6%B8%B8%E6%88%8F%E7%9B%B8%E5%85%B3/%E5%BC%80%E5%8F%91/"},{"name":"中间件","slug":"开发相关/中间件","link":"/categories/%E5%BC%80%E5%8F%91%E7%9B%B8%E5%85%B3/%E4%B8%AD%E9%97%B4%E4%BB%B6/"},{"name":"容器化","slug":"开发相关/容器化","link":"/categories/%E5%BC%80%E5%8F%91%E7%9B%B8%E5%85%B3/%E5%AE%B9%E5%99%A8%E5%8C%96/"}],"pages":[{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation to learn how to use.","link":"/page.html"},{"title":"关于","text":"御幸ヶ丘关于我断断续续地坚持下来了，从来都觉得自己很不幸有很幸运，出身不幸，但是总能遇到幸运的人和事。 总之，总会有办法的，我如是想到。 关于博客2月份的时候经常去川崎办公，办公楼位于川崎市幸区さいわいく.我很喜欢这里，如果可以的话明年搬家到川崎附近居住。 从东京进入川崎的时候，一路上都是幸区xxx,御幸xx等等的站名，翻译过来的话就是幸运，幸福等等。所以就自然而然的想把这份心情放到博客上来，记录生活中的幸福时刻。","link":"/about/index.html"},{"title":"最后更新","text":"更新 2023-09-11 《Controller中返回值的处理逻辑》","link":"/update/index.html"}]}